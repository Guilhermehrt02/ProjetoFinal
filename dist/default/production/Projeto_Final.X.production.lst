

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 19:26:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4520 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataBANK0
    94  0024A6                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for tarefas@F268
    98  0024A6  28                 	db	40
    99  0024A7  52                 	db	82
   100  0024A8  29                 	db	41
   101  0024A9  43                 	db	67
   102  0024AA  61                 	db	97
   103  0024AB  6D                 	db	109
   104  0024AC  69                 	db	105
   105  0024AD  6E                 	db	110
   106  0024AE  68                 	db	104
   107  0024AF  61                 	db	97
   108  0024B0  72                 	db	114
   109  0024B1  00                 	db	0
   110  0024B2  00                 	db	0
   111  0024B3  00                 	db	0
   112  0024B4  00                 	db	0
   113  0024B5  00                 	db	0
   114                           
   115                           ;initializer for tarefas@F266
   116  0024B6  28                 	db	40
   117  0024B7  44                 	db	68
   118  0024B8  29                 	db	41
   119  0024B9  4D                 	db	77
   120  0024BA  65                 	db	101
   121  0024BB  72                 	db	114
   122  0024BC  63                 	db	99
   123  0024BD  61                 	db	97
   124  0024BE  64                 	db	100
   125  0024BF  6F                 	db	111
   126  0024C0  00                 	db	0
   127  0024C1  00                 	db	0
   128  0024C2  00                 	db	0
   129  0024C3  00                 	db	0
   130  0024C4  00                 	db	0
   131  0024C5  00                 	db	0
   132                           
   133                           ;initializer for tarefas@F264
   134  0024C6  28                 	db	40
   135  0024C7  4C                 	db	76
   136  0024C8  29                 	db	41
   137  0024C9  4C                 	db	76
   138  0024CA  69                 	db	105
   139  0024CB  6D                 	db	109
   140  0024CC  70                 	db	112
   141  0024CD  61                 	db	97
   142  0024CE  72                 	db	114
   143  0024CF  20                 	db	32
   144  0024D0  63                 	db	99
   145  0024D1  61                 	db	97
   146  0024D2  73                 	db	115
   147  0024D3  61                 	db	97
   148  0024D4  00                 	db	0
   149  0024D5  00                 	db	0
   150                           
   151                           ;initializer for tarefas@F262
   152  0024D6  28                 	db	40
   153  0024D7  55                 	db	85
   154  0024D8  29                 	db	41
   155  0024D9  45                 	db	69
   156  0024DA  73                 	db	115
   157  0024DB  74                 	db	116
   158  0024DC  75                 	db	117
   159  0024DD  64                 	db	100
   160  0024DE  61                 	db	97
   161  0024DF  72                 	db	114
   162  0024E0  00                 	db	0
   163  0024E1  00                 	db	0
   164  0024E2  00                 	db	0
   165  0024E3  00                 	db	0
   166  0024E4  00                 	db	0
   167  0024E5  00                 	db	0
   168                           
   169                           	psect	smallconst
   170  000600                     __psmallconst:
   171                           	callstack 0
   172  000600  00                 	db	0
   173  000601                     _valor:
   174                           	callstack 0
   175  000601  3F                 	db	63
   176  000602  06                 	db	6
   177  000603  5B                 	db	91
   178  000604  4F                 	db	79
   179  000605  66                 	db	102
   180  000606  6D                 	db	109
   181  000607  7D                 	db	125
   182  000608  07                 	db	7
   183  000609  7F                 	db	127
   184  00060A  6F                 	db	111
   185  00060B  77                 	db	119
   186  00060C  7C                 	db	124
   187  00060D  39                 	db	57
   188  00060E  5E                 	db	94
   189  00060F  79                 	db	121
   190  000610  71                 	db	113
   191  000611                     __end_of_valor:
   192                           	callstack 0
   193  000611  55                 	db	85
   194  000612  4C                 	db	76
   195  000613  44                 	db	68
   196  000614  52                 	db	82
   197  000615  53                 	db	83
   198  000616  58                 	db	88
   199  000617  41                 	db	65
   200  000618  42                 	db	66
   201  000619  59                 	db	89
   202  00061A  73                 	db	115
   203  00061B                     __end_of_charKey:
   204                           	callstack 0
   205  0000                     _T2CON	set	4042
   206  0000                     _CCP2CON	set	4026
   207  0000                     _CCPR2L	set	4027
   208  0000                     _PR2	set	4043
   209  0000                     _T0CON	set	4053
   210  0000                     _TMR0L	set	4054
   211  0000                     _TMR0H	set	4055
   212  0000                     _INTCON	set	4082
   213  0000                     _ADCON1	set	4033
   214  0000                     _TRISE	set	3990
   215  0000                     _TRISD	set	3989
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISB	set	3987
   218  0000                     _TRISA	set	3986
   219  0000                     _PORTE	set	3972
   220  0000                     _PORTD	set	3971
   221  0000                     _PORTC	set	3970
   222  0000                     _PORTB	set	3969
   223  0000                     _PORTA	set	3968
   224  00061B                     STR_1:
   225  00061B  4F                 	db	79	;'O'
   226  00061C  70                 	db	112	;'p'
   227  00061D  63                 	db	99	;'c'
   228  00061E  61                 	db	97	;'a'
   229  00061F  6F                 	db	111	;'o'
   230  000620  20                 	db	32
   231  000621  6C                 	db	108	;'l'
   232  000622  65                 	db	101	;'e'
   233  000623  6D                 	db	109	;'m'
   234  000624  62                 	db	98	;'b'
   235  000625  72                 	db	114	;'r'
   236  000626  65                 	db	101	;'e'
   237  000627  74                 	db	116	;'t'
   238  000628  65                 	db	101	;'e'
   239  000629  3A                 	db	58	;':'
   240  00062A  00                 	db	0
   241  00062B                     STR_2:
   242  00062B  41                 	db	65	;'A'
   243  00062C  6A                 	db	106	;'j'
   244  00062D  75                 	db	117	;'u'
   245  00062E  73                 	db	115	;'s'
   246  00062F  74                 	db	116	;'t'
   247  000630  65                 	db	101	;'e'
   248  000631  20                 	db	32
   249  000632  74                 	db	116	;'t'
   250  000633  65                 	db	101	;'e'
   251  000634  6D                 	db	109	;'m'
   252  000635  70                 	db	112	;'p'
   253  000636  6F                 	db	111	;'o'
   254  000637  3A                 	db	58	;':'
   255  000638  00                 	db	0
   256  000639                     STR_5:
   257  000639  4C                 	db	76	;'L'
   258  00063A  65                 	db	101	;'e'
   259  00063B  6D                 	db	109	;'m'
   260  00063C  62                 	db	98	;'b'
   261  00063D  72                 	db	114	;'r'
   262  00063E  65                 	db	101	;'e'
   263  00063F  74                 	db	116	;'t'
   264  000640  65                 	db	101	;'e'
   265  000641  21                 	db	33
   266  000642  21                 	db	33
   267  000643  00                 	db	0
   268  000644                     STR_3:
   269  000644  28                 	db	40
   270  000645  53                 	db	83	;'S'
   271  000646  29                 	db	41
   272  000647  6D                 	db	109	;'m'
   273  000648  2D                 	db	45
   274  000649  28                 	db	40
   275  00064A  73                 	db	115	;'s'
   276  00064B  29                 	db	41
   277  00064C  6D                 	db	109	;'m'
   278  00064D  2B                 	db	43
   279  00064E  00                 	db	0
   280  00064F                     STR_4:
   281  00064F  28                 	db	40
   282  000650  41                 	db	65	;'A'
   283  000651  29                 	db	41
   284  000652  73                 	db	115	;'s'
   285  000653  2D                 	db	45
   286  000654  28                 	db	40
   287  000655  59                 	db	89	;'Y'
   288  000656  29                 	db	41
   289  000657  73                 	db	115	;'s'
   290  000658  2B                 	db	43
   291  000659  00                 	db	0
   292  00065A  00                 	db	0	; dummy byte at the end
   293  0000                     
   294                           ; #config settings
   295                           
   296                           	psect	cinit
   297  00259C                     __pcinit:
   298                           	callstack 0
   299  00259C                     start_initialization:
   300                           	callstack 0
   301  00259C                     __initialization:
   302                           	callstack 0
   303                           
   304                           ; Initialize objects allocated to BANK0 (64 bytes)
   305                           ; load TBLPTR registers with __pidataBANK0
   306  00259C  0EA6               	movlw	low __pidataBANK0
   307  00259E  6EF6               	movwf	tblptrl,c
   308  0025A0  0E24               	movlw	high __pidataBANK0
   309  0025A2  6EF7               	movwf	tblptrh,c
   310  0025A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   311  0025A6  6EF8               	movwf	tblptru,c
   312  0025A8  EE00  F080         	lfsr	0,__pdataBANK0
   313  0025AC  EE10 F040          	lfsr	1,64
   314  0025B0                     copy_data0:
   315  0025B0  0009               	tblrd		*+
   316  0025B2  CFF5 FFEE          	movff	tablat,postinc0
   317  0025B6  50E5               	movf	postdec1,w,c
   318  0025B8  50E1               	movf	fsr1l,w,c
   319  0025BA  E1FA               	bnz	copy_data0
   320                           
   321                           ; Clear objects allocated to COMRAM (32 bytes)
   322  0025BC  EE00  F05D         	lfsr	0,__pbssCOMRAM
   323  0025C0  0E20               	movlw	32
   324  0025C2                     clear_0:
   325  0025C2  6AEE               	clrf	postinc0,c
   326  0025C4  06E8               	decf	wreg,f,c
   327  0025C6  E1FD               	bnz	clear_0
   328  0025C8                     end_of_initialization:
   329                           	callstack 0
   330  0025C8                     __end_of__initialization:
   331                           	callstack 0
   332  0025C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   333  0025CA  6EF8               	movwf	tblptru,c
   334  0025CC  0100               	movlb	0
   335  0025CE  EF1A  F010         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338  00005D                     __pbssCOMRAM:
   339                           	callstack 0
   340  00005D                     _timer:
   341                           	callstack 0
   342  00005D                     	ds	4
   343  000061                     kpDebounce@oldRead:
   344                           	callstack 0
   345  000061                     	ds	2
   346  000063                     kpDebounce@newRead:
   347                           	callstack 0
   348  000063                     	ds	2
   349  000065                     _keys:
   350                           	callstack 0
   351  000065                     	ds	2
   352  000067                     _v3:
   353                           	callstack 0
   354  000067                     	ds	1
   355  000068                     _v2:
   356                           	callstack 0
   357  000068                     	ds	1
   358  000069                     _v1:
   359                           	callstack 0
   360  000069                     	ds	1
   361  00006A                     _v0:
   362                           	callstack 0
   363  00006A                     	ds	1
   364  00006B                     _display:
   365                           	callstack 0
   366  00006B                     	ds	1
   367  00006C                     kpDebounce@tempo:
   368                           	callstack 0
   369  00006C                     	ds	1
   370  00006D                     _lembrete:
   371                           	callstack 0
   372  00006D                     	ds	16
   373                           
   374                           	psect	dataBANK0
   375  000080                     __pdataBANK0:
   376                           	callstack 0
   377  000080                     tarefas@F268:
   378                           	callstack 0
   379  000080                     	ds	16
   380  000090                     tarefas@F266:
   381                           	callstack 0
   382  000090                     	ds	16
   383  0000A0                     tarefas@F264:
   384                           	callstack 0
   385  0000A0                     	ds	16
   386  0000B0                     tarefas@F262:
   387                           	callstack 0
   388  0000B0                     	ds	16
   389                           
   390                           	psect	cstackCOMRAM
   391  000001                     __pcstackCOMRAM:
   392                           	callstack 0
   393  000001                     ?_kpRead:
   394                           	callstack 0
   395  000001                     ?_digitalRead:
   396                           	callstack 0
   397  000001                     ?___wmul:
   398                           	callstack 0
   399  000001                     ?___awdiv:
   400                           	callstack 0
   401  000001                     ?___lwdiv:
   402                           	callstack 0
   403  000001                     ?___fladd:
   404                           	callstack 0
   405  000001                     ?___lldiv:
   406                           	callstack 0
   407  000001                     ?___aldiv:
   408                           	callstack 0
   409  000001                     tempo@x:
   410                           	callstack 0
   411  000001                     digitalWrite@pin:
   412                           	callstack 0
   413  000001                     digitalRead@pin:
   414                           	callstack 0
   415  000001                     pinMode@pin:
   416                           	callstack 0
   417  000001                     delayMicro@a:
   418                           	callstack 0
   419  000001                     delayMili@a:
   420                           	callstack 0
   421  000001                     ___wmul@multiplier:
   422                           	callstack 0
   423  000001                     ___awdiv@dividend:
   424                           	callstack 0
   425  000001                     ___lwdiv@dividend:
   426                           	callstack 0
   427  000001                     strcpy@dest:
   428                           	callstack 0
   429  000001                     ___lldiv@dividend:
   430                           	callstack 0
   431  000001                     ___aldiv@dividend:
   432                           	callstack 0
   433  000001                     ___flge@ff1:
   434                           	callstack 0
   435  000001                     ___fladd@b:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x0
   439  000001                     	ds	1
   440  000002                     tempo@i:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x1
   444  000002                     	ds	1
   445  000003                     ??_digitalRead:
   446  000003                     ??_delayMili:
   447  000003                     tempo@j:
   448                           	callstack 0
   449  000003                     digitalWrite@value:
   450                           	callstack 0
   451  000003                     pinMode@type:
   452                           	callstack 0
   453  000003                     ___wmul@multiplicand:
   454                           	callstack 0
   455  000003                     ___awdiv@divisor:
   456                           	callstack 0
   457  000003                     ___lwdiv@divisor:
   458                           	callstack 0
   459  000003                     strcpy@src:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x2
   463  000003                     	ds	1
   464  000004                     tempo@k:
   465                           	callstack 0
   466  000004                     delayMili@i:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x3
   470  000004                     	ds	1
   471  000005                     ??_digitalWrite:
   472  000005                     ??_pinMode:
   473  000005                     ___awdiv@counter:
   474                           	callstack 0
   475  000005                     ___wmul@product:
   476                           	callstack 0
   477  000005                     ___lwdiv@quotient:
   478                           	callstack 0
   479  000005                     strcpy@s:
   480                           	callstack 0
   481  000005                     ___lldiv@divisor:
   482                           	callstack 0
   483  000005                     ___aldiv@divisor:
   484                           	callstack 0
   485  000005                     ___flge@ff2:
   486                           	callstack 0
   487  000005                     ___fladd@a:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x4
   491  000005                     	ds	1
   492  000006                     ___awdiv@sign:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x5
   496  000006                     	ds	1
   497  000007                     ___lwdiv@counter:
   498                           	callstack 0
   499  000007                     soWrite@value:
   500                           	callstack 0
   501  000007                     ___awdiv@quotient:
   502                           	callstack 0
   503  000007                     strcpy@d:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x6
   507  000007                     	ds	1
   508  000008                     ??_pwmSet:
   509                           
   510                           ; 1 bytes @ 0x7
   511  000008                     	ds	1
   512  000009                     ??___fladd:
   513  000009                     ??___flge:
   514  000009                     ?___awmod:
   515                           	callstack 0
   516  000009                     soWrite@i:
   517                           	callstack 0
   518  000009                     ___aldiv@counter:
   519                           	callstack 0
   520  000009                     ___awmod@dividend:
   521                           	callstack 0
   522  000009                     ___lldiv@quotient:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x8
   526  000009                     	ds	1
   527  00000A                     ??_kpDebounce:
   528  00000A                     ??_ssdUpdate:
   529  00000A                     pwmSet@porcento:
   530                           	callstack 0
   531  00000A                     ___aldiv@sign:
   532                           	callstack 0
   533  00000A                     pushNibble@rs:
   534                           	callstack 0
   535  00000A                     pushByte@rs:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x9
   539  00000A                     	ds	1
   540  00000B                     pwmSet@val:
   541                           	callstack 0
   542  00000B                     ___awmod@divisor:
   543                           	callstack 0
   544  00000B                     ___aldiv@quotient:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0xA
   548  00000B                     	ds	1
   549  00000C                     ??_pushByte:
   550  00000C                     pushNibble@value:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0xB
   554  00000C                     	ds	1
   555  00000D                     pushByte@value:
   556                           	callstack 0
   557  00000D                     ___lldiv@counter:
   558                           	callstack 0
   559  00000D                     ___awmod@counter:
   560                           	callstack 0
   561  00000D                     ___fladd@signs:
   562                           	callstack 0
   563  00000D                     kpDebounce@i:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0xC
   567  00000D                     	ds	1
   568  00000E                     ?___llmod:
   569                           	callstack 0
   570  00000E                     lcdCommand@value:
   571                           	callstack 0
   572  00000E                     lcdChar@value:
   573                           	callstack 0
   574  00000E                     ___awmod@sign:
   575                           	callstack 0
   576  00000E                     ___fladd@aexp:
   577                           	callstack 0
   578  00000E                     ___llmod@dividend:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0xD
   582  00000E                     	ds	1
   583  00000F                     ssdDigit@pos:
   584                           	callstack 0
   585  00000F                     ___fladd@bexp:
   586                           	callstack 0
   587  00000F                     lcdPosition@line:
   588                           	callstack 0
   589  00000F                     lcdString@msg:
   590                           	callstack 0
   591  00000F                     pwmFrequency@freq:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xE
   595  00000F                     	ds	1
   596  000010                     ssdDigit@val:
   597                           	callstack 0
   598  000010                     ___fladd@grs:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0xF
   602  000010                     	ds	1
   603  000011                     ??_lcdString:
   604  000011                     ??_SSD:
   605  000011                     lcdPosition@col:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x10
   609  000011                     	ds	1
   610  000012                     ___llmod@divisor:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x11
   614  000012                     	ds	1
   615  000013                     lcdString@i:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x12
   619  000013                     	ds	2
   620  000015                     SSD@conth:
   621                           	callstack 0
   622  000015                     sinalizar@i:
   623                           	callstack 0
   624  000015                     tarefas@msg1:
   625                           	callstack 0
   626                           
   627                           ; 16 bytes @ 0x14
   628  000015                     	ds	1
   629  000016                     ___llmod@counter:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x15
   633  000016                     	ds	1
   634  000017                     Time@i:
   635                           	callstack 0
   636  000017                     SSD@i:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x16
   640  000017                     	ds	2
   641  000019                     SSD@outrotempo:
   642                           	callstack 0
   643  000019                     Time@cont:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x18
   647  000019                     	ds	2
   648  00001B                     SSD@tempo:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x1A
   652  00001B                     	ds	2
   653  00001D                     Time@tecla:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x1C
   657  00001D                     	ds	2
   658  00001F                     SSD@conts:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1E
   662  00001F                     	ds	2
   663  000021                     SSD@contm:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x20
   667  000021                     	ds	4
   668  000025                     tarefas@msg2:
   669                           	callstack 0
   670                           
   671                           ; 16 bytes @ 0x24
   672  000025                     	ds	16
   673  000035                     tarefas@msg3:
   674                           	callstack 0
   675                           
   676                           ; 16 bytes @ 0x34
   677  000035                     	ds	16
   678  000045                     tarefas@msg4:
   679                           	callstack 0
   680                           
   681                           ; 16 bytes @ 0x44
   682  000045                     	ds	16
   683  000055                     tarefas@i:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x54
   687  000055                     	ds	2
   688  000057                     tarefas@tecla:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x56
   692  000057                     	ds	2
   693  000059                     ??_main:
   694                           
   695                           ; 1 bytes @ 0x58
   696  000059                     	ds	2
   697  00005B                     main@show:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x5A
   701  00005B                     	ds	2
   702                           
   703 ;;
   704 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   705 ;;
   706 ;; *************** function _main *****************
   707 ;; Defined at:
   708 ;;		line 187 in file "main.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  show            2   90[COMRAM] int 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         0       0       0       0       0       0       0
   723 ;;      Locals:         2       0       0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0
   725 ;;      Totals:         4       0       0       0       0       0       0
   726 ;;Total ram usage:        4 bytes
   727 ;; Hardware stack levels required when called: 7
   728 ;; This function calls:
   729 ;;		_SSD
   730 ;;		_Time
   731 ;;		_kpInit
   732 ;;		_lcdInit
   733 ;;		_pwmInit
   734 ;;		_sinalizar
   735 ;;		_ssdInit
   736 ;;		_tarefas
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text0
   743  002034                     __ptext0:
   744                           	callstack 0
   745  002034                     _main:
   746                           	callstack 24
   747  002034                     
   748                           ;main.c: 189:     int show = 0;
   749  002034  0E00               	movlw	0
   750  002036  6E5C               	movwf	(main@show+1)^0,c
   751  002038  0E00               	movlw	0
   752  00203A  6E5B               	movwf	main@show^0,c
   753  00203C                     
   754                           ;main.c: 190:     lcdInit();
   755  00203C  EC16  F00F         	call	_lcdInit	;wreg free
   756  002040                     
   757                           ;main.c: 191:     kpInit();
   758  002040  ECE9  F012         	call	_kpInit	;wreg free
   759  002044                     
   760                           ;main.c: 192:     pwmInit();
   761  002044  EC9B  F013         	call	_pwmInit	;wreg free
   762  002048                     
   763                           ;main.c: 193:     ssdInit();
   764  002048  ECE0  F011         	call	_ssdInit	;wreg free
   765  00204C  EF46  F010         	goto	l3176
   766  002050                     l3158:
   767                           
   768                           ;main.c: 201:                 tarefas();
   769  002050  EC41  F00A         	call	_tarefas	;wreg free
   770  002054                     
   771                           ;main.c: 202:                 show = 1;
   772  002054  0E00               	movlw	0
   773  002056  6E5C               	movwf	(main@show+1)^0,c
   774  002058  0E01               	movlw	1
   775  00205A  6E5B               	movwf	main@show^0,c
   776                           
   777                           ;main.c: 203:                 break;
   778  00205C  EF46  F010         	goto	l3176
   779  002060                     l3162:
   780                           
   781                           ;main.c: 207:                 Time();
   782  002060  EC8E  F005         	call	_Time	;wreg free
   783  002064                     
   784                           ;main.c: 208:                 show = 2;
   785  002064  0E00               	movlw	0
   786  002066  6E5C               	movwf	(main@show+1)^0,c
   787  002068  0E02               	movlw	2
   788  00206A  6E5B               	movwf	main@show^0,c
   789                           
   790                           ;main.c: 209:                 break;
   791  00206C  EF46  F010         	goto	l3176
   792  002070                     l3166:
   793                           
   794                           ;main.c: 213:                 SSD();
   795  002070  EC36  F009         	call	_SSD	;wreg free
   796  002074                     
   797                           ;main.c: 214:                 show = 3;
   798  002074  0E00               	movlw	0
   799  002076  6E5C               	movwf	(main@show+1)^0,c
   800  002078  0E03               	movlw	3
   801  00207A  6E5B               	movwf	main@show^0,c
   802                           
   803                           ;main.c: 215:                 break;
   804  00207C  EF46  F010         	goto	l3176
   805  002080                     l3170:
   806                           
   807                           ;main.c: 219:                 sinalizar();
   808  002080  EC17  F00D         	call	_sinalizar	;wreg free
   809  002084                     
   810                           ;main.c: 220:                 show = 0;
   811  002084  0E00               	movlw	0
   812  002086  6E5C               	movwf	(main@show+1)^0,c
   813  002088  0E00               	movlw	0
   814  00208A  6E5B               	movwf	main@show^0,c
   815  00208C                     l3176:
   816  00208C  C05B  F059         	movff	main@show,??_main
   817  002090  C05C  F05A         	movff	main@show+1,??_main+1
   818                           
   819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   820                           ; Switch size 1, requested type "simple"
   821                           ; Number of cases is 1, Range of values is 0 to 0
   822                           ; switch strategies available:
   823                           ; Name         Instructions Cycles
   824                           ; simple_byte            4     3 (average)
   825                           ;	Chosen strategy is simple_byte
   826  002094  505A               	movf	(??_main+1)^0,w,c
   827  002096  0A00               	xorlw	0	; case 0
   828  002098  B4D8               	btfsc	status,2,c
   829  00209A  EF51  F010         	goto	l3240
   830  00209E  EF46  F010         	goto	l3176
   831  0020A2                     l3240:
   832                           
   833                           ; Switch size 1, requested type "simple"
   834                           ; Number of cases is 4, Range of values is 0 to 3
   835                           ; switch strategies available:
   836                           ; Name         Instructions Cycles
   837                           ; simple_byte           13     7 (average)
   838                           ;	Chosen strategy is simple_byte
   839  0020A2  5059               	movf	??_main^0,w,c
   840  0020A4  0A00               	xorlw	0	; case 0
   841  0020A6  B4D8               	btfsc	status,2,c
   842  0020A8  EF28  F010         	goto	l3158
   843  0020AC  0A01               	xorlw	1	; case 1
   844  0020AE  B4D8               	btfsc	status,2,c
   845  0020B0  EF30  F010         	goto	l3162
   846  0020B4  0A03               	xorlw	3	; case 2
   847  0020B6  B4D8               	btfsc	status,2,c
   848  0020B8  EF38  F010         	goto	l3166
   849  0020BC  0A01               	xorlw	1	; case 3
   850  0020BE  B4D8               	btfsc	status,2,c
   851  0020C0  EF40  F010         	goto	l3170
   852  0020C4  EF46  F010         	goto	l3176
   853  0020C8  EF00  F000         	goto	start
   854  0020CC                     __end_of_main:
   855                           	callstack 0
   856                           
   857 ;; *************** function _tarefas *****************
   858 ;; Defined at:
   859 ;;		line 17 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  msg4           16   68[COMRAM] unsigned char [16]
   864 ;;  msg3           16   52[COMRAM] unsigned char [16]
   865 ;;  msg2           16   36[COMRAM] unsigned char [16]
   866 ;;  msg1           16   20[COMRAM] unsigned char [16]
   867 ;;  tecla           2   86[COMRAM] unsigned int 
   868 ;;  i               2   84[COMRAM] unsigned int 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   878 ;;      Params:         0       0       0       0       0       0       0
   879 ;;      Locals:        68       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0
   881 ;;      Totals:        68       0       0       0       0       0       0
   882 ;;Total ram usage:       68 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; Hardware stack levels required when called: 6
   885 ;; This function calls:
   886 ;;		_kpDebounce
   887 ;;		_kpRead
   888 ;;		_lcdCommand
   889 ;;		_lcdString
   890 ;;		_strcpy
   891 ;;		_tempo
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text1
   898  001482                     __ptext1:
   899                           	callstack 0
   900  001482                     _tarefas:
   901                           	callstack 24
   902  001482                     
   903                           ;main.c: 19:     unsigned int tecla = 16, i;
   904  001482  0E00               	movlw	0
   905  001484  6E58               	movwf	(tarefas@tecla+1)^0,c
   906  001486  0E10               	movlw	16
   907  001488  6E57               	movwf	tarefas@tecla^0,c
   908  00148A                     
   909                           ;main.c: 20:     char msg1[16] = "(U)Estudar";
   910  00148A  EE20  F0B0         	lfsr	2,tarefas@F262
   911  00148E  EE10  F015         	lfsr	1,tarefas@msg1
   912  001492  0E0F               	movlw	15
   913  001494                     u3311:
   914  001494  CFDB FFE3          	movff	plusw2,plusw1
   915  001498  06E8               	decf	wreg,f,c
   916  00149A  E2FC               	bc	u3311
   917  00149C                     
   918                           ;main.c: 21:     char msg2[16] = "(L)Limpar casa";
   919  00149C  EE20  F0A0         	lfsr	2,tarefas@F264
   920  0014A0  EE10  F025         	lfsr	1,tarefas@msg2
   921  0014A4  0E0F               	movlw	15
   922  0014A6                     u3321:
   923  0014A6  CFDB FFE3          	movff	plusw2,plusw1
   924  0014AA  06E8               	decf	wreg,f,c
   925  0014AC  E2FC               	bc	u3321
   926  0014AE                     
   927                           ;main.c: 22:     char msg3[16] = "(D)Mercado";
   928  0014AE  EE20  F090         	lfsr	2,tarefas@F266
   929  0014B2  EE10  F035         	lfsr	1,tarefas@msg3
   930  0014B6  0E0F               	movlw	15
   931  0014B8                     u3331:
   932  0014B8  CFDB FFE3          	movff	plusw2,plusw1
   933  0014BC  06E8               	decf	wreg,f,c
   934  0014BE  E2FC               	bc	u3331
   935  0014C0                     
   936                           ;main.c: 23:     char msg4[16] = "(R)Caminhar";
   937  0014C0  EE20  F080         	lfsr	2,tarefas@F268
   938  0014C4  EE10  F045         	lfsr	1,tarefas@msg4
   939  0014C8  0E0F               	movlw	15
   940  0014CA                     u3341:
   941  0014CA  CFDB FFE3          	movff	plusw2,plusw1
   942  0014CE  06E8               	decf	wreg,f,c
   943  0014D0  E2FC               	bc	u3341
   944  0014D2                     
   945                           ;main.c: 25:     lcdCommand(0x80);
   946  0014D2  0E80               	movlw	128
   947  0014D4  EC8C  F013         	call	_lcdCommand
   948  0014D8                     
   949                           ;main.c: 26:     lcdString("Opcao lembrete:");
   950  0014D8  0E1B               	movlw	low STR_1
   951  0014DA  6E0F               	movwf	lcdString@msg^0,c
   952  0014DC  0E06               	movlw	high STR_1
   953  0014DE  6E10               	movwf	(lcdString@msg+1)^0,c
   954  0014E0  ECAA  F010         	call	_lcdString	;wreg free
   955  0014E4                     
   956                           ;main.c: 27:     tempo(500);
   957  0014E4  0EF4               	movlw	244
   958  0014E6  EC59  F011         	call	_tempo
   959  0014EA                     
   960                           ;main.c: 28:     lcdCommand(0x01);
   961  0014EA  0E01               	movlw	1
   962  0014EC  EC8C  F013         	call	_lcdCommand
   963  0014F0                     
   964                           ;main.c: 29:     lcdString(msg1);
   965  0014F0  0E15               	movlw	low tarefas@msg1
   966  0014F2  6E0F               	movwf	lcdString@msg^0,c
   967  0014F4  0E00               	movlw	high tarefas@msg1
   968  0014F6  6E10               	movwf	(lcdString@msg+1)^0,c
   969  0014F8  ECAA  F010         	call	_lcdString	;wreg free
   970  0014FC                     
   971                           ;main.c: 30:     lcdCommand(0xC0);
   972  0014FC  0EC0               	movlw	192
   973  0014FE  EC8C  F013         	call	_lcdCommand
   974  001502                     
   975                           ;main.c: 31:     lcdString(msg2);
   976  001502  0E25               	movlw	low tarefas@msg2
   977  001504  6E0F               	movwf	lcdString@msg^0,c
   978  001506  0E00               	movlw	high tarefas@msg2
   979  001508  6E10               	movwf	(lcdString@msg+1)^0,c
   980  00150A  ECAA  F010         	call	_lcdString	;wreg free
   981  00150E                     
   982                           ;main.c: 32:     tempo(1500);
   983  00150E  0EDC               	movlw	220
   984  001510  EC59  F011         	call	_tempo
   985  001514                     
   986                           ;main.c: 33:     lcdCommand(0x01);
   987  001514  0E01               	movlw	1
   988  001516  EC8C  F013         	call	_lcdCommand
   989  00151A                     
   990                           ;main.c: 34:     lcdCommand(0x80);
   991  00151A  0E80               	movlw	128
   992  00151C  EC8C  F013         	call	_lcdCommand
   993  001520                     
   994                           ;main.c: 35:     lcdString(msg3);
   995  001520  0E35               	movlw	low tarefas@msg3
   996  001522  6E0F               	movwf	lcdString@msg^0,c
   997  001524  0E00               	movlw	high tarefas@msg3
   998  001526  6E10               	movwf	(lcdString@msg+1)^0,c
   999  001528  ECAA  F010         	call	_lcdString	;wreg free
  1000  00152C                     
  1001                           ;main.c: 36:     lcdCommand(0xC0);
  1002  00152C  0EC0               	movlw	192
  1003  00152E  EC8C  F013         	call	_lcdCommand
  1004  001532                     
  1005                           ;main.c: 37:     lcdString(msg4);
  1006  001532  0E45               	movlw	low tarefas@msg4
  1007  001534  6E0F               	movwf	lcdString@msg^0,c
  1008  001536  0E00               	movlw	high tarefas@msg4
  1009  001538  6E10               	movwf	(lcdString@msg+1)^0,c
  1010  00153A  ECAA  F010         	call	_lcdString	;wreg free
  1011  00153E                     
  1012                           ;main.c: 38:     tempo(1500);
  1013  00153E  0EDC               	movlw	220
  1014  001540  EC59  F011         	call	_tempo
  1015  001544                     
  1016                           ;main.c: 39:     lcdCommand(0x01);
  1017  001544  0E01               	movlw	1
  1018  001546  EC8C  F013         	call	_lcdCommand
  1019  00154A                     
  1020                           ;main.c: 41:     for(i=0;i<30;i++){
  1021  00154A  0E00               	movlw	0
  1022  00154C  6E56               	movwf	(tarefas@i+1)^0,c
  1023  00154E  0E00               	movlw	0
  1024  001550  6E55               	movwf	tarefas@i^0,c
  1025  001552                     l2946:
  1026                           
  1027                           ;main.c: 43:         kpDebounce();
  1028  001552  EC7C  F00C         	call	_kpDebounce	;wreg free
  1029                           
  1030                           ;main.c: 45:         if (kpRead() != tecla) {
  1031  001556  ECA8  F013         	call	_kpRead	;wreg free
  1032  00155A  5057               	movf	tarefas@tecla^0,w,c
  1033  00155C  1801               	xorwf	?_kpRead^0,w,c
  1034  00155E  E109               	bnz	u3350
  1035  001560  5058               	movf	(tarefas@tecla+1)^0,w,c
  1036  001562  1802               	xorwf	(?_kpRead+1)^0,w,c
  1037  001564  B4D8               	btfsc	status,2,c
  1038  001566  EFB7  F00A         	goto	u3351
  1039  00156A  EFB9  F00A         	goto	u3350
  1040  00156E                     u3351:
  1041  00156E  EF03  F00B         	goto	l2966
  1042  001572                     u3350:
  1043  001572                     
  1044                           ;main.c: 47:             tecla = kpRead();
  1045  001572  ECA8  F013         	call	_kpRead	;wreg free
  1046  001576  C001  F057         	movff	?_kpRead,tarefas@tecla
  1047  00157A  C002  F058         	movff	?_kpRead+1,tarefas@tecla+1
  1048  00157E                     
  1049                           ;main.c: 48:             if (((tecla) & (1<<(0)))) {
  1050  00157E  A057               	btfss	tarefas@tecla^0,0,c
  1051  001580  EFC4  F00A         	goto	u3361
  1052  001584  EFC6  F00A         	goto	u3360
  1053  001588                     u3361:
  1054  001588  EFD0  F00A         	goto	l2954
  1055  00158C                     u3360:
  1056  00158C                     
  1057                           ;main.c: 49:                 strcpy(lembrete, msg1);
  1058  00158C  0E6D               	movlw	low _lembrete
  1059  00158E  6E01               	movwf	strcpy@dest^0,c
  1060  001590  0E00               	movlw	high _lembrete
  1061  001592  6E02               	movwf	(strcpy@dest+1)^0,c
  1062  001594  0E15               	movlw	low tarefas@msg1
  1063  001596  6E03               	movwf	strcpy@src^0,c
  1064  001598  0E00               	movlw	high tarefas@msg1
  1065  00159A  6E04               	movwf	(strcpy@src+1)^0,c
  1066  00159C  EC73  F012         	call	_strcpy	;wreg free
  1067  0015A0                     l2954:
  1068                           
  1069                           ;main.c: 51:             if (((tecla) & (1<<(2)))) {
  1070  0015A0  A457               	btfss	tarefas@tecla^0,2,c
  1071  0015A2  EFD5  F00A         	goto	u3371
  1072  0015A6  EFD7  F00A         	goto	u3370
  1073  0015AA                     u3371:
  1074  0015AA  EFE1  F00A         	goto	l2958
  1075  0015AE                     u3370:
  1076  0015AE                     
  1077                           ;main.c: 52:                 strcpy(lembrete, msg3);
  1078  0015AE  0E6D               	movlw	low _lembrete
  1079  0015B0  6E01               	movwf	strcpy@dest^0,c
  1080  0015B2  0E00               	movlw	high _lembrete
  1081  0015B4  6E02               	movwf	(strcpy@dest+1)^0,c
  1082  0015B6  0E35               	movlw	low tarefas@msg3
  1083  0015B8  6E03               	movwf	strcpy@src^0,c
  1084  0015BA  0E00               	movlw	high tarefas@msg3
  1085  0015BC  6E04               	movwf	(strcpy@src+1)^0,c
  1086  0015BE  EC73  F012         	call	_strcpy	;wreg free
  1087  0015C2                     l2958:
  1088                           
  1089                           ;main.c: 54:             if (((tecla) & (1<<(3)))) {
  1090  0015C2  A657               	btfss	tarefas@tecla^0,3,c
  1091  0015C4  EFE6  F00A         	goto	u3381
  1092  0015C8  EFE8  F00A         	goto	u3380
  1093  0015CC                     u3381:
  1094  0015CC  EFF2  F00A         	goto	l2962
  1095  0015D0                     u3380:
  1096  0015D0                     
  1097                           ;main.c: 55:                 strcpy(lembrete, msg4);
  1098  0015D0  0E6D               	movlw	low _lembrete
  1099  0015D2  6E01               	movwf	strcpy@dest^0,c
  1100  0015D4  0E00               	movlw	high _lembrete
  1101  0015D6  6E02               	movwf	(strcpy@dest+1)^0,c
  1102  0015D8  0E45               	movlw	low tarefas@msg4
  1103  0015DA  6E03               	movwf	strcpy@src^0,c
  1104  0015DC  0E00               	movlw	high tarefas@msg4
  1105  0015DE  6E04               	movwf	(strcpy@src+1)^0,c
  1106  0015E0  EC73  F012         	call	_strcpy	;wreg free
  1107  0015E4                     l2962:
  1108                           
  1109                           ;main.c: 57:             if (((tecla) & (1<<(1)))) {
  1110  0015E4  A257               	btfss	tarefas@tecla^0,1,c
  1111  0015E6  EFF7  F00A         	goto	u3391
  1112  0015EA  EFF9  F00A         	goto	u3390
  1113  0015EE                     u3391:
  1114  0015EE  EF03  F00B         	goto	l2966
  1115  0015F2                     u3390:
  1116  0015F2                     
  1117                           ;main.c: 58:                 strcpy(lembrete, msg2);
  1118  0015F2  0E6D               	movlw	low _lembrete
  1119  0015F4  6E01               	movwf	strcpy@dest^0,c
  1120  0015F6  0E00               	movlw	high _lembrete
  1121  0015F8  6E02               	movwf	(strcpy@dest+1)^0,c
  1122  0015FA  0E25               	movlw	low tarefas@msg2
  1123  0015FC  6E03               	movwf	strcpy@src^0,c
  1124  0015FE  0E00               	movlw	high tarefas@msg2
  1125  001600  6E04               	movwf	(strcpy@src+1)^0,c
  1126  001602  EC73  F012         	call	_strcpy	;wreg free
  1127  001606                     l2966:
  1128                           
  1129                           ;main.c: 61:     }
  1130  001606  4A55               	infsnz	tarefas@i^0,f,c
  1131  001608  2A56               	incf	(tarefas@i+1)^0,f,c
  1132  00160A  5056               	movf	(tarefas@i+1)^0,w,c
  1133  00160C  E109               	bnz	u3400
  1134  00160E  0E1E               	movlw	30
  1135  001610  5C55               	subwf	tarefas@i^0,w,c
  1136  001612  A0D8               	btfss	status,0,c
  1137  001614  EF0E  F00B         	goto	u3401
  1138  001618  EF10  F00B         	goto	u3400
  1139  00161C                     u3401:
  1140  00161C  EFA9  F00A         	goto	l2946
  1141  001620                     u3400:
  1142  001620  0012               	return		;funcret
  1143  001622                     __end_of_tarefas:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function _strcpy *****************
  1147 ;; Defined at:
  1148 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  dest            2    0[COMRAM] PTR unsigned char 
  1151 ;;		 -> lembrete(16), 
  1152 ;;  src             2    2[COMRAM] PTR const unsigned char 
  1153 ;;		 -> tarefas@msg4(16), tarefas@msg3(16), tarefas@msg2(16), tarefas@msg1(16), 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  d               2    6[COMRAM] PTR unsigned char 
  1156 ;;		 -> lembrete(16), 
  1157 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1158 ;;		 -> tarefas@msg4(16), tarefas@msg3(16), tarefas@msg2(16), tarefas@msg1(16), 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  2    0[COMRAM] PTR unsigned char 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1168 ;;      Params:         4       0       0       0       0       0       0
  1169 ;;      Locals:         4       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0
  1171 ;;      Totals:         8       0       0       0       0       0       0
  1172 ;;Total ram usage:        8 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_tarefas
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text2
  1182  0024E6                     __ptext2:
  1183                           	callstack 0
  1184  0024E6                     _strcpy:
  1185                           	callstack 29
  1186  0024E6  C003  F005         	movff	strcpy@src,strcpy@s
  1187  0024EA  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  1188  0024EE  C001  F007         	movff	strcpy@dest,strcpy@d
  1189  0024F2  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  1190  0024F6                     l2480:
  1191  0024F6  C005  FFD9         	movff	strcpy@s,fsr2l
  1192  0024FA  C006  FFDA         	movff	strcpy@s+1,fsr2h
  1193  0024FE  4A05               	infsnz	strcpy@s^0,f,c
  1194  002500  2A06               	incf	(strcpy@s+1)^0,f,c
  1195  002502  C007  FFE1         	movff	strcpy@d,fsr1l
  1196  002506  C008  FFE2         	movff	strcpy@d+1,fsr1h
  1197  00250A  4A07               	infsnz	strcpy@d^0,f,c
  1198  00250C  2A08               	incf	(strcpy@d+1)^0,f,c
  1199  00250E  CFDF FFE7          	movff	indf2,indf1
  1200  002512  50E7               	movf	indf1,w,c
  1201  002514  A4D8               	btfss	status,2,c
  1202  002516  EF8F  F012         	goto	u2621
  1203  00251A  EF91  F012         	goto	u2620
  1204  00251E                     u2621:
  1205  00251E  EF7B  F012         	goto	l2480
  1206  002522                     u2620:
  1207  002522  0012               	return		;funcret
  1208  002524                     __end_of_strcpy:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _ssdInit *****************
  1212 ;; Defined at:
  1213 ;;		line 94 in file "ssd.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1227 ;;      Params:         0       0       0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0
  1230 ;;      Totals:         0       0       0       0       0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 2
  1234 ;; This function calls:
  1235 ;;		_pinMode
  1236 ;;		_soInit
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text3
  1243  0023C0                     __ptext3:
  1244                           	callstack 0
  1245  0023C0                     _ssdInit:
  1246                           	callstack 28
  1247  0023C0                     
  1248                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1249  0023C0  0E00               	movlw	0
  1250  0023C2  6E02               	movwf	(pinMode@pin+1)^0,c
  1251  0023C4  0E18               	movlw	24
  1252  0023C6  6E01               	movwf	pinMode@pin^0,c
  1253  0023C8  0E00               	movlw	0
  1254  0023CA  6E04               	movwf	(pinMode@type+1)^0,c
  1255  0023CC  0E00               	movlw	0
  1256  0023CE  6E03               	movwf	pinMode@type^0,c
  1257  0023D0  ECE8  F006         	call	_pinMode	;wreg free
  1258                           
  1259                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1260  0023D4  0E00               	movlw	0
  1261  0023D6  6E02               	movwf	(pinMode@pin+1)^0,c
  1262  0023D8  0E19               	movlw	25
  1263  0023DA  6E01               	movwf	pinMode@pin^0,c
  1264  0023DC  0E00               	movlw	0
  1265  0023DE  6E04               	movwf	(pinMode@type+1)^0,c
  1266  0023E0  0E00               	movlw	0
  1267  0023E2  6E03               	movwf	pinMode@type^0,c
  1268  0023E4  ECE8  F006         	call	_pinMode	;wreg free
  1269                           
  1270                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1271  0023E8  0E00               	movlw	0
  1272  0023EA  6E02               	movwf	(pinMode@pin+1)^0,c
  1273  0023EC  0E1A               	movlw	26
  1274  0023EE  6E01               	movwf	pinMode@pin^0,c
  1275  0023F0  0E00               	movlw	0
  1276  0023F2  6E04               	movwf	(pinMode@type+1)^0,c
  1277  0023F4  0E00               	movlw	0
  1278  0023F6  6E03               	movwf	pinMode@type^0,c
  1279  0023F8  ECE8  F006         	call	_pinMode	;wreg free
  1280                           
  1281                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1282  0023FC  0E00               	movlw	0
  1283  0023FE  6E02               	movwf	(pinMode@pin+1)^0,c
  1284  002400  0E1B               	movlw	27
  1285  002402  6E01               	movwf	pinMode@pin^0,c
  1286  002404  0E00               	movlw	0
  1287  002406  6E04               	movwf	(pinMode@type+1)^0,c
  1288  002408  0E00               	movlw	0
  1289  00240A  6E03               	movwf	pinMode@type^0,c
  1290  00240C  ECE8  F006         	call	_pinMode	;wreg free
  1291                           
  1292                           ;ssd.c: 102:     soInit();
  1293  002410  EC92  F012         	call	_soInit	;wreg free
  1294  002414  0012               	return		;funcret
  1295  002416                     __end_of_ssdInit:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _sinalizar *****************
  1299 ;; Defined at:
  1300 ;;		line 154 in file "main.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  i               2   20[COMRAM] int 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1314 ;;      Params:         0       0       0       0       0       0       0
  1315 ;;      Locals:         2       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0
  1317 ;;      Totals:         2       0       0       0       0       0       0
  1318 ;;Total ram usage:        2 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 6
  1321 ;; This function calls:
  1322 ;;		___awmod
  1323 ;;		_digitalWrite
  1324 ;;		_lcdCommand
  1325 ;;		_lcdString
  1326 ;;		_pwmSet
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text4
  1333  001A2E                     __ptext4:
  1334                           	callstack 0
  1335  001A2E                     _sinalizar:
  1336                           	callstack 24
  1337  001A2E                     
  1338                           ;main.c: 156:     int i;;main.c: 158:     (*(volatile __near unsigned char*)0xF95) = 0x0
      +                          0;
  1339  001A2E  0E00               	movlw	0
  1340  001A30  6E95               	movwf	149,c	;volatile
  1341                           
  1342                           ;main.c: 160:     for(i=0; i<15; i++){
  1343  001A32  0E00               	movlw	0
  1344  001A34  6E16               	movwf	(sinalizar@i+1)^0,c
  1345  001A36  0E00               	movlw	0
  1346  001A38  6E15               	movwf	sinalizar@i^0,c
  1347  001A3A                     l3072:
  1348                           
  1349                           ;main.c: 162:         lcdCommand(0x80);
  1350  001A3A  0E80               	movlw	128
  1351  001A3C  EC8C  F013         	call	_lcdCommand
  1352  001A40                     
  1353                           ;main.c: 163:         lcdString("Lembrete!!");
  1354  001A40  0E39               	movlw	low STR_5
  1355  001A42  6E0F               	movwf	lcdString@msg^0,c
  1356  001A44  0E06               	movlw	high STR_5
  1357  001A46  6E10               	movwf	(lcdString@msg+1)^0,c
  1358  001A48  ECAA  F010         	call	_lcdString	;wreg free
  1359  001A4C                     
  1360                           ;main.c: 165:         if((i%2)==1){
  1361  001A4C  A015               	btfss	sinalizar@i^0,0,c
  1362  001A4E  EF2B  F00D         	goto	u3531
  1363  001A52  EF2D  F00D         	goto	u3530
  1364  001A56                     u3531:
  1365  001A56  EF39  F00D         	goto	l3084
  1366  001A5A                     u3530:
  1367  001A5A                     
  1368                           ;main.c: 167:             lcdCommand(0xC0);
  1369  001A5A  0EC0               	movlw	192
  1370  001A5C  EC8C  F013         	call	_lcdCommand
  1371  001A60                     
  1372                           ;main.c: 168:             lcdString(lembrete);
  1373  001A60  0E6D               	movlw	low _lembrete
  1374  001A62  6E0F               	movwf	lcdString@msg^0,c
  1375  001A64  0E00               	movlw	high _lembrete
  1376  001A66  6E10               	movwf	(lcdString@msg+1)^0,c
  1377  001A68  ECAA  F010         	call	_lcdString	;wreg free
  1378  001A6C                     
  1379                           ;main.c: 169:             lcdCommand(0x80);
  1380  001A6C  0E80               	movlw	128
  1381  001A6E  EC8C  F013         	call	_lcdCommand
  1382  001A72                     l3084:
  1383                           
  1384                           ;main.c: 172:         if((i%7)==1) lcdCommand(0x01);
  1385  001A72  C015  F009         	movff	sinalizar@i,___awmod@dividend
  1386  001A76  C016  F00A         	movff	sinalizar@i+1,___awmod@dividend+1
  1387  001A7A  0E00               	movlw	0
  1388  001A7C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1389  001A7E  0E07               	movlw	7
  1390  001A80  6E0B               	movwf	___awmod@divisor^0,c
  1391  001A82  EC70  F00F         	call	___awmod	;wreg free
  1392  001A86  0409               	decf	?___awmod^0,w,c
  1393  001A88  100A               	iorwf	(?___awmod+1)^0,w,c
  1394  001A8A  A4D8               	btfss	status,2,c
  1395  001A8C  EF4A  F00D         	goto	u3541
  1396  001A90  EF4C  F00D         	goto	u3540
  1397  001A94                     u3541:
  1398  001A94  EF4F  F00D         	goto	l3088
  1399  001A98                     u3540:
  1400  001A98  0E01               	movlw	1
  1401  001A9A  EC8C  F013         	call	_lcdCommand
  1402  001A9E                     l3088:
  1403                           
  1404                           ;main.c: 173:         if((i%2)==1) (*(volatile __near unsigned char*)0xF83) = 0XFF;
  1405  001A9E  A015               	btfss	sinalizar@i^0,0,c
  1406  001AA0  EF54  F00D         	goto	u3551
  1407  001AA4  EF56  F00D         	goto	u3550
  1408  001AA8                     u3551:
  1409  001AA8  EF57  F00D         	goto	l82
  1410  001AAC                     u3550:
  1411  001AAC  6883               	setf	131,c	;volatile
  1412  001AAE                     l82:
  1413                           
  1414                           ;main.c: 174:         if((i%2)==0) (*(volatile __near unsigned char*)0xF83) = 0X00;
  1415  001AAE  B015               	btfsc	sinalizar@i^0,0,c
  1416  001AB0  EF5C  F00D         	goto	u3561
  1417  001AB4  EF5E  F00D         	goto	u3560
  1418  001AB8                     u3561:
  1419  001AB8  EF60  F00D         	goto	l3094
  1420  001ABC                     u3560:
  1421  001ABC  0E00               	movlw	0
  1422  001ABE  6E83               	movwf	131,c	;volatile
  1423  001AC0                     l3094:
  1424                           
  1425                           ;main.c: 175:         pwmSet(100);
  1426  001AC0  0E64               	movlw	100
  1427  001AC2  EC23  F011         	call	_pwmSet
  1428  001AC6                     
  1429                           ;main.c: 176:         if((i%2)==0) pwmSet(0);
  1430  001AC6  B015               	btfsc	sinalizar@i^0,0,c
  1431  001AC8  EF68  F00D         	goto	u3571
  1432  001ACC  EF6A  F00D         	goto	u3570
  1433  001AD0                     u3571:
  1434  001AD0  EF6D  F00D         	goto	l3100
  1435  001AD4                     u3570:
  1436  001AD4  0E00               	movlw	0
  1437  001AD6  EC23  F011         	call	_pwmSet
  1438  001ADA                     l3100:
  1439                           
  1440                           ;main.c: 177:     }
  1441  001ADA  4A15               	infsnz	sinalizar@i^0,f,c
  1442  001ADC  2A16               	incf	(sinalizar@i+1)^0,f,c
  1443  001ADE  BE16               	btfsc	(sinalizar@i+1)^0,7,c
  1444  001AE0  EF7B  F00D         	goto	u3581
  1445  001AE4  5016               	movf	(sinalizar@i+1)^0,w,c
  1446  001AE6  E109               	bnz	u3580
  1447  001AE8  0E0F               	movlw	15
  1448  001AEA  5C15               	subwf	sinalizar@i^0,w,c
  1449  001AEC  A0D8               	btfss	status,0,c
  1450  001AEE  EF7B  F00D         	goto	u3581
  1451  001AF2  EF7D  F00D         	goto	u3580
  1452  001AF6                     u3581:
  1453  001AF6  EF1D  F00D         	goto	l3072
  1454  001AFA                     u3580:
  1455  001AFA                     
  1456                           ;main.c: 178:     lcdCommand(0x01);
  1457  001AFA  0E01               	movlw	1
  1458  001AFC  EC8C  F013         	call	_lcdCommand
  1459  001B00                     
  1460                           ;main.c: 179:     pwmSet(0);
  1461  001B00  0E00               	movlw	0
  1462  001B02  EC23  F011         	call	_pwmSet
  1463  001B06                     
  1464                           ;main.c: 180:     digitalWrite(PIN_D0,0);
  1465  001B06  0E00               	movlw	0
  1466  001B08  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1467  001B0A  0E18               	movlw	24
  1468  001B0C  6E01               	movwf	digitalWrite@pin^0,c
  1469  001B0E  0E00               	movlw	0
  1470  001B10  6E04               	movwf	(digitalWrite@value+1)^0,c
  1471  001B12  0E00               	movlw	0
  1472  001B14  6E03               	movwf	digitalWrite@value^0,c
  1473  001B16  EC0F  F008         	call	_digitalWrite	;wreg free
  1474  001B1A                     
  1475                           ;main.c: 181:     digitalWrite(PIN_D1,0);
  1476  001B1A  0E00               	movlw	0
  1477  001B1C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1478  001B1E  0E19               	movlw	25
  1479  001B20  6E01               	movwf	digitalWrite@pin^0,c
  1480  001B22  0E00               	movlw	0
  1481  001B24  6E04               	movwf	(digitalWrite@value+1)^0,c
  1482  001B26  0E00               	movlw	0
  1483  001B28  6E03               	movwf	digitalWrite@value^0,c
  1484  001B2A  EC0F  F008         	call	_digitalWrite	;wreg free
  1485  001B2E                     
  1486                           ;main.c: 182:     digitalWrite(PIN_D2,0);
  1487  001B2E  0E00               	movlw	0
  1488  001B30  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1489  001B32  0E1A               	movlw	26
  1490  001B34  6E01               	movwf	digitalWrite@pin^0,c
  1491  001B36  0E00               	movlw	0
  1492  001B38  6E04               	movwf	(digitalWrite@value+1)^0,c
  1493  001B3A  0E00               	movlw	0
  1494  001B3C  6E03               	movwf	digitalWrite@value^0,c
  1495  001B3E  EC0F  F008         	call	_digitalWrite	;wreg free
  1496  001B42                     
  1497                           ;main.c: 183:     digitalWrite(PIN_D3,0);
  1498  001B42  0E00               	movlw	0
  1499  001B44  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1500  001B46  0E1B               	movlw	27
  1501  001B48  6E01               	movwf	digitalWrite@pin^0,c
  1502  001B4A  0E00               	movlw	0
  1503  001B4C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1504  001B4E  0E00               	movlw	0
  1505  001B50  6E03               	movwf	digitalWrite@value^0,c
  1506  001B52  EC0F  F008         	call	_digitalWrite	;wreg free
  1507  001B56  0012               	return		;funcret
  1508  001B58                     __end_of_sinalizar:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _pwmSet *****************
  1512 ;; Defined at:
  1513 ;;		line 24 in file "pwm.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  porcento        1    wreg     unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  porcento        1    9[COMRAM] unsigned char 
  1518 ;;  val             2   10[COMRAM] unsigned int 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         0       0       0       0       0       0       0
  1529 ;;      Locals:         3       0       0       0       0       0       0
  1530 ;;      Temps:          2       0       0       0       0       0       0
  1531 ;;      Totals:         5       0       0       0       0       0       0
  1532 ;;Total ram usage:        5 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 1
  1535 ;; This function calls:
  1536 ;;		___lwdiv
  1537 ;;		___wmul
  1538 ;; This function is called by:
  1539 ;;		_sinalizar
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text5
  1544  002246                     __ptext5:
  1545                           	callstack 0
  1546  002246                     _pwmSet:
  1547                           	callstack 28
  1548                           
  1549                           ;incstack = 0
  1550                           ;pwmSet@porcento stored from wreg
  1551  002246  6E0A               	movwf	pwmSet@porcento^0,c
  1552  002248                     
  1553                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  1554  002248  0E01               	movlw	1
  1555  00224A  24CB               	addwf	203,w,c	;volatile
  1556  00224C  6E01               	movwf	___wmul@multiplier^0,c
  1557  00224E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1558  002250  0E00               	movlw	0
  1559  002252  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1560  002254  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  1561  002258  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1562  00225A  EC44  F013         	call	___wmul	;wreg free
  1563  00225E  C001  F00B         	movff	?___wmul,pwmSet@val
  1564  002262  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  1565  002266                     
  1566                           ;pwm.c: 33:     val = val / 25;
  1567  002266  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  1568  00226A  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  1569  00226E  0E00               	movlw	0
  1570  002270  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1571  002272  0E19               	movlw	25
  1572  002274  6E03               	movwf	___lwdiv@divisor^0,c
  1573  002276  ECE9  F010         	call	___lwdiv	;wreg free
  1574  00227A  C001  F00B         	movff	?___lwdiv,pwmSet@val
  1575  00227E  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  1576  002282                     
  1577                           ;pwm.c: 35:  val &= 0x03ff;
  1578  002282  0EFF               	movlw	255
  1579  002284  160B               	andwf	pwmSet@val^0,f,c
  1580  002286  0E03               	movlw	3
  1581  002288  160C               	andwf	(pwmSet@val+1)^0,f,c
  1582  00228A                     
  1583                           ;pwm.c: 37:  CCPR2L = val >> 2;
  1584  00228A  C00B  F008         	movff	pwmSet@val,??_pwmSet
  1585  00228E  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  1586  002292  90D8               	bcf	status,0,c
  1587  002294  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1588  002296  3208               	rrcf	??_pwmSet^0,f,c
  1589  002298  90D8               	bcf	status,0,c
  1590  00229A  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1591  00229C  3208               	rrcf	??_pwmSet^0,f,c
  1592  00229E  5008               	movf	??_pwmSet^0,w,c
  1593  0022A0  6EBB               	movwf	187,c	;volatile
  1594  0022A2                     
  1595                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  1596  0022A2  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  1597  0022A6  0E03               	movlw	3
  1598  0022A8  1608               	andwf	??_pwmSet^0,f,c
  1599  0022AA  3808               	swapf	??_pwmSet^0,w,c
  1600  0022AC  0BF0               	andlw	240
  1601  0022AE  12BA               	iorwf	186,f,c	;volatile
  1602  0022B0  0012               	return		;funcret
  1603  0022B2                     __end_of_pwmSet:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function ___wmul *****************
  1607 ;; Defined at:
  1608 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  multiplier      2    0[COMRAM] unsigned int 
  1611 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  product         2    4[COMRAM] unsigned int 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2    0[COMRAM] unsigned int 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, prodl, prodh
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1623 ;;      Params:         4       0       0       0       0       0       0
  1624 ;;      Locals:         2       0       0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0
  1626 ;;      Totals:         6       0       0       0       0       0       0
  1627 ;;Total ram usage:        6 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_pwmSet
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text6
  1637  002688                     __ptext6:
  1638                           	callstack 0
  1639  002688                     ___wmul:
  1640                           	callstack 28
  1641  002688  5001               	movf	___wmul@multiplier^0,w,c
  1642  00268A  0203               	mulwf	___wmul@multiplicand^0,c
  1643  00268C  CFF3 F005          	movff	prodl,___wmul@product
  1644  002690  CFF4 F006          	movff	prodh,___wmul@product+1
  1645  002694  5001               	movf	___wmul@multiplier^0,w,c
  1646  002696  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1647  002698  50F3               	movf	243,w,c
  1648  00269A  2606               	addwf	(___wmul@product+1)^0,f,c
  1649  00269C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1650  00269E  0203               	mulwf	___wmul@multiplicand^0,c
  1651  0026A0  50F3               	movf	243,w,c
  1652  0026A2  2606               	addwf	(___wmul@product+1)^0,f,c
  1653  0026A4  C005  F001         	movff	___wmul@product,?___wmul
  1654  0026A8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1655  0026AC  0012               	return		;funcret
  1656  0026AE                     __end_of___wmul:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function ___lwdiv *****************
  1660 ;; Defined at:
  1661 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  dividend        2    0[COMRAM] unsigned int 
  1664 ;;  divisor         2    2[COMRAM] unsigned int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  quotient        2    4[COMRAM] unsigned int 
  1667 ;;  counter         1    6[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2    0[COMRAM] unsigned int 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         4       0       0       0       0       0       0
  1678 ;;      Locals:         3       0       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         7       0       0       0       0       0       0
  1681 ;;Total ram usage:        7 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_pwmSet
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text7
  1691  0021D2                     __ptext7:
  1692                           	callstack 0
  1693  0021D2                     ___lwdiv:
  1694                           	callstack 28
  1695  0021D2  0E00               	movlw	0
  1696  0021D4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1697  0021D6  0E00               	movlw	0
  1698  0021D8  6E05               	movwf	___lwdiv@quotient^0,c
  1699  0021DA  5003               	movf	___lwdiv@divisor^0,w,c
  1700  0021DC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1701  0021DE  B4D8               	btfsc	status,2,c
  1702  0021E0  EFF4  F010         	goto	u2451
  1703  0021E4  EFF6  F010         	goto	u2450
  1704  0021E8                     u2451:
  1705  0021E8  EF1E  F011         	goto	l900
  1706  0021EC                     u2450:
  1707  0021EC  0E01               	movlw	1
  1708  0021EE  6E07               	movwf	___lwdiv@counter^0,c
  1709  0021F0  EFFE  F010         	goto	l2400
  1710  0021F4                     l2398:
  1711  0021F4  90D8               	bcf	status,0,c
  1712  0021F6  3603               	rlcf	___lwdiv@divisor^0,f,c
  1713  0021F8  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1714  0021FA  2A07               	incf	___lwdiv@counter^0,f,c
  1715  0021FC                     l2400:
  1716  0021FC  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1717  0021FE  EF03  F011         	goto	u2461
  1718  002202  EF05  F011         	goto	u2460
  1719  002206                     u2461:
  1720  002206  EFFA  F010         	goto	l2398
  1721  00220A                     u2460:
  1722  00220A                     l2402:
  1723  00220A  90D8               	bcf	status,0,c
  1724  00220C  3605               	rlcf	___lwdiv@quotient^0,f,c
  1725  00220E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1726  002210  5003               	movf	___lwdiv@divisor^0,w,c
  1727  002212  5C01               	subwf	___lwdiv@dividend^0,w,c
  1728  002214  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1729  002216  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1730  002218  A0D8               	btfss	status,0,c
  1731  00221A  EF11  F011         	goto	u2471
  1732  00221E  EF13  F011         	goto	u2470
  1733  002222                     u2471:
  1734  002222  EF18  F011         	goto	l2410
  1735  002226                     u2470:
  1736  002226  5003               	movf	___lwdiv@divisor^0,w,c
  1737  002228  5E01               	subwf	___lwdiv@dividend^0,f,c
  1738  00222A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1739  00222C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1740  00222E  8005               	bsf	___lwdiv@quotient^0,0,c
  1741  002230                     l2410:
  1742  002230  90D8               	bcf	status,0,c
  1743  002232  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1744  002234  3203               	rrcf	___lwdiv@divisor^0,f,c
  1745  002236  2E07               	decfsz	___lwdiv@counter^0,f,c
  1746  002238  EF05  F011         	goto	l2402
  1747  00223C                     l900:
  1748  00223C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1749  002240  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1750  002244  0012               	return		;funcret
  1751  002246                     __end_of___lwdiv:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _pwmInit *****************
  1755 ;; Defined at:
  1756 ;;		line 51 in file "pwm.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 2
  1777 ;; This function calls:
  1778 ;;		_pwmFrequency
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text8
  1785  002736                     __ptext8:
  1786                           	callstack 0
  1787  002736                     _pwmInit:
  1788                           	callstack 28
  1789  002736                     
  1790                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  1791  002736  9294               	bcf	148,1,c	;volatile
  1792  002738                     
  1793                           ;pwm.c: 55:  T2CON |= 0b00000011;
  1794  002738  0E03               	movlw	3
  1795  00273A  12CA               	iorwf	202,f,c	;volatile
  1796  00273C                     
  1797                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  1798  00273C  84CA               	bsf	202,2,c	;volatile
  1799  00273E                     
  1800                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  1801  00273E  0E0C               	movlw	12
  1802  002740  6EBA               	movwf	186,c	;volatile
  1803  002742                     
  1804                           ;pwm.c: 60:     pwmFrequency(100);
  1805  002742  0E00               	movlw	0
  1806  002744  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1807  002746  0E64               	movlw	100
  1808  002748  6E0F               	movwf	pwmFrequency@freq^0,c
  1809  00274A  EC57  F013         	call	_pwmFrequency	;wreg free
  1810  00274E  0012               	return		;funcret
  1811  002750                     __end_of_pwmInit:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _pwmFrequency *****************
  1815 ;; Defined at:
  1816 ;;		line 44 in file "pwm.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  freq            2   14[COMRAM] unsigned int 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1830 ;;      Params:         2       0       0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0
  1833 ;;      Totals:         2       0       0       0       0       0       0
  1834 ;;Total ram usage:        2 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 1
  1837 ;; This function calls:
  1838 ;;		___aldiv
  1839 ;; This function is called by:
  1840 ;;		_pwmInit
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text9
  1845  0026AE                     __ptext9:
  1846                           	callstack 0
  1847  0026AE                     _pwmFrequency:
  1848                           	callstack 28
  1849  0026AE                     
  1850                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  1851  0026AE  0E48               	movlw	72
  1852  0026B0  6E01               	movwf	___aldiv@dividend^0,c
  1853  0026B2  0EE8               	movlw	232
  1854  0026B4  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1855  0026B6  0E01               	movlw	1
  1856  0026B8  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1857  0026BA  0E00               	movlw	0
  1858  0026BC  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1859  0026BE  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  1860  0026C2  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  1861  0026C6  6A07               	clrf	(___aldiv@divisor+2)^0,c
  1862  0026C8  6A08               	clrf	(___aldiv@divisor+3)^0,c
  1863  0026CA  ECAC  F00D         	call	___aldiv	;wreg free
  1864  0026CE  0401               	decf	?___aldiv^0,w,c
  1865  0026D0  6ECB               	movwf	203,c	;volatile
  1866  0026D2  0012               	return		;funcret
  1867  0026D4                     __end_of_pwmFrequency:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function ___aldiv *****************
  1871 ;; Defined at:
  1872 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  dividend        4    0[COMRAM] long 
  1875 ;;  divisor         4    4[COMRAM] long 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  quotient        4   10[COMRAM] long 
  1878 ;;  sign            1    9[COMRAM] unsigned char 
  1879 ;;  counter         1    8[COMRAM] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  4    0[COMRAM] long 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1889 ;;      Params:         8       0       0       0       0       0       0
  1890 ;;      Locals:         6       0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0
  1892 ;;      Totals:        14       0       0       0       0       0       0
  1893 ;;Total ram usage:       14 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_pwmFrequency
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text10
  1903  001B58                     __ptext10:
  1904                           	callstack 0
  1905  001B58                     ___aldiv:
  1906                           	callstack 28
  1907  001B58  0E00               	movlw	0
  1908  001B5A  6E0A               	movwf	___aldiv@sign^0,c
  1909  001B5C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1910  001B5E  EFB5  F00D         	goto	u2390
  1911  001B62  EFB3  F00D         	goto	u2391
  1912  001B66                     u2391:
  1913  001B66  EFBF  F00D         	goto	l2356
  1914  001B6A                     u2390:
  1915  001B6A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1916  001B6C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1917  001B6E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1918  001B70  6C05               	negf	___aldiv@divisor^0,c
  1919  001B72  0E00               	movlw	0
  1920  001B74  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1921  001B76  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1922  001B78  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1923  001B7A  0E01               	movlw	1
  1924  001B7C  6E0A               	movwf	___aldiv@sign^0,c
  1925  001B7E                     l2356:
  1926  001B7E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1927  001B80  EFC6  F00D         	goto	u2400
  1928  001B84  EFC4  F00D         	goto	u2401
  1929  001B88                     u2401:
  1930  001B88  EFD0  F00D         	goto	l2362
  1931  001B8C                     u2400:
  1932  001B8C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1933  001B8E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1934  001B90  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1935  001B92  6C01               	negf	___aldiv@dividend^0,c
  1936  001B94  0E00               	movlw	0
  1937  001B96  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1938  001B98  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1939  001B9A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1940  001B9C  0E01               	movlw	1
  1941  001B9E  1A0A               	xorwf	___aldiv@sign^0,f,c
  1942  001BA0                     l2362:
  1943  001BA0  0E00               	movlw	0
  1944  001BA2  6E0B               	movwf	___aldiv@quotient^0,c
  1945  001BA4  0E00               	movlw	0
  1946  001BA6  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1947  001BA8  0E00               	movlw	0
  1948  001BAA  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1949  001BAC  0E00               	movlw	0
  1950  001BAE  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1951  001BB0  5005               	movf	___aldiv@divisor^0,w,c
  1952  001BB2  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1953  001BB4  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1954  001BB6  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1955  001BB8  B4D8               	btfsc	status,2,c
  1956  001BBA  EFE1  F00D         	goto	u2411
  1957  001BBE  EFE3  F00D         	goto	u2410
  1958  001BC2                     u2411:
  1959  001BC2  EF19  F00E         	goto	l2384
  1960  001BC6                     u2410:
  1961  001BC6  0E01               	movlw	1
  1962  001BC8  6E09               	movwf	___aldiv@counter^0,c
  1963  001BCA  EFED  F00D         	goto	l2370
  1964  001BCE                     l2368:
  1965  001BCE  90D8               	bcf	status,0,c
  1966  001BD0  3605               	rlcf	___aldiv@divisor^0,f,c
  1967  001BD2  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1968  001BD4  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1969  001BD6  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1970  001BD8  2A09               	incf	___aldiv@counter^0,f,c
  1971  001BDA                     l2370:
  1972  001BDA  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1973  001BDC  EFF2  F00D         	goto	u2421
  1974  001BE0  EFF4  F00D         	goto	u2420
  1975  001BE4                     u2421:
  1976  001BE4  EFE7  F00D         	goto	l2368
  1977  001BE8                     u2420:
  1978  001BE8                     l2372:
  1979  001BE8  90D8               	bcf	status,0,c
  1980  001BEA  360B               	rlcf	___aldiv@quotient^0,f,c
  1981  001BEC  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1982  001BEE  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1983  001BF0  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1984  001BF2  5005               	movf	___aldiv@divisor^0,w,c
  1985  001BF4  5C01               	subwf	___aldiv@dividend^0,w,c
  1986  001BF6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1987  001BF8  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1988  001BFA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1989  001BFC  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1990  001BFE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1991  001C00  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1992  001C02  A0D8               	btfss	status,0,c
  1993  001C04  EF06  F00E         	goto	u2431
  1994  001C08  EF08  F00E         	goto	u2430
  1995  001C0C                     u2431:
  1996  001C0C  EF11  F00E         	goto	l2380
  1997  001C10                     u2430:
  1998  001C10  5005               	movf	___aldiv@divisor^0,w,c
  1999  001C12  5E01               	subwf	___aldiv@dividend^0,f,c
  2000  001C14  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2001  001C16  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2002  001C18  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2003  001C1A  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2004  001C1C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2005  001C1E  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2006  001C20  800B               	bsf	___aldiv@quotient^0,0,c
  2007  001C22                     l2380:
  2008  001C22  90D8               	bcf	status,0,c
  2009  001C24  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2010  001C26  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2011  001C28  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2012  001C2A  3205               	rrcf	___aldiv@divisor^0,f,c
  2013  001C2C  2E09               	decfsz	___aldiv@counter^0,f,c
  2014  001C2E  EFF4  F00D         	goto	l2372
  2015  001C32                     l2384:
  2016  001C32  500A               	movf	___aldiv@sign^0,w,c
  2017  001C34  B4D8               	btfsc	status,2,c
  2018  001C36  EF1F  F00E         	goto	u2441
  2019  001C3A  EF21  F00E         	goto	u2440
  2020  001C3E                     u2441:
  2021  001C3E  EF29  F00E         	goto	l2388
  2022  001C42                     u2440:
  2023  001C42  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2024  001C44  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2025  001C46  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2026  001C48  6C0B               	negf	___aldiv@quotient^0,c
  2027  001C4A  0E00               	movlw	0
  2028  001C4C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2029  001C4E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2030  001C50  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2031  001C52                     l2388:
  2032  001C52  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2033  001C56  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2034  001C5A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2035  001C5E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2036  001C62  0012               	return		;funcret
  2037  001C64                     __end_of___aldiv:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _lcdInit *****************
  2041 ;; Defined at:
  2042 ;;		line 72 in file "lcd.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2056 ;;      Params:         0       0       0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 5
  2063 ;; This function calls:
  2064 ;;		_delayMicro
  2065 ;;		_delayMili
  2066 ;;		_lcdCommand
  2067 ;;		_pinMode
  2068 ;;		_pushNibble
  2069 ;;		_soInit
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text11
  2076  001E2C                     __ptext11:
  2077                           	callstack 0
  2078  001E2C                     _lcdInit:
  2079                           	callstack 25
  2080  001E2C                     
  2081                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2082  001E2C  0E00               	movlw	0
  2083  001E2E  6E02               	movwf	(pinMode@pin+1)^0,c
  2084  001E30  0E1C               	movlw	28
  2085  001E32  6E01               	movwf	pinMode@pin^0,c
  2086  001E34  0E00               	movlw	0
  2087  001E36  6E04               	movwf	(pinMode@type+1)^0,c
  2088  001E38  0E00               	movlw	0
  2089  001E3A  6E03               	movwf	pinMode@type^0,c
  2090  001E3C  ECE8  F006         	call	_pinMode	;wreg free
  2091                           
  2092                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2093  001E40  0E00               	movlw	0
  2094  001E42  6E02               	movwf	(pinMode@pin+1)^0,c
  2095  001E44  0E1D               	movlw	29
  2096  001E46  6E01               	movwf	pinMode@pin^0,c
  2097  001E48  0E00               	movlw	0
  2098  001E4A  6E04               	movwf	(pinMode@type+1)^0,c
  2099  001E4C  0E00               	movlw	0
  2100  001E4E  6E03               	movwf	pinMode@type^0,c
  2101  001E50  ECE8  F006         	call	_pinMode	;wreg free
  2102                           
  2103                           ;lcd.c: 75:  soInit();
  2104  001E54  EC92  F012         	call	_soInit	;wreg free
  2105                           
  2106                           ;lcd.c: 76:  delayMili(15);
  2107  001E58  0E00               	movlw	0
  2108  001E5A  6E02               	movwf	(delayMili@a+1)^0,c
  2109  001E5C  0E0F               	movlw	15
  2110  001E5E  6E01               	movwf	delayMili@a^0,c
  2111  001E60  EC02  F013         	call	_delayMili	;wreg free
  2112                           
  2113                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2114  001E64  0E00               	movlw	0
  2115  001E66  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2116  001E68  0E00               	movlw	0
  2117  001E6A  6E0A               	movwf	pushNibble@rs^0,c
  2118  001E6C  0E03               	movlw	3
  2119  001E6E  EC6A  F013         	call	_pushNibble
  2120                           
  2121                           ;lcd.c: 79:  delayMili(5);
  2122  001E72  0E00               	movlw	0
  2123  001E74  6E02               	movwf	(delayMili@a+1)^0,c
  2124  001E76  0E05               	movlw	5
  2125  001E78  6E01               	movwf	delayMili@a^0,c
  2126  001E7A  EC02  F013         	call	_delayMili	;wreg free
  2127                           
  2128                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2129  001E7E  0E00               	movlw	0
  2130  001E80  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2131  001E82  0E00               	movlw	0
  2132  001E84  6E0A               	movwf	pushNibble@rs^0,c
  2133  001E86  0E03               	movlw	3
  2134  001E88  EC6A  F013         	call	_pushNibble
  2135  001E8C                     
  2136                           ;lcd.c: 81:  delayMicro(160);
  2137  001E8C  0E00               	movlw	0
  2138  001E8E  6E02               	movwf	(delayMicro@a+1)^0,c
  2139  001E90  0EA0               	movlw	160
  2140  001E92  6E01               	movwf	delayMicro@a^0,c
  2141  001E94  ECAD  F013         	call	_delayMicro	;wreg free
  2142  001E98                     
  2143                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2144  001E98  0E00               	movlw	0
  2145  001E9A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2146  001E9C  0E00               	movlw	0
  2147  001E9E  6E0A               	movwf	pushNibble@rs^0,c
  2148  001EA0  0E03               	movlw	3
  2149  001EA2  EC6A  F013         	call	_pushNibble
  2150                           
  2151                           ;lcd.c: 83:  delayMicro(160);
  2152  001EA6  0E00               	movlw	0
  2153  001EA8  6E02               	movwf	(delayMicro@a+1)^0,c
  2154  001EAA  0EA0               	movlw	160
  2155  001EAC  6E01               	movwf	delayMicro@a^0,c
  2156  001EAE  ECAD  F013         	call	_delayMicro	;wreg free
  2157  001EB2                     
  2158                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2159  001EB2  0E00               	movlw	0
  2160  001EB4  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2161  001EB6  0E00               	movlw	0
  2162  001EB8  6E0A               	movwf	pushNibble@rs^0,c
  2163  001EBA  0E02               	movlw	2
  2164  001EBC  EC6A  F013         	call	_pushNibble
  2165  001EC0                     
  2166                           ;lcd.c: 86:  delayMili(10);
  2167  001EC0  0E00               	movlw	0
  2168  001EC2  6E02               	movwf	(delayMili@a+1)^0,c
  2169  001EC4  0E0A               	movlw	10
  2170  001EC6  6E01               	movwf	delayMili@a^0,c
  2171  001EC8  EC02  F013         	call	_delayMili	;wreg free
  2172  001ECC                     
  2173                           ;lcd.c: 88:  lcdCommand(0x28);
  2174  001ECC  0E28               	movlw	40
  2175  001ECE  EC8C  F013         	call	_lcdCommand
  2176  001ED2                     
  2177                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2178  001ED2  0E0C               	movlw	12
  2179  001ED4  EC8C  F013         	call	_lcdCommand
  2180  001ED8                     
  2181                           ;lcd.c: 90:  lcdCommand(0x01);
  2182  001ED8  0E01               	movlw	1
  2183  001EDA  EC8C  F013         	call	_lcdCommand
  2184  001EDE  0012               	return		;funcret
  2185  001EE0                     __end_of_lcdInit:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function _pushNibble *****************
  2189 ;; Defined at:
  2190 ;;		line 25 in file "lcd.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  value           1    wreg     unsigned char 
  2193 ;;  rs              2    9[COMRAM] int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  value           1   11[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2205 ;;      Params:         2       0       0       0       0       0       0
  2206 ;;      Locals:         1       0       0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0
  2208 ;;      Totals:         3       0       0       0       0       0       0
  2209 ;;Total ram usage:        3 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 3
  2212 ;; This function calls:
  2213 ;;		_digitalWrite
  2214 ;;		_pulseEnablePin
  2215 ;;		_soWrite
  2216 ;; This function is called by:
  2217 ;;		_lcdInit
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222  0026D4                     __ptext12:
  2223                           	callstack 0
  2224  0026D4                     _pushNibble:
  2225                           	callstack 26
  2226                           
  2227                           ;incstack = 0
  2228                           ;pushNibble@value stored from wreg
  2229  0026D4  6E0C               	movwf	pushNibble@value^0,c
  2230  0026D6                     
  2231                           ;lcd.c: 26:  soWrite(value);
  2232  0026D6  C00C  F007         	movff	pushNibble@value,soWrite@value
  2233  0026DA  6A08               	clrf	(soWrite@value+1)^0,c
  2234  0026DC  EC0B  F012         	call	_soWrite	;wreg free
  2235                           
  2236                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2237  0026E0  0E00               	movlw	0
  2238  0026E2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2239  0026E4  0E1D               	movlw	29
  2240  0026E6  6E01               	movwf	digitalWrite@pin^0,c
  2241  0026E8  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2242  0026EC  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2243  0026F0  EC0F  F008         	call	_digitalWrite	;wreg free
  2244                           
  2245                           ;lcd.c: 28:  pulseEnablePin();
  2246  0026F4  EC32  F012         	call	_pulseEnablePin	;wreg free
  2247  0026F8  0012               	return		;funcret
  2248  0026FA                     __end_of_pushNibble:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _kpInit *****************
  2252 ;; Defined at:
  2253 ;;		line 54 in file "keypad.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2267 ;;      Params:         0       0       0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 2
  2274 ;; This function calls:
  2275 ;;		_pinMode
  2276 ;;		_soInit
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text13
  2283  0025D2                     __ptext13:
  2284                           	callstack 0
  2285  0025D2                     _kpInit:
  2286                           	callstack 28
  2287  0025D2                     
  2288                           ;keypad.c: 55:   soInit();
  2289  0025D2  EC92  F012         	call	_soInit	;wreg free
  2290                           
  2291                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2292  0025D6  0E00               	movlw	0
  2293  0025D8  6E02               	movwf	(pinMode@pin+1)^0,c
  2294  0025DA  0E0A               	movlw	10
  2295  0025DC  6E01               	movwf	pinMode@pin^0,c
  2296  0025DE  0E00               	movlw	0
  2297  0025E0  6E04               	movwf	(pinMode@type+1)^0,c
  2298  0025E2  0E01               	movlw	1
  2299  0025E4  6E03               	movwf	pinMode@type^0,c
  2300  0025E6  ECE8  F006         	call	_pinMode	;wreg free
  2301                           
  2302                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2303  0025EA  0E00               	movlw	0
  2304  0025EC  6E02               	movwf	(pinMode@pin+1)^0,c
  2305  0025EE  0E09               	movlw	9
  2306  0025F0  6E01               	movwf	pinMode@pin^0,c
  2307  0025F2  0E00               	movlw	0
  2308  0025F4  6E04               	movwf	(pinMode@type+1)^0,c
  2309  0025F6  0E01               	movlw	1
  2310  0025F8  6E03               	movwf	pinMode@type^0,c
  2311  0025FA  ECE8  F006         	call	_pinMode	;wreg free
  2312  0025FE                     
  2313                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2314  0025FE  0E0C               	movlw	12
  2315  002600  6EC1               	movwf	193,c	;volatile
  2316  002602  0012               	return		;funcret
  2317  002604                     __end_of_kpInit:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _soInit *****************
  2321 ;; Defined at:
  2322 ;;		line 3 in file "so.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2336 ;;      Params:         0       0       0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0
  2339 ;;      Totals:         0       0       0       0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 1
  2343 ;; This function calls:
  2344 ;;		_pinMode
  2345 ;; This function is called by:
  2346 ;;		_kpInit
  2347 ;;		_lcdInit
  2348 ;;		_ssdInit
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text14
  2353  002524                     __ptext14:
  2354                           	callstack 0
  2355  002524                     _soInit:
  2356                           	callstack 28
  2357  002524                     
  2358                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2359  002524  0E00               	movlw	0
  2360  002526  6E02               	movwf	(pinMode@pin+1)^0,c
  2361  002528  0E1F               	movlw	31
  2362  00252A  6E01               	movwf	pinMode@pin^0,c
  2363  00252C  0E00               	movlw	0
  2364  00252E  6E04               	movwf	(pinMode@type+1)^0,c
  2365  002530  0E00               	movlw	0
  2366  002532  6E03               	movwf	pinMode@type^0,c
  2367  002534  ECE8  F006         	call	_pinMode	;wreg free
  2368                           
  2369                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2370  002538  0E00               	movlw	0
  2371  00253A  6E02               	movwf	(pinMode@pin+1)^0,c
  2372  00253C  0E08               	movlw	8
  2373  00253E  6E01               	movwf	pinMode@pin^0,c
  2374  002540  0E00               	movlw	0
  2375  002542  6E04               	movwf	(pinMode@type+1)^0,c
  2376  002544  0E00               	movlw	0
  2377  002546  6E03               	movwf	pinMode@type^0,c
  2378  002548  ECE8  F006         	call	_pinMode	;wreg free
  2379                           
  2380                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2381  00254C  0E00               	movlw	0
  2382  00254E  6E02               	movwf	(pinMode@pin+1)^0,c
  2383  002550  0E1E               	movlw	30
  2384  002552  6E01               	movwf	pinMode@pin^0,c
  2385  002554  0E00               	movlw	0
  2386  002556  6E04               	movwf	(pinMode@type+1)^0,c
  2387  002558  0E00               	movlw	0
  2388  00255A  6E03               	movwf	pinMode@type^0,c
  2389  00255C  ECE8  F006         	call	_pinMode	;wreg free
  2390  002560  0012               	return		;funcret
  2391  002562                     __end_of_soInit:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function _pinMode *****************
  2395 ;; Defined at:
  2396 ;;		line 54 in file "io.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  pin             2    0[COMRAM] int 
  2399 ;;  type            2    2[COMRAM] int 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2411 ;;      Params:         4       0       0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0
  2413 ;;      Temps:          2       0       0       0       0       0       0
  2414 ;;      Totals:         6       0       0       0       0       0       0
  2415 ;;Total ram usage:        6 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_kpInit
  2421 ;;		_lcdInit
  2422 ;;		_soInit
  2423 ;;		_ssdInit
  2424 ;;		_rgbInit
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text15
  2429  000DD0                     __ptext15:
  2430                           	callstack 0
  2431  000DD0                     _pinMode:
  2432                           	callstack 28
  2433  000DD0                     
  2434                           ;io.c: 56:     if(pin <8){
  2435  000DD0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2436  000DD2  EFF6  F006         	goto	u2190
  2437  000DD6  5002               	movf	(pinMode@pin+1)^0,w,c
  2438  000DD8  E107               	bnz	u2191
  2439  000DDA  0E08               	movlw	8
  2440  000DDC  5C01               	subwf	pinMode@pin^0,w,c
  2441  000DDE  B0D8               	btfsc	status,0,c
  2442  000DE0  EFF4  F006         	goto	u2191
  2443  000DE4  EFF6  F006         	goto	u2190
  2444  000DE8                     u2191:
  2445  000DE8  EF20  F007         	goto	l2310
  2446  000DEC                     u2190:
  2447  000DEC                     
  2448                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2449  000DEC  5003               	movf	pinMode@type^0,w,c
  2450  000DEE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2451  000DF0  B4D8               	btfsc	status,2,c
  2452  000DF2  EFFD  F006         	goto	u2201
  2453  000DF6  EFFF  F006         	goto	u2200
  2454  000DFA                     u2201:
  2455  000DFA  EF0F  F007         	goto	l2308
  2456  000DFE                     u2200:
  2457  000DFE  C001  F005         	movff	pinMode@pin,??_pinMode
  2458  000E02  0E01               	movlw	1
  2459  000E04  6E06               	movwf	(??_pinMode+1)^0,c
  2460  000E06  2A05               	incf	??_pinMode^0,f,c
  2461  000E08  EF08  F007         	goto	u2214
  2462  000E0C                     u2215:
  2463  000E0C  90D8               	bcf	status,0,c
  2464  000E0E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2465  000E10                     u2214:
  2466  000E10  2E05               	decfsz	??_pinMode^0,f,c
  2467  000E12  EF06  F007         	goto	u2215
  2468  000E16  5006               	movf	(??_pinMode+1)^0,w,c
  2469  000E18  1292               	iorwf	146,f,c	;volatile
  2470  000E1A  EF0E  F008         	goto	l174
  2471  000E1E                     l2308:
  2472  000E1E  C001  F005         	movff	pinMode@pin,??_pinMode
  2473  000E22  0E01               	movlw	1
  2474  000E24  6E06               	movwf	(??_pinMode+1)^0,c
  2475  000E26  2A05               	incf	??_pinMode^0,f,c
  2476  000E28  EF18  F007         	goto	u2224
  2477  000E2C                     u2225:
  2478  000E2C  90D8               	bcf	status,0,c
  2479  000E2E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2480  000E30                     u2224:
  2481  000E30  2E05               	decfsz	??_pinMode^0,f,c
  2482  000E32  EF16  F007         	goto	u2225
  2483  000E36  5006               	movf	(??_pinMode+1)^0,w,c
  2484  000E38  0AFF               	xorlw	255
  2485  000E3A  1692               	andwf	146,f,c	;volatile
  2486  000E3C  EF0E  F008         	goto	l174
  2487  000E40                     l2310:
  2488  000E40  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2489  000E42  EF2E  F007         	goto	u2230
  2490  000E46  5002               	movf	(pinMode@pin+1)^0,w,c
  2491  000E48  E107               	bnz	u2231
  2492  000E4A  0E10               	movlw	16
  2493  000E4C  5C01               	subwf	pinMode@pin^0,w,c
  2494  000E4E  B0D8               	btfsc	status,0,c
  2495  000E50  EF2C  F007         	goto	u2231
  2496  000E54  EF2E  F007         	goto	u2230
  2497  000E58                     u2231:
  2498  000E58  EF5C  F007         	goto	l2318
  2499  000E5C                     u2230:
  2500  000E5C                     
  2501                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2502  000E5C  5003               	movf	pinMode@type^0,w,c
  2503  000E5E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2504  000E60  B4D8               	btfsc	status,2,c
  2505  000E62  EF35  F007         	goto	u2241
  2506  000E66  EF37  F007         	goto	u2240
  2507  000E6A                     u2241:
  2508  000E6A  EF49  F007         	goto	l2316
  2509  000E6E                     u2240:
  2510  000E6E  C001  F005         	movff	pinMode@pin,??_pinMode
  2511  000E72  0EF8               	movlw	-8
  2512  000E74  2605               	addwf	??_pinMode^0,f,c
  2513  000E76  0E01               	movlw	1
  2514  000E78  6E06               	movwf	(??_pinMode+1)^0,c
  2515  000E7A  2A05               	incf	??_pinMode^0,f,c
  2516  000E7C  EF42  F007         	goto	u2254
  2517  000E80                     u2255:
  2518  000E80  90D8               	bcf	status,0,c
  2519  000E82  3606               	rlcf	(??_pinMode+1)^0,f,c
  2520  000E84                     u2254:
  2521  000E84  2E05               	decfsz	??_pinMode^0,f,c
  2522  000E86  EF40  F007         	goto	u2255
  2523  000E8A  5006               	movf	(??_pinMode+1)^0,w,c
  2524  000E8C  1293               	iorwf	147,f,c	;volatile
  2525  000E8E  EF0E  F008         	goto	l174
  2526  000E92                     l2316:
  2527  000E92  C001  F005         	movff	pinMode@pin,??_pinMode
  2528  000E96  0EF8               	movlw	-8
  2529  000E98  2605               	addwf	??_pinMode^0,f,c
  2530  000E9A  0E01               	movlw	1
  2531  000E9C  6E06               	movwf	(??_pinMode+1)^0,c
  2532  000E9E  2A05               	incf	??_pinMode^0,f,c
  2533  000EA0  EF54  F007         	goto	u2264
  2534  000EA4                     u2265:
  2535  000EA4  90D8               	bcf	status,0,c
  2536  000EA6  3606               	rlcf	(??_pinMode+1)^0,f,c
  2537  000EA8                     u2264:
  2538  000EA8  2E05               	decfsz	??_pinMode^0,f,c
  2539  000EAA  EF52  F007         	goto	u2265
  2540  000EAE  5006               	movf	(??_pinMode+1)^0,w,c
  2541  000EB0  0AFF               	xorlw	255
  2542  000EB2  1693               	andwf	147,f,c	;volatile
  2543  000EB4  EF0E  F008         	goto	l174
  2544  000EB8                     l2318:
  2545  000EB8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2546  000EBA  EF6A  F007         	goto	u2270
  2547  000EBE  5002               	movf	(pinMode@pin+1)^0,w,c
  2548  000EC0  E107               	bnz	u2271
  2549  000EC2  0E18               	movlw	24
  2550  000EC4  5C01               	subwf	pinMode@pin^0,w,c
  2551  000EC6  B0D8               	btfsc	status,0,c
  2552  000EC8  EF68  F007         	goto	u2271
  2553  000ECC  EF6A  F007         	goto	u2270
  2554  000ED0                     u2271:
  2555  000ED0  EF98  F007         	goto	l2326
  2556  000ED4                     u2270:
  2557  000ED4                     
  2558                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2559  000ED4  5003               	movf	pinMode@type^0,w,c
  2560  000ED6  1004               	iorwf	(pinMode@type+1)^0,w,c
  2561  000ED8  B4D8               	btfsc	status,2,c
  2562  000EDA  EF71  F007         	goto	u2281
  2563  000EDE  EF73  F007         	goto	u2280
  2564  000EE2                     u2281:
  2565  000EE2  EF85  F007         	goto	l2324
  2566  000EE6                     u2280:
  2567  000EE6  C001  F005         	movff	pinMode@pin,??_pinMode
  2568  000EEA  0EF0               	movlw	-16
  2569  000EEC  2605               	addwf	??_pinMode^0,f,c
  2570  000EEE  0E01               	movlw	1
  2571  000EF0  6E06               	movwf	(??_pinMode+1)^0,c
  2572  000EF2  2A05               	incf	??_pinMode^0,f,c
  2573  000EF4  EF7E  F007         	goto	u2294
  2574  000EF8                     u2295:
  2575  000EF8  90D8               	bcf	status,0,c
  2576  000EFA  3606               	rlcf	(??_pinMode+1)^0,f,c
  2577  000EFC                     u2294:
  2578  000EFC  2E05               	decfsz	??_pinMode^0,f,c
  2579  000EFE  EF7C  F007         	goto	u2295
  2580  000F02  5006               	movf	(??_pinMode+1)^0,w,c
  2581  000F04  1294               	iorwf	148,f,c	;volatile
  2582  000F06  EF0E  F008         	goto	l174
  2583  000F0A                     l2324:
  2584  000F0A  C001  F005         	movff	pinMode@pin,??_pinMode
  2585  000F0E  0EF0               	movlw	-16
  2586  000F10  2605               	addwf	??_pinMode^0,f,c
  2587  000F12  0E01               	movlw	1
  2588  000F14  6E06               	movwf	(??_pinMode+1)^0,c
  2589  000F16  2A05               	incf	??_pinMode^0,f,c
  2590  000F18  EF90  F007         	goto	u2304
  2591  000F1C                     u2305:
  2592  000F1C  90D8               	bcf	status,0,c
  2593  000F1E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2594  000F20                     u2304:
  2595  000F20  2E05               	decfsz	??_pinMode^0,f,c
  2596  000F22  EF8E  F007         	goto	u2305
  2597  000F26  5006               	movf	(??_pinMode+1)^0,w,c
  2598  000F28  0AFF               	xorlw	255
  2599  000F2A  1694               	andwf	148,f,c	;volatile
  2600  000F2C  EF0E  F008         	goto	l174
  2601  000F30                     l2326:
  2602  000F30  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2603  000F32  EFA6  F007         	goto	u2310
  2604  000F36  5002               	movf	(pinMode@pin+1)^0,w,c
  2605  000F38  E107               	bnz	u2311
  2606  000F3A  0E20               	movlw	32
  2607  000F3C  5C01               	subwf	pinMode@pin^0,w,c
  2608  000F3E  B0D8               	btfsc	status,0,c
  2609  000F40  EFA4  F007         	goto	u2311
  2610  000F44  EFA6  F007         	goto	u2310
  2611  000F48                     u2311:
  2612  000F48  EFD4  F007         	goto	l2334
  2613  000F4C                     u2310:
  2614  000F4C                     
  2615                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2616  000F4C  5003               	movf	pinMode@type^0,w,c
  2617  000F4E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2618  000F50  B4D8               	btfsc	status,2,c
  2619  000F52  EFAD  F007         	goto	u2321
  2620  000F56  EFAF  F007         	goto	u2320
  2621  000F5A                     u2321:
  2622  000F5A  EFC1  F007         	goto	l2332
  2623  000F5E                     u2320:
  2624  000F5E  C001  F005         	movff	pinMode@pin,??_pinMode
  2625  000F62  0EE8               	movlw	-24
  2626  000F64  2605               	addwf	??_pinMode^0,f,c
  2627  000F66  0E01               	movlw	1
  2628  000F68  6E06               	movwf	(??_pinMode+1)^0,c
  2629  000F6A  2A05               	incf	??_pinMode^0,f,c
  2630  000F6C  EFBA  F007         	goto	u2334
  2631  000F70                     u2335:
  2632  000F70  90D8               	bcf	status,0,c
  2633  000F72  3606               	rlcf	(??_pinMode+1)^0,f,c
  2634  000F74                     u2334:
  2635  000F74  2E05               	decfsz	??_pinMode^0,f,c
  2636  000F76  EFB8  F007         	goto	u2335
  2637  000F7A  5006               	movf	(??_pinMode+1)^0,w,c
  2638  000F7C  1295               	iorwf	149,f,c	;volatile
  2639  000F7E  EF0E  F008         	goto	l174
  2640  000F82                     l2332:
  2641  000F82  C001  F005         	movff	pinMode@pin,??_pinMode
  2642  000F86  0EE8               	movlw	-24
  2643  000F88  2605               	addwf	??_pinMode^0,f,c
  2644  000F8A  0E01               	movlw	1
  2645  000F8C  6E06               	movwf	(??_pinMode+1)^0,c
  2646  000F8E  2A05               	incf	??_pinMode^0,f,c
  2647  000F90  EFCC  F007         	goto	u2344
  2648  000F94                     u2345:
  2649  000F94  90D8               	bcf	status,0,c
  2650  000F96  3606               	rlcf	(??_pinMode+1)^0,f,c
  2651  000F98                     u2344:
  2652  000F98  2E05               	decfsz	??_pinMode^0,f,c
  2653  000F9A  EFCA  F007         	goto	u2345
  2654  000F9E  5006               	movf	(??_pinMode+1)^0,w,c
  2655  000FA0  0AFF               	xorlw	255
  2656  000FA2  1695               	andwf	149,f,c	;volatile
  2657  000FA4  EF0E  F008         	goto	l174
  2658  000FA8                     l2334:
  2659  000FA8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2660  000FAA  EFE2  F007         	goto	u2350
  2661  000FAE  5002               	movf	(pinMode@pin+1)^0,w,c
  2662  000FB0  E107               	bnz	u2351
  2663  000FB2  0E28               	movlw	40
  2664  000FB4  5C01               	subwf	pinMode@pin^0,w,c
  2665  000FB6  B0D8               	btfsc	status,0,c
  2666  000FB8  EFE0  F007         	goto	u2351
  2667  000FBC  EFE2  F007         	goto	u2350
  2668  000FC0                     u2351:
  2669  000FC0  EF0E  F008         	goto	l174
  2670  000FC4                     u2350:
  2671  000FC4                     
  2672                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2673  000FC4  5003               	movf	pinMode@type^0,w,c
  2674  000FC6  1004               	iorwf	(pinMode@type+1)^0,w,c
  2675  000FC8  B4D8               	btfsc	status,2,c
  2676  000FCA  EFE9  F007         	goto	u2361
  2677  000FCE  EFEB  F007         	goto	u2360
  2678  000FD2                     u2361:
  2679  000FD2  EFFD  F007         	goto	l2340
  2680  000FD6                     u2360:
  2681  000FD6  C001  F005         	movff	pinMode@pin,??_pinMode
  2682  000FDA  0EE0               	movlw	-32
  2683  000FDC  2605               	addwf	??_pinMode^0,f,c
  2684  000FDE  0E01               	movlw	1
  2685  000FE0  6E06               	movwf	(??_pinMode+1)^0,c
  2686  000FE2  2A05               	incf	??_pinMode^0,f,c
  2687  000FE4  EFF6  F007         	goto	u2374
  2688  000FE8                     u2375:
  2689  000FE8  90D8               	bcf	status,0,c
  2690  000FEA  3606               	rlcf	(??_pinMode+1)^0,f,c
  2691  000FEC                     u2374:
  2692  000FEC  2E05               	decfsz	??_pinMode^0,f,c
  2693  000FEE  EFF4  F007         	goto	u2375
  2694  000FF2  5006               	movf	(??_pinMode+1)^0,w,c
  2695  000FF4  1296               	iorwf	150,f,c	;volatile
  2696  000FF6  EF0E  F008         	goto	l174
  2697  000FFA                     l2340:
  2698  000FFA  C001  F005         	movff	pinMode@pin,??_pinMode
  2699  000FFE  0EE0               	movlw	-32
  2700  001000  2605               	addwf	??_pinMode^0,f,c
  2701  001002  0E01               	movlw	1
  2702  001004  6E06               	movwf	(??_pinMode+1)^0,c
  2703  001006  2A05               	incf	??_pinMode^0,f,c
  2704  001008  EF08  F008         	goto	u2384
  2705  00100C                     u2385:
  2706  00100C  90D8               	bcf	status,0,c
  2707  00100E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2708  001010                     u2384:
  2709  001010  2E05               	decfsz	??_pinMode^0,f,c
  2710  001012  EF06  F008         	goto	u2385
  2711  001016  5006               	movf	(??_pinMode+1)^0,w,c
  2712  001018  0AFF               	xorlw	255
  2713  00101A  1696               	andwf	150,f,c	;volatile
  2714  00101C                     l174:
  2715  00101C  0012               	return		;funcret
  2716  00101E                     __end_of_pinMode:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _Time *****************
  2720 ;; Defined at:
  2721 ;;		line 64 in file "main.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  cont            4   24[COMRAM] unsigned long 
  2726 ;;  tecla           2   28[COMRAM] unsigned int 
  2727 ;;  i               2   22[COMRAM] int 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2737 ;;      Params:         0       0       0       0       0       0       0
  2738 ;;      Locals:         8       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0
  2740 ;;      Totals:         8       0       0       0       0       0       0
  2741 ;;Total ram usage:        8 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; Hardware stack levels required when called: 6
  2744 ;; This function calls:
  2745 ;;		___lldiv
  2746 ;;		___llmod
  2747 ;;		_kpDebounce
  2748 ;;		_kpRead
  2749 ;;		_lcdChar
  2750 ;;		_lcdCommand
  2751 ;;		_lcdPosition
  2752 ;;		_lcdString
  2753 ;;		_tempo
  2754 ;; This function is called by:
  2755 ;;		_main
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text16
  2760  000B1C                     __ptext16:
  2761                           	callstack 0
  2762  000B1C                     _Time:
  2763                           	callstack 24
  2764  000B1C                     
  2765                           ;main.c: 66:     int i;;main.c: 67:     unsigned int tecla = 16;
  2766  000B1C  0E00               	movlw	0
  2767  000B1E  6E1E               	movwf	(Time@tecla+1)^0,c
  2768  000B20  0E10               	movlw	16
  2769  000B22  6E1D               	movwf	Time@tecla^0,c
  2770                           
  2771                           ;main.c: 68:     unsigned long int cont=0;
  2772  000B24  0E00               	movlw	0
  2773  000B26  6E19               	movwf	Time@cont^0,c
  2774  000B28  0E00               	movlw	0
  2775  000B2A  6E1A               	movwf	(Time@cont+1)^0,c
  2776  000B2C  0E00               	movlw	0
  2777  000B2E  6E1B               	movwf	(Time@cont+2)^0,c
  2778  000B30  0E00               	movlw	0
  2779  000B32  6E1C               	movwf	(Time@cont+3)^0,c
  2780  000B34                     
  2781                           ;main.c: 70:     lcdCommand(0x80);
  2782  000B34  0E80               	movlw	128
  2783  000B36  EC8C  F013         	call	_lcdCommand
  2784  000B3A                     
  2785                           ;main.c: 71:     lcdString("Ajuste tempo:");
  2786  000B3A  0E2B               	movlw	low STR_2
  2787  000B3C  6E0F               	movwf	lcdString@msg^0,c
  2788  000B3E  0E06               	movlw	high STR_2
  2789  000B40  6E10               	movwf	(lcdString@msg+1)^0,c
  2790  000B42  ECAA  F010         	call	_lcdString	;wreg free
  2791  000B46                     
  2792                           ;main.c: 72:     tempo(500);
  2793  000B46  0EF4               	movlw	244
  2794  000B48  EC59  F011         	call	_tempo
  2795  000B4C                     
  2796                           ;main.c: 73:     lcdCommand(0x01);
  2797  000B4C  0E01               	movlw	1
  2798  000B4E  EC8C  F013         	call	_lcdCommand
  2799  000B52                     
  2800                           ;main.c: 74:     lcdString("(S)m-(s)m+");
  2801  000B52  0E44               	movlw	low STR_3
  2802  000B54  6E0F               	movwf	lcdString@msg^0,c
  2803  000B56  0E06               	movlw	high STR_3
  2804  000B58  6E10               	movwf	(lcdString@msg+1)^0,c
  2805  000B5A  ECAA  F010         	call	_lcdString	;wreg free
  2806  000B5E                     
  2807                           ;main.c: 75:     lcdCommand(0xC0);
  2808  000B5E  0EC0               	movlw	192
  2809  000B60  EC8C  F013         	call	_lcdCommand
  2810  000B64                     
  2811                           ;main.c: 76:     lcdString("(A)s-(Y)s+");
  2812  000B64  0E4F               	movlw	low STR_4
  2813  000B66  6E0F               	movwf	lcdString@msg^0,c
  2814  000B68  0E06               	movlw	high STR_4
  2815  000B6A  6E10               	movwf	(lcdString@msg+1)^0,c
  2816  000B6C  ECAA  F010         	call	_lcdString	;wreg free
  2817  000B70                     
  2818                           ;main.c: 77:     tempo(1000);
  2819  000B70  0EE8               	movlw	232
  2820  000B72  EC59  F011         	call	_tempo
  2821  000B76                     
  2822                           ;main.c: 78:     lcdCommand(0x01);
  2823  000B76  0E01               	movlw	1
  2824  000B78  EC8C  F013         	call	_lcdCommand
  2825  000B7C                     
  2826                           ;main.c: 80:     for (i = 0; i < 50; i++)
  2827  000B7C  0E00               	movlw	0
  2828  000B7E  6E18               	movwf	(Time@i+1)^0,c
  2829  000B80  0E00               	movlw	0
  2830  000B82  6E17               	movwf	Time@i^0,c
  2831  000B84                     l2996:
  2832                           
  2833                           ;main.c: 81:     {;main.c: 82:         lcdPosition(1, 0);
  2834  000B84  0E00               	movlw	0
  2835  000B86  6E10               	movwf	(lcdPosition@line+1)^0,c
  2836  000B88  0E01               	movlw	1
  2837  000B8A  6E0F               	movwf	lcdPosition@line^0,c
  2838  000B8C  0E00               	movlw	0
  2839  000B8E  6E12               	movwf	(lcdPosition@col+1)^0,c
  2840  000B90  0E00               	movlw	0
  2841  000B92  6E11               	movwf	lcdPosition@col^0,c
  2842  000B94  ECB1  F012         	call	_lcdPosition	;wreg free
  2843                           
  2844                           ;main.c: 83:         lcdChar((cont / 60000) % 6 + 48);
  2845  000B98  0E60               	movlw	96
  2846  000B9A  6E05               	movwf	___lldiv@divisor^0,c
  2847  000B9C  0EEA               	movlw	234
  2848  000B9E  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2849  000BA0  0E00               	movlw	0
  2850  000BA2  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2851  000BA4  0E00               	movlw	0
  2852  000BA6  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2853  000BA8  C019  F001         	movff	Time@cont,___lldiv@dividend
  2854  000BAC  C01A  F002         	movff	Time@cont+1,___lldiv@dividend+1
  2855  000BB0  C01B  F003         	movff	Time@cont+2,___lldiv@dividend+2
  2856  000BB4  C01C  F004         	movff	Time@cont+3,___lldiv@dividend+3
  2857  000BB8  ECC8  F00F         	call	___lldiv	;wreg free
  2858  000BBC  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2859  000BC0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2860  000BC4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2861  000BC8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2862  000BCC  0E06               	movlw	6
  2863  000BCE  6E12               	movwf	___llmod@divisor^0,c
  2864  000BD0  0E00               	movlw	0
  2865  000BD2  6E13               	movwf	(___llmod@divisor+1)^0,c
  2866  000BD4  0E00               	movlw	0
  2867  000BD6  6E14               	movwf	(___llmod@divisor+2)^0,c
  2868  000BD8  0E00               	movlw	0
  2869  000BDA  6E15               	movwf	(___llmod@divisor+3)^0,c
  2870  000BDC  EC66  F010         	call	___llmod	;wreg free
  2871  000BE0  500E               	movf	?___llmod^0,w,c
  2872  000BE2  0F30               	addlw	48
  2873  000BE4  EC7D  F013         	call	_lcdChar
  2874                           
  2875                           ;main.c: 84:         lcdChar((cont / 6000) % 10 + 48);
  2876  000BE8  0E70               	movlw	112
  2877  000BEA  6E05               	movwf	___lldiv@divisor^0,c
  2878  000BEC  0E17               	movlw	23
  2879  000BEE  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2880  000BF0  0E00               	movlw	0
  2881  000BF2  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2882  000BF4  0E00               	movlw	0
  2883  000BF6  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2884  000BF8  C019  F001         	movff	Time@cont,___lldiv@dividend
  2885  000BFC  C01A  F002         	movff	Time@cont+1,___lldiv@dividend+1
  2886  000C00  C01B  F003         	movff	Time@cont+2,___lldiv@dividend+2
  2887  000C04  C01C  F004         	movff	Time@cont+3,___lldiv@dividend+3
  2888  000C08  ECC8  F00F         	call	___lldiv	;wreg free
  2889  000C0C  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2890  000C10  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2891  000C14  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2892  000C18  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2893  000C1C  0E0A               	movlw	10
  2894  000C1E  6E12               	movwf	___llmod@divisor^0,c
  2895  000C20  0E00               	movlw	0
  2896  000C22  6E13               	movwf	(___llmod@divisor+1)^0,c
  2897  000C24  0E00               	movlw	0
  2898  000C26  6E14               	movwf	(___llmod@divisor+2)^0,c
  2899  000C28  0E00               	movlw	0
  2900  000C2A  6E15               	movwf	(___llmod@divisor+3)^0,c
  2901  000C2C  EC66  F010         	call	___llmod	;wreg free
  2902  000C30  500E               	movf	?___llmod^0,w,c
  2903  000C32  0F30               	addlw	48
  2904  000C34  EC7D  F013         	call	_lcdChar
  2905                           
  2906                           ;main.c: 85:         lcdChar(':');
  2907  000C38  0E3A               	movlw	58
  2908  000C3A  EC7D  F013         	call	_lcdChar
  2909                           
  2910                           ;main.c: 86:         lcdChar((cont / 1000) % 6 + 48);
  2911  000C3E  0EE8               	movlw	232
  2912  000C40  6E05               	movwf	___lldiv@divisor^0,c
  2913  000C42  0E03               	movlw	3
  2914  000C44  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2915  000C46  0E00               	movlw	0
  2916  000C48  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2917  000C4A  0E00               	movlw	0
  2918  000C4C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2919  000C4E  C019  F001         	movff	Time@cont,___lldiv@dividend
  2920  000C52  C01A  F002         	movff	Time@cont+1,___lldiv@dividend+1
  2921  000C56  C01B  F003         	movff	Time@cont+2,___lldiv@dividend+2
  2922  000C5A  C01C  F004         	movff	Time@cont+3,___lldiv@dividend+3
  2923  000C5E  ECC8  F00F         	call	___lldiv	;wreg free
  2924  000C62  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2925  000C66  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2926  000C6A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2927  000C6E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2928  000C72  0E06               	movlw	6
  2929  000C74  6E12               	movwf	___llmod@divisor^0,c
  2930  000C76  0E00               	movlw	0
  2931  000C78  6E13               	movwf	(___llmod@divisor+1)^0,c
  2932  000C7A  0E00               	movlw	0
  2933  000C7C  6E14               	movwf	(___llmod@divisor+2)^0,c
  2934  000C7E  0E00               	movlw	0
  2935  000C80  6E15               	movwf	(___llmod@divisor+3)^0,c
  2936  000C82  EC66  F010         	call	___llmod	;wreg free
  2937  000C86  500E               	movf	?___llmod^0,w,c
  2938  000C88  0F30               	addlw	48
  2939  000C8A  EC7D  F013         	call	_lcdChar
  2940                           
  2941                           ;main.c: 87:         lcdChar((cont / 100) % 10 + 48);
  2942  000C8E  0E64               	movlw	100
  2943  000C90  6E05               	movwf	___lldiv@divisor^0,c
  2944  000C92  0E00               	movlw	0
  2945  000C94  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2946  000C96  0E00               	movlw	0
  2947  000C98  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2948  000C9A  0E00               	movlw	0
  2949  000C9C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2950  000C9E  C019  F001         	movff	Time@cont,___lldiv@dividend
  2951  000CA2  C01A  F002         	movff	Time@cont+1,___lldiv@dividend+1
  2952  000CA6  C01B  F003         	movff	Time@cont+2,___lldiv@dividend+2
  2953  000CAA  C01C  F004         	movff	Time@cont+3,___lldiv@dividend+3
  2954  000CAE  ECC8  F00F         	call	___lldiv	;wreg free
  2955  000CB2  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2956  000CB6  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2957  000CBA  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2958  000CBE  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2959  000CC2  0E0A               	movlw	10
  2960  000CC4  6E12               	movwf	___llmod@divisor^0,c
  2961  000CC6  0E00               	movlw	0
  2962  000CC8  6E13               	movwf	(___llmod@divisor+1)^0,c
  2963  000CCA  0E00               	movlw	0
  2964  000CCC  6E14               	movwf	(___llmod@divisor+2)^0,c
  2965  000CCE  0E00               	movlw	0
  2966  000CD0  6E15               	movwf	(___llmod@divisor+3)^0,c
  2967  000CD2  EC66  F010         	call	___llmod	;wreg free
  2968  000CD6  500E               	movf	?___llmod^0,w,c
  2969  000CD8  0F30               	addlw	48
  2970  000CDA  EC7D  F013         	call	_lcdChar
  2971                           
  2972                           ;main.c: 89:         kpDebounce();
  2973  000CDE  EC7C  F00C         	call	_kpDebounce	;wreg free
  2974                           
  2975                           ;main.c: 91:         if (kpRead() != tecla) {
  2976  000CE2  ECA8  F013         	call	_kpRead	;wreg free
  2977  000CE6  501D               	movf	Time@tecla^0,w,c
  2978  000CE8  1801               	xorwf	?_kpRead^0,w,c
  2979  000CEA  E109               	bnz	u3410
  2980  000CEC  501E               	movf	(Time@tecla+1)^0,w,c
  2981  000CEE  1802               	xorwf	(?_kpRead+1)^0,w,c
  2982  000CF0  B4D8               	btfsc	status,2,c
  2983  000CF2  EF7D  F006         	goto	u3411
  2984  000CF6  EF7F  F006         	goto	u3410
  2985  000CFA                     u3411:
  2986  000CFA  EFD4  F006         	goto	l3016
  2987  000CFE                     u3410:
  2988  000CFE                     
  2989                           ;main.c: 93:             tecla = kpRead();
  2990  000CFE  ECA8  F013         	call	_kpRead	;wreg free
  2991  000D02  C001  F01D         	movff	?_kpRead,Time@tecla
  2992  000D06  C002  F01E         	movff	?_kpRead+1,Time@tecla+1
  2993  000D0A                     
  2994                           ;main.c: 94:             if (((tecla) & (1<<(4))))
  2995  000D0A  A81D               	btfss	Time@tecla^0,4,c
  2996  000D0C  EF8A  F006         	goto	u3421
  2997  000D10  EF8C  F006         	goto	u3420
  2998  000D14                     u3421:
  2999  000D14  EF9A  F006         	goto	l3004
  3000  000D18                     u3420:
  3001  000D18                     
  3002                           ;main.c: 95:             {;main.c: 96:                 cont -= 6000;
  3003  000D18  0E70               	movlw	112
  3004  000D1A  5E19               	subwf	Time@cont^0,f,c
  3005  000D1C  0E17               	movlw	23
  3006  000D1E  5A1A               	subwfb	(Time@cont+1)^0,f,c
  3007  000D20  0E00               	movlw	0
  3008  000D22  5A1B               	subwfb	(Time@cont+2)^0,f,c
  3009  000D24  0E00               	movlw	0
  3010  000D26  5A1C               	subwfb	(Time@cont+3)^0,f,c
  3011                           
  3012                           ;main.c: 97:                 timer -= 60;
  3013  000D28  0E3C               	movlw	60
  3014  000D2A  5E5D               	subwf	_timer^0,f,c
  3015  000D2C  0E00               	movlw	0
  3016  000D2E  5A5E               	subwfb	(_timer+1)^0,f,c
  3017  000D30  5A5F               	subwfb	(_timer+2)^0,f,c
  3018  000D32  5A60               	subwfb	(_timer+3)^0,f,c
  3019  000D34                     l3004:
  3020                           
  3021                           ;main.c: 99:             if (((tecla) & (1<<(9))))
  3022  000D34  A21E               	btfss	(Time@tecla+1)^0,1,c
  3023  000D36  EF9F  F006         	goto	u3431
  3024  000D3A  EFA1  F006         	goto	u3430
  3025  000D3E                     u3431:
  3026  000D3E  EFAF  F006         	goto	l3008
  3027  000D42                     u3430:
  3028  000D42                     
  3029                           ;main.c: 100:             {;main.c: 101:                 cont += 6000;
  3030  000D42  0E70               	movlw	112
  3031  000D44  2619               	addwf	Time@cont^0,f,c
  3032  000D46  0E17               	movlw	23
  3033  000D48  221A               	addwfc	(Time@cont+1)^0,f,c
  3034  000D4A  0E00               	movlw	0
  3035  000D4C  221B               	addwfc	(Time@cont+2)^0,f,c
  3036  000D4E  0E00               	movlw	0
  3037  000D50  221C               	addwfc	(Time@cont+3)^0,f,c
  3038                           
  3039                           ;main.c: 102:                 timer+=60;
  3040  000D52  0E3C               	movlw	60
  3041  000D54  265D               	addwf	_timer^0,f,c
  3042  000D56  0E00               	movlw	0
  3043  000D58  225E               	addwfc	(_timer+1)^0,f,c
  3044  000D5A  225F               	addwfc	(_timer+2)^0,f,c
  3045  000D5C  2260               	addwfc	(_timer+3)^0,f,c
  3046  000D5E                     l3008:
  3047                           
  3048                           ;main.c: 104:             if (((tecla) & (1<<(8))))
  3049  000D5E  A01E               	btfss	(Time@tecla+1)^0,0,c
  3050  000D60  EFB4  F006         	goto	u3441
  3051  000D64  EFB6  F006         	goto	u3440
  3052  000D68                     u3441:
  3053  000D68  EFC1  F006         	goto	l3012
  3054  000D6C                     u3440:
  3055  000D6C                     
  3056                           ;main.c: 105:             {;main.c: 106:                 cont -= 100;
  3057  000D6C  0E64               	movlw	100
  3058  000D6E  5E19               	subwf	Time@cont^0,f,c
  3059  000D70  0E00               	movlw	0
  3060  000D72  5A1A               	subwfb	(Time@cont+1)^0,f,c
  3061  000D74  5A1B               	subwfb	(Time@cont+2)^0,f,c
  3062  000D76  5A1C               	subwfb	(Time@cont+3)^0,f,c
  3063                           
  3064                           ;main.c: 107:                 timer-=1;
  3065  000D78  065D               	decf	_timer^0,f,c
  3066  000D7A  0E00               	movlw	0
  3067  000D7C  5A5E               	subwfb	(_timer+1)^0,f,c
  3068  000D7E  5A5F               	subwfb	(_timer+2)^0,f,c
  3069  000D80  5A60               	subwfb	(_timer+3)^0,f,c
  3070  000D82                     l3012:
  3071                           
  3072                           ;main.c: 109:             if (((tecla) & (1<<(6))))
  3073  000D82  AC1D               	btfss	Time@tecla^0,6,c
  3074  000D84  EFC6  F006         	goto	u3451
  3075  000D88  EFC8  F006         	goto	u3450
  3076  000D8C                     u3451:
  3077  000D8C  EFD4  F006         	goto	l3016
  3078  000D90                     u3450:
  3079  000D90                     
  3080                           ;main.c: 110:             {;main.c: 111:                 cont += 100;
  3081  000D90  0E64               	movlw	100
  3082  000D92  2619               	addwf	Time@cont^0,f,c
  3083  000D94  0E00               	movlw	0
  3084  000D96  221A               	addwfc	(Time@cont+1)^0,f,c
  3085  000D98  221B               	addwfc	(Time@cont+2)^0,f,c
  3086  000D9A  221C               	addwfc	(Time@cont+3)^0,f,c
  3087                           
  3088                           ;main.c: 112:                 timer+=1;
  3089  000D9C  0E01               	movlw	1
  3090  000D9E  265D               	addwf	_timer^0,f,c
  3091  000DA0  0E00               	movlw	0
  3092  000DA2  225E               	addwfc	(_timer+1)^0,f,c
  3093  000DA4  225F               	addwfc	(_timer+2)^0,f,c
  3094  000DA6  2260               	addwfc	(_timer+3)^0,f,c
  3095  000DA8                     l3016:
  3096                           
  3097                           ;main.c: 115:     }
  3098  000DA8  4A17               	infsnz	Time@i^0,f,c
  3099  000DAA  2A18               	incf	(Time@i+1)^0,f,c
  3100  000DAC  BE18               	btfsc	(Time@i+1)^0,7,c
  3101  000DAE  EFE2  F006         	goto	u3461
  3102  000DB2  5018               	movf	(Time@i+1)^0,w,c
  3103  000DB4  E109               	bnz	u3460
  3104  000DB6  0E32               	movlw	50
  3105  000DB8  5C17               	subwf	Time@i^0,w,c
  3106  000DBA  A0D8               	btfss	status,0,c
  3107  000DBC  EFE2  F006         	goto	u3461
  3108  000DC0  EFE4  F006         	goto	u3460
  3109  000DC4                     u3461:
  3110  000DC4  EFC2  F005         	goto	l2996
  3111  000DC8                     u3460:
  3112  000DC8                     
  3113                           ;main.c: 116:     lcdCommand(0x01);
  3114  000DC8  0E01               	movlw	1
  3115  000DCA  EC8C  F013         	call	_lcdCommand
  3116  000DCE  0012               	return		;funcret
  3117  000DD0                     __end_of_Time:
  3118                           	callstack 0
  3119                           
  3120 ;; *************** function _tempo *****************
  3121 ;; Defined at:
  3122 ;;		line 4 in file "delay.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  x               1    wreg     unsigned char 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  x               1    0[COMRAM] unsigned char 
  3127 ;;  k               1    3[COMRAM] volatile unsigned char 
  3128 ;;  j               1    2[COMRAM] volatile unsigned char 
  3129 ;;  i               1    1[COMRAM] volatile unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3139 ;;      Params:         0       0       0       0       0       0       0
  3140 ;;      Locals:         4       0       0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0
  3142 ;;      Totals:         4       0       0       0       0       0       0
  3143 ;;Total ram usage:        4 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_tarefas
  3149 ;;		_Time
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text17
  3154  0022B2                     __ptext17:
  3155                           	callstack 0
  3156  0022B2                     _tempo:
  3157                           	callstack 29
  3158                           
  3159                           ;incstack = 0
  3160                           ;tempo@x stored from wreg
  3161  0022B2  6E01               	movwf	tempo@x^0,c
  3162  0022B4                     
  3163                           ;delay.c: 5:     volatile unsigned char j, k, i;;delay.c: 6:     for(i=0; i<x; i++){
  3164  0022B4  0E00               	movlw	0
  3165  0022B6  6E02               	movwf	tempo@i^0,c	;volatile
  3166  0022B8  EF7D  F011         	goto	l2446
  3167  0022BC                     l2424:
  3168                           
  3169                           ;delay.c: 7:         for(j = 0; j < 41; j++){
  3170  0022BC  0E00               	movlw	0
  3171  0022BE  6E03               	movwf	tempo@j^0,c	;volatile
  3172  0022C0                     l2426:
  3173  0022C0  0E28               	movlw	40
  3174  0022C2  6403               	cpfsgt	tempo@j^0,c	;volatile
  3175  0022C4  EF66  F011         	goto	u2511
  3176  0022C8  EF68  F011         	goto	u2510
  3177  0022CC                     u2511:
  3178  0022CC  EF6A  F011         	goto	l2430
  3179  0022D0                     u2510:
  3180  0022D0  EF7C  F011         	goto	l2444
  3181  0022D4                     l2430:
  3182                           
  3183                           ;delay.c: 8:             for(k = 0; k < 3; k++);
  3184  0022D4  0E00               	movlw	0
  3185  0022D6  6E04               	movwf	tempo@k^0,c	;volatile
  3186  0022D8                     l2432:
  3187  0022D8  0E02               	movlw	2
  3188  0022DA  6404               	cpfsgt	tempo@k^0,c	;volatile
  3189  0022DC  EF72  F011         	goto	u2521
  3190  0022E0  EF74  F011         	goto	u2520
  3191  0022E4                     u2521:
  3192  0022E4  EF76  F011         	goto	l2436
  3193  0022E8                     u2520:
  3194  0022E8  EF79  F011         	goto	l2440
  3195  0022EC                     l2436:
  3196  0022EC  2A04               	incf	tempo@k^0,f,c	;volatile
  3197  0022EE  EF6C  F011         	goto	l2432
  3198  0022F2                     l2440:
  3199                           
  3200                           ;delay.c: 9:         }
  3201  0022F2  2A03               	incf	tempo@j^0,f,c	;volatile
  3202  0022F4  EF60  F011         	goto	l2426
  3203  0022F8                     l2444:
  3204                           
  3205                           ;delay.c: 10:     }
  3206  0022F8  2A02               	incf	tempo@i^0,f,c	;volatile
  3207  0022FA                     l2446:
  3208  0022FA  5001               	movf	tempo@x^0,w,c
  3209  0022FC  5C02               	subwf	tempo@i^0,w,c	;volatile
  3210  0022FE  A0D8               	btfss	status,0,c
  3211  002300  EF84  F011         	goto	u2531
  3212  002304  EF86  F011         	goto	u2530
  3213  002308                     u2531:
  3214  002308  EF5E  F011         	goto	l2424
  3215  00230C                     u2530:
  3216  00230C  0012               	return		;funcret
  3217  00230E                     __end_of_tempo:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _lcdString *****************
  3221 ;; Defined at:
  3222 ;;		line 57 in file "lcd.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  msg             2   14[COMRAM] PTR unsigned char 
  3225 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(14), 
  3226 ;;		 -> lembrete(16), STR_1(16), tarefas@msg4(16), tarefas@msg3(16), 
  3227 ;;		 -> tarefas@msg2(16), tarefas@msg1(16), 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  i               2   18[COMRAM] int 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3239 ;;      Params:         2       0       0       0       0       0       0
  3240 ;;      Locals:         2       0       0       0       0       0       0
  3241 ;;      Temps:          2       0       0       0       0       0       0
  3242 ;;      Totals:         6       0       0       0       0       0       0
  3243 ;;Total ram usage:        6 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 5
  3246 ;; This function calls:
  3247 ;;		_lcdChar
  3248 ;; This function is called by:
  3249 ;;		_tarefas
  3250 ;;		_Time
  3251 ;;		_sinalizar
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text18
  3256  002154                     __ptext18:
  3257                           	callstack 0
  3258  002154                     _lcdString:
  3259                           	callstack 24
  3260  002154                     
  3261                           ;lcd.c: 58:  int i = 0;
  3262  002154  0E00               	movlw	0
  3263  002156  6E14               	movwf	(lcdString@i+1)^0,c
  3264  002158  0E00               	movlw	0
  3265  00215A  6E13               	movwf	lcdString@i^0,c
  3266                           
  3267                           ;lcd.c: 59:  while (msg[i] != 0) {
  3268  00215C  EFCA  F010         	goto	l2420
  3269  002160                     l2416:
  3270                           
  3271                           ;lcd.c: 60:   lcdChar(msg[i]);
  3272  002160  5013               	movf	lcdString@i^0,w,c
  3273  002162  240F               	addwf	lcdString@msg^0,w,c
  3274  002164  6E11               	movwf	??_lcdString^0,c
  3275  002166  5014               	movf	(lcdString@i+1)^0,w,c
  3276  002168  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3277  00216A  6E12               	movwf	(??_lcdString+1)^0,c
  3278  00216C  C011  FFF6         	movff	??_lcdString,tblptrl
  3279  002170  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3280  002174  6AF8               	clrf	tblptru,c
  3281  002176  0E05               	movlw	(high __ramtop+-1)
  3282  002178  64F7               	cpfsgt	tblptrh,c
  3283  00217A  D003               	bra	u2487
  3284  00217C  0008               	tblrd		*
  3285  00217E  50F5               	movf	tablat,w,c
  3286  002180  D005               	bra	u2480
  3287  002182                     u2487:
  3288  002182  CFF6 FFE9          	movff	tblptrl,fsr0l
  3289  002186  CFF7 FFEA          	movff	tblptrh,fsr0h
  3290  00218A  50EF               	movf	indf0,w,c
  3291  00218C                     u2480:
  3292  00218C  EC7D  F013         	call	_lcdChar
  3293  002190                     
  3294                           ;lcd.c: 61:   i++;
  3295  002190  4A13               	infsnz	lcdString@i^0,f,c
  3296  002192  2A14               	incf	(lcdString@i+1)^0,f,c
  3297  002194                     l2420:
  3298                           
  3299                           ;lcd.c: 59:  while (msg[i] != 0) {
  3300  002194  5013               	movf	lcdString@i^0,w,c
  3301  002196  240F               	addwf	lcdString@msg^0,w,c
  3302  002198  6E11               	movwf	??_lcdString^0,c
  3303  00219A  5014               	movf	(lcdString@i+1)^0,w,c
  3304  00219C  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3305  00219E  6E12               	movwf	(??_lcdString+1)^0,c
  3306  0021A0  C011  FFF6         	movff	??_lcdString,tblptrl
  3307  0021A4  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3308  0021A8  6AF8               	clrf	tblptru,c
  3309  0021AA  0E05               	movlw	(high __ramtop+-1)
  3310  0021AC  64F7               	cpfsgt	tblptrh,c
  3311  0021AE  D003               	bra	u2497
  3312  0021B0  0008               	tblrd		*
  3313  0021B2  50F5               	movf	tablat,w,c
  3314  0021B4  D005               	bra	u2490
  3315  0021B6                     u2497:
  3316  0021B6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3317  0021BA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3318  0021BE  50EF               	movf	indf0,w,c
  3319  0021C0                     u2490:
  3320  0021C0  0900               	iorlw	0
  3321  0021C2  A4D8               	btfss	status,2,c
  3322  0021C4  EFE6  F010         	goto	u2501
  3323  0021C8  EFE8  F010         	goto	u2500
  3324  0021CC                     u2501:
  3325  0021CC  EFB0  F010         	goto	l2416
  3326  0021D0                     u2500:
  3327  0021D0  0012               	return		;funcret
  3328  0021D2                     __end_of_lcdString:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _lcdChar *****************
  3332 ;; Defined at:
  3333 ;;		line 52 in file "lcd.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  value           1    wreg     unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  value           1   13[COMRAM] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3347 ;;      Params:         0       0       0       0       0       0       0
  3348 ;;      Locals:         1       0       0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0
  3350 ;;      Totals:         1       0       0       0       0       0       0
  3351 ;;Total ram usage:        1 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 4
  3354 ;; This function calls:
  3355 ;;		_delayMicro
  3356 ;;		_pushByte
  3357 ;; This function is called by:
  3358 ;;		_Time
  3359 ;;		_lcdString
  3360 ;;		_lcdNumber
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text19
  3365  0026FA                     __ptext19:
  3366                           	callstack 0
  3367  0026FA                     _lcdChar:
  3368                           	callstack 24
  3369                           
  3370                           ;incstack = 0
  3371                           ;lcdChar@value stored from wreg
  3372  0026FA  6E0E               	movwf	lcdChar@value^0,c
  3373  0026FC                     
  3374                           ;lcd.c: 53:  pushByte(value, 1);
  3375  0026FC  0E00               	movlw	0
  3376  0026FE  6E0B               	movwf	(pushByte@rs+1)^0,c
  3377  002700  0E01               	movlw	1
  3378  002702  6E0A               	movwf	pushByte@rs^0,c
  3379  002704  500E               	movf	lcdChar@value^0,w,c
  3380  002706  EC87  F011         	call	_pushByte
  3381  00270A                     
  3382                           ;lcd.c: 54:  delayMicro(80);
  3383  00270A  0E00               	movlw	0
  3384  00270C  6E02               	movwf	(delayMicro@a+1)^0,c
  3385  00270E  0E50               	movlw	80
  3386  002710  6E01               	movwf	delayMicro@a^0,c
  3387  002712  ECAD  F013         	call	_delayMicro	;wreg free
  3388  002716  0012               	return		;funcret
  3389  002718                     __end_of_lcdChar:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _lcdPosition *****************
  3393 ;; Defined at:
  3394 ;;		line 44 in file "lcd.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  line            2   14[COMRAM] int 
  3397 ;;  col             2   16[COMRAM] int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         4       0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0
  3412 ;;      Totals:         4       0       0       0       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 5
  3416 ;; This function calls:
  3417 ;;		_lcdCommand
  3418 ;; This function is called by:
  3419 ;;		_Time
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text20
  3424  002562                     __ptext20:
  3425                           	callstack 0
  3426  002562                     _lcdPosition:
  3427                           	callstack 24
  3428  002562                     
  3429                           ;lcd.c: 45:  if (line == 0) {
  3430  002562  500F               	movf	lcdPosition@line^0,w,c
  3431  002564  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  3432  002566  A4D8               	btfss	status,2,c
  3433  002568  EFB8  F012         	goto	u2631
  3434  00256C  EFBA  F012         	goto	u2630
  3435  002570                     u2631:
  3436  002570  EFBF  F012         	goto	l2486
  3437  002574                     u2630:
  3438  002574                     
  3439                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  3440  002574  5011               	movf	lcdPosition@col^0,w,c
  3441  002576  0B0F               	andlw	15
  3442  002578  0F80               	addlw	128
  3443  00257A  EC8C  F013         	call	_lcdCommand
  3444  00257E                     l2486:
  3445                           
  3446                           ;lcd.c: 48:  if (line == 1) {
  3447  00257E  040F               	decf	lcdPosition@line^0,w,c
  3448  002580  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  3449  002582  A4D8               	btfss	status,2,c
  3450  002584  EFC6  F012         	goto	u2641
  3451  002588  EFC8  F012         	goto	u2640
  3452  00258C                     u2641:
  3453  00258C  EFCD  F012         	goto	l250
  3454  002590                     u2640:
  3455  002590                     
  3456                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  3457  002590  5011               	movf	lcdPosition@col^0,w,c
  3458  002592  0B0F               	andlw	15
  3459  002594  0FC0               	addlw	192
  3460  002596  EC8C  F013         	call	_lcdCommand
  3461  00259A                     l250:
  3462  00259A  0012               	return		;funcret
  3463  00259C                     __end_of_lcdPosition:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _lcdCommand *****************
  3467 ;; Defined at:
  3468 ;;		line 40 in file "lcd.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  value           1    wreg     unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  value           1   13[COMRAM] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3482 ;;      Params:         0       0       0       0       0       0       0
  3483 ;;      Locals:         1       0       0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0
  3485 ;;      Totals:         1       0       0       0       0       0       0
  3486 ;;Total ram usage:        1 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 4
  3489 ;; This function calls:
  3490 ;;		_delayMili
  3491 ;;		_pushByte
  3492 ;; This function is called by:
  3493 ;;		_tarefas
  3494 ;;		_Time
  3495 ;;		_sinalizar
  3496 ;;		_lcdPosition
  3497 ;;		_lcdInit
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text21
  3502  002718                     __ptext21:
  3503                           	callstack 0
  3504  002718                     _lcdCommand:
  3505                           	callstack 25
  3506                           
  3507                           ;incstack = 0
  3508                           ;lcdCommand@value stored from wreg
  3509  002718  6E0E               	movwf	lcdCommand@value^0,c
  3510  00271A                     
  3511                           ;lcd.c: 41:  pushByte(value, 0);
  3512  00271A  0E00               	movlw	0
  3513  00271C  6E0B               	movwf	(pushByte@rs+1)^0,c
  3514  00271E  0E00               	movlw	0
  3515  002720  6E0A               	movwf	pushByte@rs^0,c
  3516  002722  500E               	movf	lcdCommand@value^0,w,c
  3517  002724  EC87  F011         	call	_pushByte
  3518                           
  3519                           ;lcd.c: 42:  delayMili(2);
  3520  002728  0E00               	movlw	0
  3521  00272A  6E02               	movwf	(delayMili@a+1)^0,c
  3522  00272C  0E02               	movlw	2
  3523  00272E  6E01               	movwf	delayMili@a^0,c
  3524  002730  EC02  F013         	call	_delayMili	;wreg free
  3525  002734  0012               	return		;funcret
  3526  002736                     __end_of_lcdCommand:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _pushByte *****************
  3530 ;; Defined at:
  3531 ;;		line 31 in file "lcd.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  value           1    wreg     unsigned char 
  3534 ;;  rs              2    9[COMRAM] int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  value           1   12[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3546 ;;      Params:         2       0       0       0       0       0       0
  3547 ;;      Locals:         1       0       0       0       0       0       0
  3548 ;;      Temps:          1       0       0       0       0       0       0
  3549 ;;      Totals:         4       0       0       0       0       0       0
  3550 ;;Total ram usage:        4 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 3
  3553 ;; This function calls:
  3554 ;;		_digitalWrite
  3555 ;;		_pulseEnablePin
  3556 ;;		_soWrite
  3557 ;; This function is called by:
  3558 ;;		_lcdCommand
  3559 ;;		_lcdChar
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text22
  3564  00230E                     __ptext22:
  3565                           	callstack 0
  3566  00230E                     _pushByte:
  3567                           	callstack 24
  3568                           
  3569                           ;incstack = 0
  3570                           ;pushByte@value stored from wreg
  3571  00230E  6E0D               	movwf	pushByte@value^0,c
  3572  002310                     
  3573                           ;lcd.c: 32:  soWrite(value >> 4);
  3574  002310  C00D  F00C         	movff	pushByte@value,??_pushByte
  3575  002314  3A0C               	swapf	??_pushByte^0,f,c
  3576  002316  0E0F               	movlw	15
  3577  002318  160C               	andwf	??_pushByte^0,f,c
  3578  00231A  500C               	movf	??_pushByte^0,w,c
  3579  00231C  6E07               	movwf	soWrite@value^0,c
  3580  00231E  6A08               	clrf	(soWrite@value+1)^0,c
  3581  002320  EC0B  F012         	call	_soWrite	;wreg free
  3582                           
  3583                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3584  002324  0E00               	movlw	0
  3585  002326  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3586  002328  0E1D               	movlw	29
  3587  00232A  6E01               	movwf	digitalWrite@pin^0,c
  3588  00232C  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3589  002330  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3590  002334  EC0F  F008         	call	_digitalWrite	;wreg free
  3591                           
  3592                           ;lcd.c: 34:  pulseEnablePin();
  3593  002338  EC32  F012         	call	_pulseEnablePin	;wreg free
  3594                           
  3595                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3596  00233C  C00D  F00C         	movff	pushByte@value,??_pushByte
  3597  002340  0E0F               	movlw	15
  3598  002342  160C               	andwf	??_pushByte^0,f,c
  3599  002344  500C               	movf	??_pushByte^0,w,c
  3600  002346  6E07               	movwf	soWrite@value^0,c
  3601  002348  6A08               	clrf	(soWrite@value+1)^0,c
  3602  00234A  EC0B  F012         	call	_soWrite	;wreg free
  3603                           
  3604                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3605  00234E  0E00               	movlw	0
  3606  002350  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3607  002352  0E1D               	movlw	29
  3608  002354  6E01               	movwf	digitalWrite@pin^0,c
  3609  002356  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3610  00235A  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3611  00235E  EC0F  F008         	call	_digitalWrite	;wreg free
  3612                           
  3613                           ;lcd.c: 38:  pulseEnablePin();
  3614  002362  EC32  F012         	call	_pulseEnablePin	;wreg free
  3615  002366  0012               	return		;funcret
  3616  002368                     __end_of_pushByte:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _pulseEnablePin *****************
  3620 ;; Defined at:
  3621 ;;		line 18 in file "lcd.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3635 ;;      Params:         0       0       0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; Hardware stack levels required when called: 1
  3642 ;; This function calls:
  3643 ;;		_delayMicro
  3644 ;;		_digitalWrite
  3645 ;; This function is called by:
  3646 ;;		_pushNibble
  3647 ;;		_pushByte
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text23
  3652  002464                     __ptext23:
  3653                           	callstack 0
  3654  002464                     _pulseEnablePin:
  3655                           	callstack 25
  3656  002464                     
  3657                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3658  002464  0E00               	movlw	0
  3659  002466  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3660  002468  0E1C               	movlw	28
  3661  00246A  6E01               	movwf	digitalWrite@pin^0,c
  3662  00246C  0E00               	movlw	0
  3663  00246E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3664  002470  0E01               	movlw	1
  3665  002472  6E03               	movwf	digitalWrite@value^0,c
  3666  002474  EC0F  F008         	call	_digitalWrite	;wreg free
  3667  002478                     
  3668                           ;lcd.c: 20:  delayMicro(5);
  3669  002478  0E00               	movlw	0
  3670  00247A  6E02               	movwf	(delayMicro@a+1)^0,c
  3671  00247C  0E05               	movlw	5
  3672  00247E  6E01               	movwf	delayMicro@a^0,c
  3673  002480  ECAD  F013         	call	_delayMicro	;wreg free
  3674  002484                     
  3675                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3676  002484  0E00               	movlw	0
  3677  002486  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3678  002488  0E1C               	movlw	28
  3679  00248A  6E01               	movwf	digitalWrite@pin^0,c
  3680  00248C  0E00               	movlw	0
  3681  00248E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3682  002490  0E00               	movlw	0
  3683  002492  6E03               	movwf	digitalWrite@value^0,c
  3684  002494  EC0F  F008         	call	_digitalWrite	;wreg free
  3685                           
  3686                           ;lcd.c: 22:  delayMicro(5);
  3687  002498  0E00               	movlw	0
  3688  00249A  6E02               	movwf	(delayMicro@a+1)^0,c
  3689  00249C  0E05               	movlw	5
  3690  00249E  6E01               	movwf	delayMicro@a^0,c
  3691  0024A0  ECAD  F013         	call	_delayMicro	;wreg free
  3692  0024A4  0012               	return		;funcret
  3693  0024A6                     __end_of_pulseEnablePin:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _delayMicro *****************
  3697 ;; Defined at:
  3698 ;;		line 5 in file "lcd.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  a               2    0[COMRAM] int 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  i               2    0        volatile int 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		None
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3712 ;;      Params:         2       0       0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0
  3715 ;;      Totals:         2       0       0       0       0       0       0
  3716 ;;Total ram usage:        2 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_pulseEnablePin
  3722 ;;		_lcdChar
  3723 ;;		_lcdInit
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text24
  3728  00275A                     __ptext24:
  3729                           	callstack 0
  3730  00275A                     _delayMicro:
  3731                           	callstack 25
  3732  00275A  0012               	return		;funcret
  3733  00275C                     __end_of_delayMicro:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _delayMili *****************
  3737 ;; Defined at:
  3738 ;;		line 10 in file "lcd.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  a               2    0[COMRAM] int 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  i               2    3[COMRAM] volatile int 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3752 ;;      Params:         2       0       0       0       0       0       0
  3753 ;;      Locals:         2       0       0       0       0       0       0
  3754 ;;      Temps:          1       0       0       0       0       0       0
  3755 ;;      Totals:         5       0       0       0       0       0       0
  3756 ;;Total ram usage:        5 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_lcdCommand
  3762 ;;		_lcdInit
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text25
  3767  002604                     __ptext25:
  3768                           	callstack 0
  3769  002604                     _delayMili:
  3770                           	callstack 28
  3771  002604                     
  3772                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3773  002604  0E00               	movlw	0
  3774  002606  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  3775  002608  0E00               	movlw	0
  3776  00260A  6E04               	movwf	delayMili@i^0,c	;volatile
  3777  00260C  EF0A  F013         	goto	l2254
  3778  002610                     l2252:
  3779                           
  3780                           ;lcd.c: 15:  }
  3781  002610  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  3782  002612  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  3783  002614                     l2254:
  3784  002614  5001               	movf	delayMili@a^0,w,c
  3785  002616  5C04               	subwf	delayMili@i^0,w,c	;volatile
  3786  002618  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  3787  00261A  0A80               	xorlw	128
  3788  00261C  6E03               	movwf	??_delayMili^0,c
  3789  00261E  5002               	movf	(delayMili@a+1)^0,w,c
  3790  002620  0A80               	xorlw	128
  3791  002622  5803               	subwfb	??_delayMili^0,w,c
  3792  002624  A0D8               	btfss	status,0,c
  3793  002626  EF17  F013         	goto	u2081
  3794  00262A  EF19  F013         	goto	u2080
  3795  00262E                     u2081:
  3796  00262E  EF08  F013         	goto	l2252
  3797  002632                     u2080:
  3798  002632  0012               	return		;funcret
  3799  002634                     __end_of_delayMili:
  3800                           	callstack 0
  3801                           
  3802 ;; *************** function _kpRead *****************
  3803 ;; Defined at:
  3804 ;;		line 14 in file "keypad.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  2    0[COMRAM] unsigned int 
  3811 ;; Registers used:
  3812 ;;		None
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3818 ;;      Params:         2       0       0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0
  3821 ;;      Totals:         2       0       0       0       0       0       0
  3822 ;;Total ram usage:        2 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_tarefas
  3828 ;;		_Time
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text26
  3833  002750                     __ptext26:
  3834                           	callstack 0
  3835  002750                     _kpRead:
  3836                           	callstack 29
  3837  002750                     
  3838                           ;keypad.c: 15:     return keys;
  3839  002750  C065  F001         	movff	_keys,?_kpRead
  3840  002754  C066  F002         	movff	_keys+1,?_kpRead+1
  3841  002758  0012               	return		;funcret
  3842  00275A                     __end_of_kpRead:
  3843                           	callstack 0
  3844                           
  3845 ;; *************** function _kpDebounce *****************
  3846 ;; Defined at:
  3847 ;;		line 27 in file "keypad.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  i               2   12[COMRAM] int 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3861 ;;      Params:         0       0       0       0       0       0       0
  3862 ;;      Locals:         2       0       0       0       0       0       0
  3863 ;;      Temps:          3       0       0       0       0       0       0
  3864 ;;      Totals:         5       0       0       0       0       0       0
  3865 ;;Total ram usage:        5 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 3
  3868 ;; This function calls:
  3869 ;;		_digitalRead
  3870 ;;		_soWrite
  3871 ;; This function is called by:
  3872 ;;		_tarefas
  3873 ;;		_Time
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text27
  3878  0018F8                     __ptext27:
  3879                           	callstack 0
  3880  0018F8                     _kpDebounce:
  3881                           	callstack 26
  3882  0018F8                     
  3883                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3884  0018F8  0E00               	movlw	0
  3885  0018FA  6E64               	movwf	(kpDebounce@newRead+1)^0,c
  3886  0018FC  0E00               	movlw	0
  3887  0018FE  6E63               	movwf	kpDebounce@newRead^0,c
  3888                           
  3889                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3890  001900  0E00               	movlw	0
  3891  001902  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3892  001904  0E00               	movlw	0
  3893  001906  6E0D               	movwf	kpDebounce@i^0,c
  3894  001908                     l2450:
  3895  001908  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3896  00190A  EF90  F00C         	goto	u2541
  3897  00190E  500E               	movf	(kpDebounce@i+1)^0,w,c
  3898  001910  E109               	bnz	u2540
  3899  001912  0E05               	movlw	5
  3900  001914  5C0D               	subwf	kpDebounce@i^0,w,c
  3901  001916  A0D8               	btfss	status,0,c
  3902  001918  EF90  F00C         	goto	u2541
  3903  00191C  EF92  F00C         	goto	u2540
  3904  001920                     u2541:
  3905  001920  EF94  F00C         	goto	l2454
  3906  001924                     u2540:
  3907  001924  EFF5  F00C         	goto	l2466
  3908  001928                     l2454:
  3909                           
  3910                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3911  001928  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3912  00192C  0E03               	movlw	3
  3913  00192E  260A               	addwf	??_kpDebounce^0,f,c
  3914  001930  0E01               	movlw	1
  3915  001932  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3916  001934  0E00               	movlw	0
  3917  001936  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3918  001938  2A0A               	incf	??_kpDebounce^0,f,c
  3919  00193A  EFA2  F00C         	goto	u2554
  3920  00193E                     u2555:
  3921  00193E  90D8               	bcf	status,0,c
  3922  001940  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3923  001942  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3924  001944                     u2554:
  3925  001944  2E0A               	decfsz	??_kpDebounce^0,f,c
  3926  001946  EF9F  F00C         	goto	u2555
  3927  00194A  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3928  00194E  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3929  001952  EC0B  F012         	call	_soWrite	;wreg free
  3930                           
  3931                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3932  001956  0E00               	movlw	0
  3933  001958  6E02               	movwf	(digitalRead@pin+1)^0,c
  3934  00195A  0E0A               	movlw	10
  3935  00195C  6E01               	movwf	digitalRead@pin^0,c
  3936  00195E  ECC7  F00B         	call	_digitalRead	;wreg free
  3937  001962  5001               	movf	?_digitalRead^0,w,c
  3938  001964  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3939  001966  B4D8               	btfsc	status,2,c
  3940  001968  EFB8  F00C         	goto	u2561
  3941  00196C  EFBA  F00C         	goto	u2560
  3942  001970                     u2561:
  3943  001970  EFCD  F00C         	goto	l2458
  3944  001974                     u2560:
  3945  001974                     
  3946                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3947  001974  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3948  001978  0E01               	movlw	1
  3949  00197A  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3950  00197C  0E00               	movlw	0
  3951  00197E  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3952  001980  2A0A               	incf	??_kpDebounce^0,f,c
  3953  001982  EFC6  F00C         	goto	u2574
  3954  001986                     u2575:
  3955  001986  90D8               	bcf	status,0,c
  3956  001988  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3957  00198A  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3958  00198C                     u2574:
  3959  00198C  2E0A               	decfsz	??_kpDebounce^0,f,c
  3960  00198E  EFC3  F00C         	goto	u2575
  3961  001992  500B               	movf	(??_kpDebounce+1)^0,w,c
  3962  001994  1263               	iorwf	kpDebounce@newRead^0,f,c
  3963  001996  500C               	movf	(??_kpDebounce+2)^0,w,c
  3964  001998  1264               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3965  00199A                     l2458:
  3966                           
  3967                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3968  00199A  0E00               	movlw	0
  3969  00199C  6E02               	movwf	(digitalRead@pin+1)^0,c
  3970  00199E  0E09               	movlw	9
  3971  0019A0  6E01               	movwf	digitalRead@pin^0,c
  3972  0019A2  ECC7  F00B         	call	_digitalRead	;wreg free
  3973  0019A6  5001               	movf	?_digitalRead^0,w,c
  3974  0019A8  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3975  0019AA  B4D8               	btfsc	status,2,c
  3976  0019AC  EFDA  F00C         	goto	u2581
  3977  0019B0  EFDC  F00C         	goto	u2580
  3978  0019B4                     u2581:
  3979  0019B4  EFF1  F00C         	goto	l2462
  3980  0019B8                     u2580:
  3981  0019B8                     
  3982                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3983  0019B8  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3984  0019BC  0E05               	movlw	5
  3985  0019BE  260A               	addwf	??_kpDebounce^0,f,c
  3986  0019C0  0E01               	movlw	1
  3987  0019C2  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3988  0019C4  0E00               	movlw	0
  3989  0019C6  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3990  0019C8  2A0A               	incf	??_kpDebounce^0,f,c
  3991  0019CA  EFEA  F00C         	goto	u2594
  3992  0019CE                     u2595:
  3993  0019CE  90D8               	bcf	status,0,c
  3994  0019D0  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3995  0019D2  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3996  0019D4                     u2594:
  3997  0019D4  2E0A               	decfsz	??_kpDebounce^0,f,c
  3998  0019D6  EFE7  F00C         	goto	u2595
  3999  0019DA  500B               	movf	(??_kpDebounce+1)^0,w,c
  4000  0019DC  1263               	iorwf	kpDebounce@newRead^0,f,c
  4001  0019DE  500C               	movf	(??_kpDebounce+2)^0,w,c
  4002  0019E0  1264               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4003  0019E2                     l2462:
  4004                           
  4005                           ;keypad.c: 42:     }
  4006  0019E2  4A0D               	infsnz	kpDebounce@i^0,f,c
  4007  0019E4  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  4008  0019E6  EF84  F00C         	goto	l2450
  4009  0019EA                     l2466:
  4010                           
  4011                           ;keypad.c: 43:     if (oldRead == newRead) {
  4012  0019EA  5063               	movf	kpDebounce@newRead^0,w,c
  4013  0019EC  1861               	xorwf	kpDebounce@oldRead^0,w,c
  4014  0019EE  E107               	bnz	u2601
  4015  0019F0  5064               	movf	(kpDebounce@newRead+1)^0,w,c
  4016  0019F2  1862               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  4017  0019F4  A4D8               	btfss	status,2,c
  4018  0019F6  EFFF  F00C         	goto	u2601
  4019  0019FA  EF01  F00D         	goto	u2600
  4020  0019FE                     u2601:
  4021  0019FE  EF04  F00D         	goto	l2470
  4022  001A02                     u2600:
  4023  001A02                     
  4024                           ;keypad.c: 44:         tempo--;
  4025  001A02  066C               	decf	kpDebounce@tempo^0,f,c
  4026                           
  4027                           ;keypad.c: 45:     } else {
  4028  001A04  EF0A  F00D         	goto	l211
  4029  001A08                     l2470:
  4030                           
  4031                           ;keypad.c: 46:         tempo = 1;
  4032  001A08  0E01               	movlw	1
  4033  001A0A  6E6C               	movwf	kpDebounce@tempo^0,c
  4034  001A0C                     
  4035                           ;keypad.c: 47:         oldRead = newRead;
  4036  001A0C  C063  F061         	movff	kpDebounce@newRead,kpDebounce@oldRead
  4037  001A10  C064  F062         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  4038  001A14                     l211:
  4039                           
  4040                           ;keypad.c: 49:     if (tempo == 0) {
  4041  001A14  506C               	movf	kpDebounce@tempo^0,w,c
  4042  001A16  A4D8               	btfss	status,2,c
  4043  001A18  EF10  F00D         	goto	u2611
  4044  001A1C  EF12  F00D         	goto	u2610
  4045  001A20                     u2611:
  4046  001A20  EF16  F00D         	goto	l213
  4047  001A24                     u2610:
  4048  001A24                     
  4049                           ;keypad.c: 50:         keys = oldRead;
  4050  001A24  C061  F065         	movff	kpDebounce@oldRead,_keys
  4051  001A28  C062  F066         	movff	kpDebounce@oldRead+1,_keys+1
  4052  001A2C                     l213:
  4053  001A2C  0012               	return		;funcret
  4054  001A2E                     __end_of_kpDebounce:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function _digitalRead *****************
  4058 ;; Defined at:
  4059 ;;		line 39 in file "io.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  pin             2    0[COMRAM] int 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2    0[COMRAM] int 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4073 ;;      Params:         2       0       0       0       0       0       0
  4074 ;;      Locals:         0       0       0       0       0       0       0
  4075 ;;      Temps:          3       0       0       0       0       0       0
  4076 ;;      Totals:         5       0       0       0       0       0       0
  4077 ;;Total ram usage:        5 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_kpDebounce
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text28
  4087  00178E                     __ptext28:
  4088                           	callstack 0
  4089  00178E                     _digitalRead:
  4090                           	callstack 28
  4091  00178E                     
  4092                           ;io.c: 40:     if(pin <8){
  4093  00178E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4094  001790  EFD5  F00B         	goto	u2090
  4095  001794  5002               	movf	(digitalRead@pin+1)^0,w,c
  4096  001796  E107               	bnz	u2091
  4097  001798  0E08               	movlw	8
  4098  00179A  5C01               	subwf	digitalRead@pin^0,w,c
  4099  00179C  B0D8               	btfsc	status,0,c
  4100  00179E  EFD3  F00B         	goto	u2091
  4101  0017A2  EFD5  F00B         	goto	u2090
  4102  0017A6                     u2091:
  4103  0017A6  EFE9  F00B         	goto	l2272
  4104  0017AA                     u2090:
  4105  0017AA                     
  4106                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4107  0017AA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4108  0017AE  0E01               	movlw	1
  4109  0017B0  6E04               	movwf	(??_digitalRead+1)^0,c
  4110  0017B2  2A03               	incf	??_digitalRead^0,f,c
  4111  0017B4  EFDE  F00B         	goto	u2104
  4112  0017B8                     u2105:
  4113  0017B8  90D8               	bcf	status,0,c
  4114  0017BA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4115  0017BC                     u2104:
  4116  0017BC  2E03               	decfsz	??_digitalRead^0,f,c
  4117  0017BE  EFDC  F00B         	goto	u2105
  4118  0017C2  5004               	movf	(??_digitalRead+1)^0,w,c
  4119  0017C4  1480               	andwf	128,w,c	;volatile
  4120  0017C6  6E05               	movwf	(??_digitalRead+2)^0,c
  4121  0017C8  5005               	movf	(??_digitalRead+2)^0,w,c
  4122  0017CA  6E01               	movwf	?_digitalRead^0,c
  4123  0017CC  6A02               	clrf	(?_digitalRead+1)^0,c
  4124  0017CE  EF7B  F00C         	goto	l144
  4125  0017D2                     l2272:
  4126  0017D2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4127  0017D4  EFF7  F00B         	goto	u2110
  4128  0017D8  5002               	movf	(digitalRead@pin+1)^0,w,c
  4129  0017DA  E107               	bnz	u2111
  4130  0017DC  0E10               	movlw	16
  4131  0017DE  5C01               	subwf	digitalRead@pin^0,w,c
  4132  0017E0  B0D8               	btfsc	status,0,c
  4133  0017E2  EFF5  F00B         	goto	u2111
  4134  0017E6  EFF7  F00B         	goto	u2110
  4135  0017EA                     u2111:
  4136  0017EA  EF0D  F00C         	goto	l2280
  4137  0017EE                     u2110:
  4138  0017EE                     
  4139                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4140  0017EE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4141  0017F2  0EF8               	movlw	-8
  4142  0017F4  2603               	addwf	??_digitalRead^0,f,c
  4143  0017F6  0E01               	movlw	1
  4144  0017F8  6E04               	movwf	(??_digitalRead+1)^0,c
  4145  0017FA  2A03               	incf	??_digitalRead^0,f,c
  4146  0017FC  EF02  F00C         	goto	u2124
  4147  001800                     u2125:
  4148  001800  90D8               	bcf	status,0,c
  4149  001802  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4150  001804                     u2124:
  4151  001804  2E03               	decfsz	??_digitalRead^0,f,c
  4152  001806  EF00  F00C         	goto	u2125
  4153  00180A  5004               	movf	(??_digitalRead+1)^0,w,c
  4154  00180C  1481               	andwf	129,w,c	;volatile
  4155  00180E  6E05               	movwf	(??_digitalRead+2)^0,c
  4156  001810  5005               	movf	(??_digitalRead+2)^0,w,c
  4157  001812  6E01               	movwf	?_digitalRead^0,c
  4158  001814  6A02               	clrf	(?_digitalRead+1)^0,c
  4159  001816  EF7B  F00C         	goto	l144
  4160  00181A                     l2280:
  4161  00181A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4162  00181C  EF1B  F00C         	goto	u2130
  4163  001820  5002               	movf	(digitalRead@pin+1)^0,w,c
  4164  001822  E107               	bnz	u2131
  4165  001824  0E18               	movlw	24
  4166  001826  5C01               	subwf	digitalRead@pin^0,w,c
  4167  001828  B0D8               	btfsc	status,0,c
  4168  00182A  EF19  F00C         	goto	u2131
  4169  00182E  EF1B  F00C         	goto	u2130
  4170  001832                     u2131:
  4171  001832  EF31  F00C         	goto	l2288
  4172  001836                     u2130:
  4173  001836                     
  4174                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4175  001836  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4176  00183A  0EF0               	movlw	-16
  4177  00183C  2603               	addwf	??_digitalRead^0,f,c
  4178  00183E  0E01               	movlw	1
  4179  001840  6E04               	movwf	(??_digitalRead+1)^0,c
  4180  001842  2A03               	incf	??_digitalRead^0,f,c
  4181  001844  EF26  F00C         	goto	u2144
  4182  001848                     u2145:
  4183  001848  90D8               	bcf	status,0,c
  4184  00184A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4185  00184C                     u2144:
  4186  00184C  2E03               	decfsz	??_digitalRead^0,f,c
  4187  00184E  EF24  F00C         	goto	u2145
  4188  001852  5004               	movf	(??_digitalRead+1)^0,w,c
  4189  001854  1482               	andwf	130,w,c	;volatile
  4190  001856  6E05               	movwf	(??_digitalRead+2)^0,c
  4191  001858  5005               	movf	(??_digitalRead+2)^0,w,c
  4192  00185A  6E01               	movwf	?_digitalRead^0,c
  4193  00185C  6A02               	clrf	(?_digitalRead+1)^0,c
  4194  00185E  EF7B  F00C         	goto	l144
  4195  001862                     l2288:
  4196  001862  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4197  001864  EF3F  F00C         	goto	u2150
  4198  001868  5002               	movf	(digitalRead@pin+1)^0,w,c
  4199  00186A  E107               	bnz	u2151
  4200  00186C  0E20               	movlw	32
  4201  00186E  5C01               	subwf	digitalRead@pin^0,w,c
  4202  001870  B0D8               	btfsc	status,0,c
  4203  001872  EF3D  F00C         	goto	u2151
  4204  001876  EF3F  F00C         	goto	u2150
  4205  00187A                     u2151:
  4206  00187A  EF55  F00C         	goto	l2296
  4207  00187E                     u2150:
  4208  00187E                     
  4209                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4210  00187E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4211  001882  0EE8               	movlw	-24
  4212  001884  2603               	addwf	??_digitalRead^0,f,c
  4213  001886  0E01               	movlw	1
  4214  001888  6E04               	movwf	(??_digitalRead+1)^0,c
  4215  00188A  2A03               	incf	??_digitalRead^0,f,c
  4216  00188C  EF4A  F00C         	goto	u2164
  4217  001890                     u2165:
  4218  001890  90D8               	bcf	status,0,c
  4219  001892  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4220  001894                     u2164:
  4221  001894  2E03               	decfsz	??_digitalRead^0,f,c
  4222  001896  EF48  F00C         	goto	u2165
  4223  00189A  5004               	movf	(??_digitalRead+1)^0,w,c
  4224  00189C  1483               	andwf	131,w,c	;volatile
  4225  00189E  6E05               	movwf	(??_digitalRead+2)^0,c
  4226  0018A0  5005               	movf	(??_digitalRead+2)^0,w,c
  4227  0018A2  6E01               	movwf	?_digitalRead^0,c
  4228  0018A4  6A02               	clrf	(?_digitalRead+1)^0,c
  4229  0018A6  EF7B  F00C         	goto	l144
  4230  0018AA                     l2296:
  4231  0018AA  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4232  0018AC  EF63  F00C         	goto	u2170
  4233  0018B0  5002               	movf	(digitalRead@pin+1)^0,w,c
  4234  0018B2  E107               	bnz	u2171
  4235  0018B4  0E28               	movlw	40
  4236  0018B6  5C01               	subwf	digitalRead@pin^0,w,c
  4237  0018B8  B0D8               	btfsc	status,0,c
  4238  0018BA  EF61  F00C         	goto	u2171
  4239  0018BE  EF63  F00C         	goto	u2170
  4240  0018C2                     u2171:
  4241  0018C2  EF79  F00C         	goto	l149
  4242  0018C6                     u2170:
  4243  0018C6                     
  4244                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4245  0018C6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4246  0018CA  0EE0               	movlw	-32
  4247  0018CC  2603               	addwf	??_digitalRead^0,f,c
  4248  0018CE  0E01               	movlw	1
  4249  0018D0  6E04               	movwf	(??_digitalRead+1)^0,c
  4250  0018D2  2A03               	incf	??_digitalRead^0,f,c
  4251  0018D4  EF6E  F00C         	goto	u2184
  4252  0018D8                     u2185:
  4253  0018D8  90D8               	bcf	status,0,c
  4254  0018DA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4255  0018DC                     u2184:
  4256  0018DC  2E03               	decfsz	??_digitalRead^0,f,c
  4257  0018DE  EF6C  F00C         	goto	u2185
  4258  0018E2  5004               	movf	(??_digitalRead+1)^0,w,c
  4259  0018E4  1484               	andwf	132,w,c	;volatile
  4260  0018E6  6E05               	movwf	(??_digitalRead+2)^0,c
  4261  0018E8  5005               	movf	(??_digitalRead+2)^0,w,c
  4262  0018EA  6E01               	movwf	?_digitalRead^0,c
  4263  0018EC  6A02               	clrf	(?_digitalRead+1)^0,c
  4264  0018EE  EF7B  F00C         	goto	l144
  4265  0018F2                     l149:
  4266  0018F2                     
  4267                           ;io.c: 51:     return -1;
  4268  0018F2  6801               	setf	?_digitalRead^0,c
  4269  0018F4  6802               	setf	(?_digitalRead+1)^0,c
  4270  0018F6                     l144:
  4271  0018F6  0012               	return		;funcret
  4272  0018F8                     __end_of_digitalRead:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function ___llmod *****************
  4276 ;; Defined at:
  4277 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  dividend        4   13[COMRAM] unsigned long 
  4280 ;;  divisor         4   17[COMRAM] unsigned long 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  counter         1   21[COMRAM] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  4   13[COMRAM] unsigned long 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4292 ;;      Params:         8       0       0       0       0       0       0
  4293 ;;      Locals:         1       0       0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0
  4295 ;;      Totals:         9       0       0       0       0       0       0
  4296 ;;Total ram usage:        9 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_Time
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text29
  4306  0020CC                     __ptext29:
  4307                           	callstack 0
  4308  0020CC                     ___llmod:
  4309                           	callstack 29
  4310  0020CC  5012               	movf	___llmod@divisor^0,w,c
  4311  0020CE  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  4312  0020D0  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  4313  0020D2  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  4314  0020D4  B4D8               	btfsc	status,2,c
  4315  0020D6  EF6F  F010         	goto	u3281
  4316  0020DA  EF71  F010         	goto	u3280
  4317  0020DE                     u3281:
  4318  0020DE  EFA1  F010         	goto	l829
  4319  0020E2                     u3280:
  4320  0020E2  0E01               	movlw	1
  4321  0020E4  6E16               	movwf	___llmod@counter^0,c
  4322  0020E6  EF7B  F010         	goto	l2890
  4323  0020EA                     l2888:
  4324  0020EA  90D8               	bcf	status,0,c
  4325  0020EC  3612               	rlcf	___llmod@divisor^0,f,c
  4326  0020EE  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  4327  0020F0  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  4328  0020F2  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  4329  0020F4  2A16               	incf	___llmod@counter^0,f,c
  4330  0020F6                     l2890:
  4331  0020F6  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  4332  0020F8  EF80  F010         	goto	u3291
  4333  0020FC  EF82  F010         	goto	u3290
  4334  002100                     u3291:
  4335  002100  EF75  F010         	goto	l2888
  4336  002104                     u3290:
  4337  002104                     l2892:
  4338  002104  5012               	movf	___llmod@divisor^0,w,c
  4339  002106  5C0E               	subwf	___llmod@dividend^0,w,c
  4340  002108  5013               	movf	(___llmod@divisor+1)^0,w,c
  4341  00210A  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  4342  00210C  5014               	movf	(___llmod@divisor+2)^0,w,c
  4343  00210E  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  4344  002110  5015               	movf	(___llmod@divisor+3)^0,w,c
  4345  002112  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  4346  002114  A0D8               	btfss	status,0,c
  4347  002116  EF8F  F010         	goto	u3301
  4348  00211A  EF91  F010         	goto	u3300
  4349  00211E                     u3301:
  4350  00211E  EF99  F010         	goto	l2896
  4351  002122                     u3300:
  4352  002122  5012               	movf	___llmod@divisor^0,w,c
  4353  002124  5E0E               	subwf	___llmod@dividend^0,f,c
  4354  002126  5013               	movf	(___llmod@divisor+1)^0,w,c
  4355  002128  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  4356  00212A  5014               	movf	(___llmod@divisor+2)^0,w,c
  4357  00212C  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  4358  00212E  5015               	movf	(___llmod@divisor+3)^0,w,c
  4359  002130  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  4360  002132                     l2896:
  4361  002132  90D8               	bcf	status,0,c
  4362  002134  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  4363  002136  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  4364  002138  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  4365  00213A  3212               	rrcf	___llmod@divisor^0,f,c
  4366  00213C  2E16               	decfsz	___llmod@counter^0,f,c
  4367  00213E  EF82  F010         	goto	l2892
  4368  002142                     l829:
  4369  002142  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4370  002146  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4371  00214A  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4372  00214E  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4373  002152  0012               	return		;funcret
  4374  002154                     __end_of___llmod:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function ___lldiv *****************
  4378 ;; Defined at:
  4379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  dividend        4    0[COMRAM] unsigned long 
  4382 ;;  divisor         4    4[COMRAM] unsigned long 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  quotient        4    8[COMRAM] unsigned long 
  4385 ;;  counter         1   12[COMRAM] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  4    0[COMRAM] unsigned long 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4395 ;;      Params:         8       0       0       0       0       0       0
  4396 ;;      Locals:         5       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0
  4398 ;;      Totals:        13       0       0       0       0       0       0
  4399 ;;Total ram usage:       13 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_Time
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text30
  4409  001F90                     __ptext30:
  4410                           	callstack 0
  4411  001F90                     ___lldiv:
  4412                           	callstack 29
  4413  001F90  0E00               	movlw	0
  4414  001F92  6E09               	movwf	___lldiv@quotient^0,c
  4415  001F94  0E00               	movlw	0
  4416  001F96  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4417  001F98  0E00               	movlw	0
  4418  001F9A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4419  001F9C  0E00               	movlw	0
  4420  001F9E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4421  001FA0  5005               	movf	___lldiv@divisor^0,w,c
  4422  001FA2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4423  001FA4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4424  001FA6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4425  001FA8  B4D8               	btfsc	status,2,c
  4426  001FAA  EFD9  F00F         	goto	u2691
  4427  001FAE  EFDB  F00F         	goto	u2690
  4428  001FB2                     u2691:
  4429  001FB2  EF11  F010         	goto	l436
  4430  001FB6                     u2690:
  4431  001FB6  0E01               	movlw	1
  4432  001FB8  6E0D               	movwf	___lldiv@counter^0,c
  4433  001FBA  EFE5  F00F         	goto	l2566
  4434  001FBE                     l2564:
  4435  001FBE  90D8               	bcf	status,0,c
  4436  001FC0  3605               	rlcf	___lldiv@divisor^0,f,c
  4437  001FC2  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4438  001FC4  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4439  001FC6  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4440  001FC8  2A0D               	incf	___lldiv@counter^0,f,c
  4441  001FCA                     l2566:
  4442  001FCA  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4443  001FCC  EFEA  F00F         	goto	u2701
  4444  001FD0  EFEC  F00F         	goto	u2700
  4445  001FD4                     u2701:
  4446  001FD4  EFDF  F00F         	goto	l2564
  4447  001FD8                     u2700:
  4448  001FD8                     l2568:
  4449  001FD8  90D8               	bcf	status,0,c
  4450  001FDA  3609               	rlcf	___lldiv@quotient^0,f,c
  4451  001FDC  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4452  001FDE  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4453  001FE0  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4454  001FE2  5005               	movf	___lldiv@divisor^0,w,c
  4455  001FE4  5C01               	subwf	___lldiv@dividend^0,w,c
  4456  001FE6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4457  001FE8  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4458  001FEA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4459  001FEC  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4460  001FEE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4461  001FF0  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4462  001FF2  A0D8               	btfss	status,0,c
  4463  001FF4  EFFE  F00F         	goto	u2711
  4464  001FF8  EF00  F010         	goto	u2710
  4465  001FFC                     u2711:
  4466  001FFC  EF09  F010         	goto	l2576
  4467  002000                     u2710:
  4468  002000  5005               	movf	___lldiv@divisor^0,w,c
  4469  002002  5E01               	subwf	___lldiv@dividend^0,f,c
  4470  002004  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4471  002006  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4472  002008  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4473  00200A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4474  00200C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4475  00200E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4476  002010  8009               	bsf	___lldiv@quotient^0,0,c
  4477  002012                     l2576:
  4478  002012  90D8               	bcf	status,0,c
  4479  002014  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4480  002016  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4481  002018  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4482  00201A  3205               	rrcf	___lldiv@divisor^0,f,c
  4483  00201C  2E0D               	decfsz	___lldiv@counter^0,f,c
  4484  00201E  EFEC  F00F         	goto	l2568
  4485  002022                     l436:
  4486  002022  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4487  002026  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4488  00202A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4489  00202E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4490  002032  0012               	return		;funcret
  4491  002034                     __end_of___lldiv:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _SSD *****************
  4495 ;; Defined at:
  4496 ;;		line 119 in file "main.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  tempo           4   26[COMRAM] float 
  4501 ;;  contm           2   32[COMRAM] int 
  4502 ;;  conts           2   30[COMRAM] int 
  4503 ;;  outrotempo      2   24[COMRAM] int 
  4504 ;;  i               2   22[COMRAM] int 
  4505 ;;  conth           2   20[COMRAM] int 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4515 ;;      Params:         0       0       0       0       0       0       0
  4516 ;;      Locals:        14       0       0       0       0       0       0
  4517 ;;      Temps:          4       0       0       0       0       0       0
  4518 ;;      Totals:        18       0       0       0       0       0       0
  4519 ;;Total ram usage:       18 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; Hardware stack levels required when called: 4
  4522 ;; This function calls:
  4523 ;;		___awdiv
  4524 ;;		___awmod
  4525 ;;		___fladd
  4526 ;;		___flge
  4527 ;;		_ssdDigit
  4528 ;;		_ssdUpdate
  4529 ;; This function is called by:
  4530 ;;		_main
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text31
  4535  00126C                     __ptext31:
  4536                           	callstack 0
  4537  00126C                     _SSD:
  4538                           	callstack 26
  4539  00126C                     
  4540                           ;main.c: 121:     int i = 0;
  4541  00126C  0E00               	movlw	0
  4542  00126E  6E18               	movwf	(SSD@i+1)^0,c
  4543  001270  0E00               	movlw	0
  4544  001272  6E17               	movwf	SSD@i^0,c
  4545                           
  4546                           ;main.c: 122:     float tempo;;main.c: 123:     int conts = 0, contm = 0, conth=0,outrot
      +                          empo;
  4547  001274  0E00               	movlw	0
  4548  001276  6E20               	movwf	(SSD@conts+1)^0,c
  4549  001278  0E00               	movlw	0
  4550  00127A  6E1F               	movwf	SSD@conts^0,c
  4551  00127C  0E00               	movlw	0
  4552  00127E  6E22               	movwf	(SSD@contm+1)^0,c
  4553  001280  0E00               	movlw	0
  4554  001282  6E21               	movwf	SSD@contm^0,c
  4555  001284  0E00               	movlw	0
  4556  001286  6E16               	movwf	(SSD@conth+1)^0,c
  4557  001288  0E00               	movlw	0
  4558  00128A  6E15               	movwf	SSD@conth^0,c
  4559                           
  4560                           ;main.c: 125:     while (i<timer) {
  4561  00128C  EF28  F00A         	goto	l3064
  4562  001290                     l3024:
  4563                           
  4564                           ;main.c: 127:         for (tempo = 0; tempo < 5; tempo++);
  4565  001290  0E00               	movlw	0
  4566  001292  6E1B               	movwf	SSD@tempo^0,c
  4567  001294  0E00               	movlw	0
  4568  001296  6E1C               	movwf	(SSD@tempo+1)^0,c
  4569  001298  0E00               	movlw	0
  4570  00129A  6E1D               	movwf	(SSD@tempo+2)^0,c
  4571  00129C  0E00               	movlw	0
  4572  00129E  6E1E               	movwf	(SSD@tempo+3)^0,c
  4573  0012A0  C01B  F001         	movff	SSD@tempo,___flge@ff1
  4574  0012A4  C01C  F002         	movff	SSD@tempo+1,___flge@ff1+1
  4575  0012A8  C01D  F003         	movff	SSD@tempo+2,___flge@ff1+2
  4576  0012AC  C01E  F004         	movff	SSD@tempo+3,___flge@ff1+3
  4577  0012B0  0E00               	movlw	0
  4578  0012B2  6E05               	movwf	___flge@ff2^0,c
  4579  0012B4  0E00               	movlw	0
  4580  0012B6  6E06               	movwf	(___flge@ff2+1)^0,c
  4581  0012B8  0EA0               	movlw	160
  4582  0012BA  6E07               	movwf	(___flge@ff2+2)^0,c
  4583  0012BC  0E40               	movlw	64
  4584  0012BE  6E08               	movwf	(___flge@ff2+3)^0,c
  4585  0012C0  EC32  F00E         	call	___flge	;wreg free
  4586  0012C4  A0D8               	btfss	status,0,c
  4587  0012C6  EF67  F009         	goto	u3471
  4588  0012CA  EF69  F009         	goto	u3470
  4589  0012CE                     u3471:
  4590  0012CE  EF6B  F009         	goto	l3030
  4591  0012D2                     u3470:
  4592  0012D2  EF9E  F009         	goto	l3032
  4593  0012D6                     l3030:
  4594  0012D6  C01B  F001         	movff	SSD@tempo,___fladd@b
  4595  0012DA  C01C  F002         	movff	SSD@tempo+1,___fladd@b+1
  4596  0012DE  C01D  F003         	movff	SSD@tempo+2,___fladd@b+2
  4597  0012E2  C01E  F004         	movff	SSD@tempo+3,___fladd@b+3
  4598  0012E6  0E00               	movlw	0
  4599  0012E8  6E05               	movwf	___fladd@a^0,c
  4600  0012EA  0E00               	movlw	0
  4601  0012EC  6E06               	movwf	(___fladd@a+1)^0,c
  4602  0012EE  0E80               	movlw	128
  4603  0012F0  6E07               	movwf	(___fladd@a+2)^0,c
  4604  0012F2  0E3F               	movlw	63
  4605  0012F4  6E08               	movwf	(___fladd@a+3)^0,c
  4606  0012F6  EC2E  F003         	call	___fladd	;wreg free
  4607  0012FA  C001  F01B         	movff	?___fladd,SSD@tempo
  4608  0012FE  C002  F01C         	movff	?___fladd+1,SSD@tempo+1
  4609  001302  C003  F01D         	movff	?___fladd+2,SSD@tempo+2
  4610  001306  C004  F01E         	movff	?___fladd+3,SSD@tempo+3
  4611  00130A  C01B  F001         	movff	SSD@tempo,___flge@ff1
  4612  00130E  C01C  F002         	movff	SSD@tempo+1,___flge@ff1+1
  4613  001312  C01D  F003         	movff	SSD@tempo+2,___flge@ff1+2
  4614  001316  C01E  F004         	movff	SSD@tempo+3,___flge@ff1+3
  4615  00131A  0E00               	movlw	0
  4616  00131C  6E05               	movwf	___flge@ff2^0,c
  4617  00131E  0E00               	movlw	0
  4618  001320  6E06               	movwf	(___flge@ff2+1)^0,c
  4619  001322  0EA0               	movlw	160
  4620  001324  6E07               	movwf	(___flge@ff2+2)^0,c
  4621  001326  0E40               	movlw	64
  4622  001328  6E08               	movwf	(___flge@ff2+3)^0,c
  4623  00132A  EC32  F00E         	call	___flge	;wreg free
  4624  00132E  A0D8               	btfss	status,0,c
  4625  001330  EF9C  F009         	goto	u3481
  4626  001334  EF9E  F009         	goto	u3480
  4627  001338                     u3481:
  4628  001338  EF6B  F009         	goto	l3030
  4629  00133C                     u3480:
  4630  00133C                     l3032:
  4631                           
  4632                           ;main.c: 129:         outrotempo++;
  4633  00133C  4A19               	infsnz	SSD@outrotempo^0,f,c
  4634  00133E  2A1A               	incf	(SSD@outrotempo+1)^0,f,c
  4635  001340                     
  4636                           ;main.c: 130:         if (outrotempo >= 45) {
  4637  001340  BE1A               	btfsc	(SSD@outrotempo+1)^0,7,c
  4638  001342  EFAC  F009         	goto	u3491
  4639  001346  501A               	movf	(SSD@outrotempo+1)^0,w,c
  4640  001348  E109               	bnz	u3490
  4641  00134A  0E2D               	movlw	45
  4642  00134C  5C19               	subwf	SSD@outrotempo^0,w,c
  4643  00134E  A0D8               	btfss	status,0,c
  4644  001350  EFAC  F009         	goto	u3491
  4645  001354  EFAE  F009         	goto	u3490
  4646  001358                     u3491:
  4647  001358  EF26  F00A         	goto	l3062
  4648  00135C                     u3490:
  4649  00135C                     
  4650                           ;main.c: 132:             outrotempo = 0;
  4651  00135C  0E00               	movlw	0
  4652  00135E  6E1A               	movwf	(SSD@outrotempo+1)^0,c
  4653  001360  0E00               	movlw	0
  4654  001362  6E19               	movwf	SSD@outrotempo^0,c
  4655  001364                     
  4656                           ;main.c: 133:             conts++;
  4657  001364  4A1F               	infsnz	SSD@conts^0,f,c
  4658  001366  2A20               	incf	(SSD@conts+1)^0,f,c
  4659  001368                     
  4660                           ;main.c: 135:             if (conts == 60) {
  4661  001368  0E3C               	movlw	60
  4662  00136A  181F               	xorwf	SSD@conts^0,w,c
  4663  00136C  1020               	iorwf	(SSD@conts+1)^0,w,c
  4664  00136E  A4D8               	btfss	status,2,c
  4665  001370  EFBC  F009         	goto	u3501
  4666  001374  EFBE  F009         	goto	u3500
  4667  001378                     u3501:
  4668  001378  EFC4  F009         	goto	l3046
  4669  00137C                     u3500:
  4670  00137C                     
  4671                           ;main.c: 136:                 contm++;
  4672  00137C  4A21               	infsnz	SSD@contm^0,f,c
  4673  00137E  2A22               	incf	(SSD@contm+1)^0,f,c
  4674  001380                     
  4675                           ;main.c: 137:                 conts = 0;
  4676  001380  0E00               	movlw	0
  4677  001382  6E20               	movwf	(SSD@conts+1)^0,c
  4678  001384  0E00               	movlw	0
  4679  001386  6E1F               	movwf	SSD@conts^0,c
  4680  001388                     l3046:
  4681                           
  4682                           ;main.c: 139:             if (contm == 60) {
  4683  001388  0E3C               	movlw	60
  4684  00138A  1821               	xorwf	SSD@contm^0,w,c
  4685  00138C  1022               	iorwf	(SSD@contm+1)^0,w,c
  4686  00138E  A4D8               	btfss	status,2,c
  4687  001390  EFCC  F009         	goto	u3511
  4688  001394  EFCE  F009         	goto	u3510
  4689  001398                     u3511:
  4690  001398  EFD4  F009         	goto	l3052
  4691  00139C                     u3510:
  4692  00139C                     
  4693                           ;main.c: 140:                 contm = 0;
  4694  00139C  0E00               	movlw	0
  4695  00139E  6E22               	movwf	(SSD@contm+1)^0,c
  4696  0013A0  0E00               	movlw	0
  4697  0013A2  6E21               	movwf	SSD@contm^0,c
  4698  0013A4                     
  4699                           ;main.c: 141:                 conth++;
  4700  0013A4  4A15               	infsnz	SSD@conth^0,f,c
  4701  0013A6  2A16               	incf	(SSD@conth+1)^0,f,c
  4702  0013A8                     l3052:
  4703                           
  4704                           ;main.c: 144:             ssdDigit(((conts / 1) % 10), 3);
  4705  0013A8  0E03               	movlw	3
  4706  0013AA  6E0F               	movwf	ssdDigit@pos^0,c
  4707  0013AC  C01F  F009         	movff	SSD@conts,___awmod@dividend
  4708  0013B0  C020  F00A         	movff	SSD@conts+1,___awmod@dividend+1
  4709  0013B4  0E00               	movlw	0
  4710  0013B6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4711  0013B8  0E0A               	movlw	10
  4712  0013BA  6E0B               	movwf	___awmod@divisor^0,c
  4713  0013BC  EC70  F00F         	call	___awmod	;wreg free
  4714  0013C0  5009               	movf	?___awmod^0,w,c
  4715  0013C2  ECB4  F011         	call	_ssdDigit
  4716  0013C6                     
  4717                           ;main.c: 145:             ssdDigit(((conts / 10) % 10), 2);
  4718  0013C6  0E02               	movlw	2
  4719  0013C8  6E0F               	movwf	ssdDigit@pos^0,c
  4720  0013CA  0E00               	movlw	0
  4721  0013CC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4722  0013CE  0E0A               	movlw	10
  4723  0013D0  6E03               	movwf	___awdiv@divisor^0,c
  4724  0013D2  C01F  F001         	movff	SSD@conts,___awdiv@dividend
  4725  0013D6  C020  F002         	movff	SSD@conts+1,___awdiv@dividend+1
  4726  0013DA  ECB4  F00E         	call	___awdiv	;wreg free
  4727  0013DE  C001  F009         	movff	?___awdiv,___awmod@dividend
  4728  0013E2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4729  0013E6  0E00               	movlw	0
  4730  0013E8  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4731  0013EA  0E0A               	movlw	10
  4732  0013EC  6E0B               	movwf	___awmod@divisor^0,c
  4733  0013EE  EC70  F00F         	call	___awmod	;wreg free
  4734  0013F2  5009               	movf	?___awmod^0,w,c
  4735  0013F4  ECB4  F011         	call	_ssdDigit
  4736  0013F8                     
  4737                           ;main.c: 146:             ssdDigit(((contm / 1) % 10), 1);
  4738  0013F8  0E01               	movlw	1
  4739  0013FA  6E0F               	movwf	ssdDigit@pos^0,c
  4740  0013FC  C021  F009         	movff	SSD@contm,___awmod@dividend
  4741  001400  C022  F00A         	movff	SSD@contm+1,___awmod@dividend+1
  4742  001404  0E00               	movlw	0
  4743  001406  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4744  001408  0E0A               	movlw	10
  4745  00140A  6E0B               	movwf	___awmod@divisor^0,c
  4746  00140C  EC70  F00F         	call	___awmod	;wreg free
  4747  001410  5009               	movf	?___awmod^0,w,c
  4748  001412  ECB4  F011         	call	_ssdDigit
  4749  001416                     
  4750                           ;main.c: 147:             ssdDigit(((contm / 10) % 10), 0);
  4751  001416  0E00               	movlw	0
  4752  001418  6E0F               	movwf	ssdDigit@pos^0,c
  4753  00141A  0E00               	movlw	0
  4754  00141C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4755  00141E  0E0A               	movlw	10
  4756  001420  6E03               	movwf	___awdiv@divisor^0,c
  4757  001422  C021  F001         	movff	SSD@contm,___awdiv@dividend
  4758  001426  C022  F002         	movff	SSD@contm+1,___awdiv@dividend+1
  4759  00142A  ECB4  F00E         	call	___awdiv	;wreg free
  4760  00142E  C001  F009         	movff	?___awdiv,___awmod@dividend
  4761  001432  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4762  001436  0E00               	movlw	0
  4763  001438  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4764  00143A  0E0A               	movlw	10
  4765  00143C  6E0B               	movwf	___awmod@divisor^0,c
  4766  00143E  EC70  F00F         	call	___awmod	;wreg free
  4767  001442  5009               	movf	?___awmod^0,w,c
  4768  001444  ECB4  F011         	call	_ssdDigit
  4769  001448                     
  4770                           ;main.c: 148:             i++;
  4771  001448  4A17               	infsnz	SSD@i^0,f,c
  4772  00144A  2A18               	incf	(SSD@i+1)^0,f,c
  4773  00144C                     l3062:
  4774                           
  4775                           ;main.c: 150:         ssdUpdate();
  4776  00144C  EC11  F00B         	call	_ssdUpdate	;wreg free
  4777  001450                     l3064:
  4778                           
  4779                           ;main.c: 125:     while (i<timer) {
  4780  001450  C017  F011         	movff	SSD@i,??_SSD
  4781  001454  C018  F012         	movff	SSD@i+1,??_SSD+1
  4782  001458  0E00               	movlw	0
  4783  00145A  BE12               	btfsc	(??_SSD+1)^0,7,c
  4784  00145C  0EFF               	movlw	255
  4785  00145E  6E13               	movwf	(??_SSD+2)^0,c
  4786  001460  6E14               	movwf	(??_SSD+3)^0,c
  4787  001462  505D               	movf	_timer^0,w,c
  4788  001464  5C11               	subwf	??_SSD^0,w,c
  4789  001466  505E               	movf	(_timer+1)^0,w,c
  4790  001468  5812               	subwfb	(??_SSD+1)^0,w,c
  4791  00146A  505F               	movf	(_timer+2)^0,w,c
  4792  00146C  5813               	subwfb	(??_SSD+2)^0,w,c
  4793  00146E  5060               	movf	(_timer+3)^0,w,c
  4794  001470  5814               	subwfb	(??_SSD+3)^0,w,c
  4795  001472  A0D8               	btfss	status,0,c
  4796  001474  EF3E  F00A         	goto	u3521
  4797  001478  EF40  F00A         	goto	u3520
  4798  00147C                     u3521:
  4799  00147C  EF48  F009         	goto	l3024
  4800  001480                     u3520:
  4801  001480  0012               	return		;funcret
  4802  001482                     __end_of_SSD:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function _ssdUpdate *****************
  4806 ;; Defined at:
  4807 ;;		line 50 in file "ssd.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4821 ;;      Params:         0       0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0
  4823 ;;      Temps:          2       0       0       0       0       0       0
  4824 ;;      Totals:         2       0       0       0       0       0       0
  4825 ;;Total ram usage:        2 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 3
  4828 ;; This function calls:
  4829 ;;		_digitalWrite
  4830 ;;		_soWrite
  4831 ;; This function is called by:
  4832 ;;		_SSD
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text32
  4837  001622                     __ptext32:
  4838                           	callstack 0
  4839  001622                     _ssdUpdate:
  4840                           	callstack 26
  4841  001622                     
  4842                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  4843  001622  0E00               	movlw	0
  4844  001624  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4845  001626  0E18               	movlw	24
  4846  001628  6E01               	movwf	digitalWrite@pin^0,c
  4847  00162A  0E00               	movlw	0
  4848  00162C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4849  00162E  0E00               	movlw	0
  4850  001630  6E03               	movwf	digitalWrite@value^0,c
  4851  001632  EC0F  F008         	call	_digitalWrite	;wreg free
  4852                           
  4853                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  4854  001636  0E00               	movlw	0
  4855  001638  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4856  00163A  0E19               	movlw	25
  4857  00163C  6E01               	movwf	digitalWrite@pin^0,c
  4858  00163E  0E00               	movlw	0
  4859  001640  6E04               	movwf	(digitalWrite@value+1)^0,c
  4860  001642  0E00               	movlw	0
  4861  001644  6E03               	movwf	digitalWrite@value^0,c
  4862  001646  EC0F  F008         	call	_digitalWrite	;wreg free
  4863                           
  4864                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  4865  00164A  0E00               	movlw	0
  4866  00164C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4867  00164E  0E1A               	movlw	26
  4868  001650  6E01               	movwf	digitalWrite@pin^0,c
  4869  001652  0E00               	movlw	0
  4870  001654  6E04               	movwf	(digitalWrite@value+1)^0,c
  4871  001656  0E00               	movlw	0
  4872  001658  6E03               	movwf	digitalWrite@value^0,c
  4873  00165A  EC0F  F008         	call	_digitalWrite	;wreg free
  4874                           
  4875                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  4876  00165E  0E00               	movlw	0
  4877  001660  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4878  001662  0E1B               	movlw	27
  4879  001664  6E01               	movwf	digitalWrite@pin^0,c
  4880  001666  0E00               	movlw	0
  4881  001668  6E04               	movwf	(digitalWrite@value+1)^0,c
  4882  00166A  0E00               	movlw	0
  4883  00166C  6E03               	movwf	digitalWrite@value^0,c
  4884  00166E  EC0F  F008         	call	_digitalWrite	;wreg free
  4885                           
  4886                           ;ssd.c: 60:     soWrite(0x00);
  4887  001672  0E00               	movlw	0
  4888  001674  6E08               	movwf	(soWrite@value+1)^0,c
  4889  001676  0E00               	movlw	0
  4890  001678  6E07               	movwf	soWrite@value^0,c
  4891  00167A  EC0B  F012         	call	_soWrite	;wreg free
  4892                           
  4893                           ;ssd.c: 62:     switch (display)
  4894  00167E  EFA9  F00B         	goto	l2536
  4895  001682                     l2508:
  4896                           
  4897                           ;ssd.c: 65:             soWrite(valor[v0]);
  4898  001682  0E01               	movlw	low _valor
  4899  001684  246A               	addwf	_v0^0,w,c
  4900  001686  6EF6               	movwf	tblptrl,c
  4901  001688  6AF7               	clrf	tblptrh,c
  4902  00168A  0E06               	movlw	high _valor
  4903  00168C  22F7               	addwfc	tblptrh,f,c
  4904  00168E                     	if	0	;There are less than 3 active tblptr bytes
  4905  00168E                     	endif
  4906  00168E  0008               	tblrd		*
  4907  001690  50F5               	movf	tablat,w,c
  4908  001692  6E07               	movwf	soWrite@value^0,c
  4909  001694  6A08               	clrf	(soWrite@value+1)^0,c
  4910  001696  EC0B  F012         	call	_soWrite	;wreg free
  4911  00169A                     
  4912                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  4913  00169A  0E00               	movlw	0
  4914  00169C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4915  00169E  0E18               	movlw	24
  4916  0016A0  6E01               	movwf	digitalWrite@pin^0,c
  4917  0016A2  0E00               	movlw	0
  4918  0016A4  6E04               	movwf	(digitalWrite@value+1)^0,c
  4919  0016A6  0E01               	movlw	1
  4920  0016A8  6E03               	movwf	digitalWrite@value^0,c
  4921  0016AA  EC0F  F008         	call	_digitalWrite	;wreg free
  4922  0016AE                     
  4923                           ;ssd.c: 67:             display = 1;
  4924  0016AE  0E01               	movlw	1
  4925  0016B0  6E6B               	movwf	_display^0,c
  4926                           
  4927                           ;ssd.c: 68:             break;
  4928  0016B2  EFC6  F00B         	goto	l351
  4929  0016B6                     l2514:
  4930                           
  4931                           ;ssd.c: 71:             soWrite(valor[v1]);
  4932  0016B6  0E01               	movlw	low _valor
  4933  0016B8  2469               	addwf	_v1^0,w,c
  4934  0016BA  6EF6               	movwf	tblptrl,c
  4935  0016BC  6AF7               	clrf	tblptrh,c
  4936  0016BE  0E06               	movlw	high _valor
  4937  0016C0  22F7               	addwfc	tblptrh,f,c
  4938  0016C2                     	if	0	;There are less than 3 active tblptr bytes
  4939  0016C2                     	endif
  4940  0016C2  0008               	tblrd		*
  4941  0016C4  50F5               	movf	tablat,w,c
  4942  0016C6  6E07               	movwf	soWrite@value^0,c
  4943  0016C8  6A08               	clrf	(soWrite@value+1)^0,c
  4944  0016CA  EC0B  F012         	call	_soWrite	;wreg free
  4945  0016CE                     
  4946                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  4947  0016CE  0E00               	movlw	0
  4948  0016D0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4949  0016D2  0E19               	movlw	25
  4950  0016D4  6E01               	movwf	digitalWrite@pin^0,c
  4951  0016D6  0E00               	movlw	0
  4952  0016D8  6E04               	movwf	(digitalWrite@value+1)^0,c
  4953  0016DA  0E01               	movlw	1
  4954  0016DC  6E03               	movwf	digitalWrite@value^0,c
  4955  0016DE  EC0F  F008         	call	_digitalWrite	;wreg free
  4956  0016E2                     
  4957                           ;ssd.c: 73:             display = 2;
  4958  0016E2  0E02               	movlw	2
  4959  0016E4  6E6B               	movwf	_display^0,c
  4960                           
  4961                           ;ssd.c: 74:             break;
  4962  0016E6  EFC6  F00B         	goto	l351
  4963  0016EA                     l2520:
  4964                           
  4965                           ;ssd.c: 77:             soWrite(valor[v2]);
  4966  0016EA  0E01               	movlw	low _valor
  4967  0016EC  2468               	addwf	_v2^0,w,c
  4968  0016EE  6EF6               	movwf	tblptrl,c
  4969  0016F0  6AF7               	clrf	tblptrh,c
  4970  0016F2  0E06               	movlw	high _valor
  4971  0016F4  22F7               	addwfc	tblptrh,f,c
  4972  0016F6                     	if	0	;There are less than 3 active tblptr bytes
  4973  0016F6                     	endif
  4974  0016F6  0008               	tblrd		*
  4975  0016F8  50F5               	movf	tablat,w,c
  4976  0016FA  6E07               	movwf	soWrite@value^0,c
  4977  0016FC  6A08               	clrf	(soWrite@value+1)^0,c
  4978  0016FE  EC0B  F012         	call	_soWrite	;wreg free
  4979  001702                     
  4980                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  4981  001702  0E00               	movlw	0
  4982  001704  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4983  001706  0E1A               	movlw	26
  4984  001708  6E01               	movwf	digitalWrite@pin^0,c
  4985  00170A  0E00               	movlw	0
  4986  00170C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4987  00170E  0E01               	movlw	1
  4988  001710  6E03               	movwf	digitalWrite@value^0,c
  4989  001712  EC0F  F008         	call	_digitalWrite	;wreg free
  4990  001716                     
  4991                           ;ssd.c: 79:             display = 3;
  4992  001716  0E03               	movlw	3
  4993  001718  6E6B               	movwf	_display^0,c
  4994                           
  4995                           ;ssd.c: 80:             break;
  4996  00171A  EFC6  F00B         	goto	l351
  4997  00171E                     l2526:
  4998                           
  4999                           ;ssd.c: 83:             soWrite(valor[v3]);
  5000  00171E  0E01               	movlw	low _valor
  5001  001720  2467               	addwf	_v3^0,w,c
  5002  001722  6EF6               	movwf	tblptrl,c
  5003  001724  6AF7               	clrf	tblptrh,c
  5004  001726  0E06               	movlw	high _valor
  5005  001728  22F7               	addwfc	tblptrh,f,c
  5006  00172A                     	if	0	;There are less than 3 active tblptr bytes
  5007  00172A                     	endif
  5008  00172A  0008               	tblrd		*
  5009  00172C  50F5               	movf	tablat,w,c
  5010  00172E  6E07               	movwf	soWrite@value^0,c
  5011  001730  6A08               	clrf	(soWrite@value+1)^0,c
  5012  001732  EC0B  F012         	call	_soWrite	;wreg free
  5013  001736                     
  5014                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  5015  001736  0E00               	movlw	0
  5016  001738  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5017  00173A  0E1B               	movlw	27
  5018  00173C  6E01               	movwf	digitalWrite@pin^0,c
  5019  00173E  0E00               	movlw	0
  5020  001740  6E04               	movwf	(digitalWrite@value+1)^0,c
  5021  001742  0E01               	movlw	1
  5022  001744  6E03               	movwf	digitalWrite@value^0,c
  5023  001746  EC0F  F008         	call	_digitalWrite	;wreg free
  5024  00174A                     l2530:
  5025                           
  5026                           ;ssd.c: 85:             display = 0;
  5027  00174A  0E00               	movlw	0
  5028  00174C  6E6B               	movwf	_display^0,c
  5029                           
  5030                           ;ssd.c: 86:             break;
  5031  00174E  EFC6  F00B         	goto	l351
  5032  001752                     l2536:
  5033  001752  506B               	movf	_display^0,w,c
  5034  001754  6E0A               	movwf	??_ssdUpdate^0,c
  5035  001756  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  5036                           
  5037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5038                           ; Switch size 1, requested type "simple"
  5039                           ; Number of cases is 1, Range of values is 0 to 0
  5040                           ; switch strategies available:
  5041                           ; Name         Instructions Cycles
  5042                           ; simple_byte            4     3 (average)
  5043                           ;	Chosen strategy is simple_byte
  5044  001758  500B               	movf	(??_ssdUpdate+1)^0,w,c
  5045  00175A  0A00               	xorlw	0	; case 0
  5046  00175C  B4D8               	btfsc	status,2,c
  5047  00175E  EFB3  F00B         	goto	l3242
  5048  001762  EFA5  F00B         	goto	l2530
  5049  001766                     l3242:
  5050                           
  5051                           ; Switch size 1, requested type "simple"
  5052                           ; Number of cases is 4, Range of values is 0 to 3
  5053                           ; switch strategies available:
  5054                           ; Name         Instructions Cycles
  5055                           ; simple_byte           13     7 (average)
  5056                           ;	Chosen strategy is simple_byte
  5057  001766  500A               	movf	??_ssdUpdate^0,w,c
  5058  001768  0A00               	xorlw	0	; case 0
  5059  00176A  B4D8               	btfsc	status,2,c
  5060  00176C  EF41  F00B         	goto	l2508
  5061  001770  0A01               	xorlw	1	; case 1
  5062  001772  B4D8               	btfsc	status,2,c
  5063  001774  EF5B  F00B         	goto	l2514
  5064  001778  0A03               	xorlw	3	; case 2
  5065  00177A  B4D8               	btfsc	status,2,c
  5066  00177C  EF75  F00B         	goto	l2520
  5067  001780  0A01               	xorlw	1	; case 3
  5068  001782  B4D8               	btfsc	status,2,c
  5069  001784  EF8F  F00B         	goto	l2526
  5070  001788  EFA5  F00B         	goto	l2530
  5071  00178C                     l351:
  5072  00178C  0012               	return		;funcret
  5073  00178E                     __end_of_ssdUpdate:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _soWrite *****************
  5077 ;; Defined at:
  5078 ;;		line 18 in file "so.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  value           2    6[COMRAM] int 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  i               1    8[COMRAM] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5092 ;;      Params:         2       0       0       0       0       0       0
  5093 ;;      Locals:         1       0       0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0
  5095 ;;      Totals:         3       0       0       0       0       0       0
  5096 ;;Total ram usage:        3 bytes
  5097 ;; Hardware stack levels used: 1
  5098 ;; Hardware stack levels required when called: 2
  5099 ;; This function calls:
  5100 ;;		_PulseClockData
  5101 ;;		_PulseEnClock
  5102 ;;		_digitalWrite
  5103 ;; This function is called by:
  5104 ;;		_kpDebounce
  5105 ;;		_pushNibble
  5106 ;;		_pushByte
  5107 ;;		_ssdUpdate
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text33
  5112  002416                     __ptext33:
  5113                           	callstack 0
  5114  002416                     _soWrite:
  5115                           	callstack 24
  5116  002416                     
  5117                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5118  002416  0E00               	movlw	0
  5119  002418  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5120  00241A  0E08               	movlw	8
  5121  00241C  6E01               	movwf	digitalWrite@pin^0,c
  5122  00241E  0E00               	movlw	0
  5123  002420  6E04               	movwf	(digitalWrite@value+1)^0,c
  5124  002422  0E00               	movlw	0
  5125  002424  6E03               	movwf	digitalWrite@value^0,c
  5126  002426  EC0F  F008         	call	_digitalWrite	;wreg free
  5127  00242A                     
  5128                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5129  00242A  0E00               	movlw	0
  5130  00242C  6E09               	movwf	soWrite@i^0,c
  5131  00242E                     l2234:
  5132                           
  5133                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5134  00242E  0E00               	movlw	0
  5135  002430  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5136  002432  0E1E               	movlw	30
  5137  002434  6E01               	movwf	digitalWrite@pin^0,c
  5138  002436  0E80               	movlw	128
  5139  002438  1407               	andwf	soWrite@value^0,w,c
  5140  00243A  6E03               	movwf	digitalWrite@value^0,c
  5141  00243C  6A04               	clrf	(digitalWrite@value+1)^0,c
  5142  00243E  EC0F  F008         	call	_digitalWrite	;wreg free
  5143                           
  5144                           ;so.c: 23:   PulseClockData();
  5145  002442  EC2F  F013         	call	_PulseClockData	;wreg free
  5146  002446                     
  5147                           ;so.c: 24:   value <<= 1;
  5148  002446  90D8               	bcf	status,0,c
  5149  002448  3607               	rlcf	soWrite@value^0,f,c
  5150  00244A  3608               	rlcf	(soWrite@value+1)^0,f,c
  5151  00244C                     
  5152                           ;so.c: 25:  }
  5153  00244C  2A09               	incf	soWrite@i^0,f,c
  5154  00244E  0E07               	movlw	7
  5155  002450  6409               	cpfsgt	soWrite@i^0,c
  5156  002452  EF2D  F012         	goto	u2071
  5157  002456  EF2F  F012         	goto	u2070
  5158  00245A                     u2071:
  5159  00245A  EF17  F012         	goto	l2234
  5160  00245E                     u2070:
  5161  00245E                     
  5162                           ;so.c: 26:  PulseEnClock();
  5163  00245E  EC1A  F013         	call	_PulseEnClock	;wreg free
  5164  002462  0012               	return		;funcret
  5165  002464                     __end_of_soWrite:
  5166                           	callstack 0
  5167                           
  5168 ;; *************** function _PulseEnClock *****************
  5169 ;; Defined at:
  5170 ;;		line 9 in file "so.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5184 ;;      Params:         0       0       0       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0
  5187 ;;      Totals:         0       0       0       0       0       0       0
  5188 ;;Total ram usage:        0 bytes
  5189 ;; Hardware stack levels used: 1
  5190 ;; Hardware stack levels required when called: 1
  5191 ;; This function calls:
  5192 ;;		_digitalWrite
  5193 ;; This function is called by:
  5194 ;;		_soWrite
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text34
  5199  002634                     __ptext34:
  5200                           	callstack 0
  5201  002634                     _PulseEnClock:
  5202                           	callstack 24
  5203  002634                     
  5204                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5205  002634  0E00               	movlw	0
  5206  002636  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5207  002638  0E1F               	movlw	31
  5208  00263A  6E01               	movwf	digitalWrite@pin^0,c
  5209  00263C  0E00               	movlw	0
  5210  00263E  6E04               	movwf	(digitalWrite@value+1)^0,c
  5211  002640  0E01               	movlw	1
  5212  002642  6E03               	movwf	digitalWrite@value^0,c
  5213  002644  EC0F  F008         	call	_digitalWrite	;wreg free
  5214                           
  5215                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5216  002648  0E00               	movlw	0
  5217  00264A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5218  00264C  0E1F               	movlw	31
  5219  00264E  6E01               	movwf	digitalWrite@pin^0,c
  5220  002650  0E00               	movlw	0
  5221  002652  6E04               	movwf	(digitalWrite@value+1)^0,c
  5222  002654  0E00               	movlw	0
  5223  002656  6E03               	movwf	digitalWrite@value^0,c
  5224  002658  EC0F  F008         	call	_digitalWrite	;wreg free
  5225  00265C  0012               	return		;funcret
  5226  00265E                     __end_of_PulseEnClock:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _PulseClockData *****************
  5230 ;; Defined at:
  5231 ;;		line 14 in file "so.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5245 ;;      Params:         0       0       0       0       0       0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0
  5248 ;;      Totals:         0       0       0       0       0       0       0
  5249 ;;Total ram usage:        0 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 1
  5252 ;; This function calls:
  5253 ;;		_digitalWrite
  5254 ;; This function is called by:
  5255 ;;		_soWrite
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text35
  5260  00265E                     __ptext35:
  5261                           	callstack 0
  5262  00265E                     _PulseClockData:
  5263                           	callstack 24
  5264  00265E                     
  5265                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5266  00265E  0E00               	movlw	0
  5267  002660  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5268  002662  0E08               	movlw	8
  5269  002664  6E01               	movwf	digitalWrite@pin^0,c
  5270  002666  0E00               	movlw	0
  5271  002668  6E04               	movwf	(digitalWrite@value+1)^0,c
  5272  00266A  0E01               	movlw	1
  5273  00266C  6E03               	movwf	digitalWrite@value^0,c
  5274  00266E  EC0F  F008         	call	_digitalWrite	;wreg free
  5275                           
  5276                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5277  002672  0E00               	movlw	0
  5278  002674  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5279  002676  0E08               	movlw	8
  5280  002678  6E01               	movwf	digitalWrite@pin^0,c
  5281  00267A  0E00               	movlw	0
  5282  00267C  6E04               	movwf	(digitalWrite@value+1)^0,c
  5283  00267E  0E00               	movlw	0
  5284  002680  6E03               	movwf	digitalWrite@value^0,c
  5285  002682  EC0F  F008         	call	_digitalWrite	;wreg free
  5286  002686  0012               	return		;funcret
  5287  002688                     __end_of_PulseClockData:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _digitalWrite *****************
  5291 ;; Defined at:
  5292 ;;		line 14 in file "io.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  pin             2    0[COMRAM] int 
  5295 ;;  value           2    2[COMRAM] int 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5307 ;;      Params:         4       0       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0
  5309 ;;      Temps:          2       0       0       0       0       0       0
  5310 ;;      Totals:         6       0       0       0       0       0       0
  5311 ;;Total ram usage:        6 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_sinalizar
  5317 ;;		_pulseEnablePin
  5318 ;;		_pushNibble
  5319 ;;		_pushByte
  5320 ;;		_PulseEnClock
  5321 ;;		_PulseClockData
  5322 ;;		_soWrite
  5323 ;;		_ssdUpdate
  5324 ;;		_rgbColor
  5325 ;;		_turnOn
  5326 ;;		_turnOff
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text36
  5331  00101E                     __ptext36:
  5332                           	callstack 0
  5333  00101E                     _digitalWrite:
  5334                           	callstack 25
  5335  00101E                     
  5336                           ;io.c: 16:     if(pin <8){
  5337  00101E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5338  001020  EF1D  F008         	goto	u1870
  5339  001024  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5340  001026  E107               	bnz	u1871
  5341  001028  0E08               	movlw	8
  5342  00102A  5C01               	subwf	digitalWrite@pin^0,w,c
  5343  00102C  B0D8               	btfsc	status,0,c
  5344  00102E  EF1B  F008         	goto	u1871
  5345  001032  EF1D  F008         	goto	u1870
  5346  001036                     u1871:
  5347  001036  EF47  F008         	goto	l2190
  5348  00103A                     u1870:
  5349  00103A                     
  5350                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5351  00103A  5003               	movf	digitalWrite@value^0,w,c
  5352  00103C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5353  00103E  B4D8               	btfsc	status,2,c
  5354  001040  EF24  F008         	goto	u1881
  5355  001044  EF26  F008         	goto	u1880
  5356  001048                     u1881:
  5357  001048  EF36  F008         	goto	l2188
  5358  00104C                     u1880:
  5359  00104C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5360  001050  0E01               	movlw	1
  5361  001052  6E06               	movwf	(??_digitalWrite+1)^0,c
  5362  001054  2A05               	incf	??_digitalWrite^0,f,c
  5363  001056  EF2F  F008         	goto	u1894
  5364  00105A                     u1895:
  5365  00105A  90D8               	bcf	status,0,c
  5366  00105C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5367  00105E                     u1894:
  5368  00105E  2E05               	decfsz	??_digitalWrite^0,f,c
  5369  001060  EF2D  F008         	goto	u1895
  5370  001064  5006               	movf	(??_digitalWrite+1)^0,w,c
  5371  001066  1280               	iorwf	128,f,c	;volatile
  5372  001068  EF35  F009         	goto	l140
  5373  00106C                     l2188:
  5374  00106C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5375  001070  0E01               	movlw	1
  5376  001072  6E06               	movwf	(??_digitalWrite+1)^0,c
  5377  001074  2A05               	incf	??_digitalWrite^0,f,c
  5378  001076  EF3F  F008         	goto	u1904
  5379  00107A                     u1905:
  5380  00107A  90D8               	bcf	status,0,c
  5381  00107C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5382  00107E                     u1904:
  5383  00107E  2E05               	decfsz	??_digitalWrite^0,f,c
  5384  001080  EF3D  F008         	goto	u1905
  5385  001084  5006               	movf	(??_digitalWrite+1)^0,w,c
  5386  001086  0AFF               	xorlw	255
  5387  001088  1680               	andwf	128,f,c	;volatile
  5388  00108A  EF35  F009         	goto	l140
  5389  00108E                     l2190:
  5390  00108E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5391  001090  EF55  F008         	goto	u1910
  5392  001094  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5393  001096  E107               	bnz	u1911
  5394  001098  0E10               	movlw	16
  5395  00109A  5C01               	subwf	digitalWrite@pin^0,w,c
  5396  00109C  B0D8               	btfsc	status,0,c
  5397  00109E  EF53  F008         	goto	u1911
  5398  0010A2  EF55  F008         	goto	u1910
  5399  0010A6                     u1911:
  5400  0010A6  EF83  F008         	goto	l2198
  5401  0010AA                     u1910:
  5402  0010AA                     
  5403                           ;io.c: 20:         pin -=8;
  5404  0010AA  0EF8               	movlw	248
  5405  0010AC  2601               	addwf	digitalWrite@pin^0,f,c
  5406  0010AE  0EFF               	movlw	255
  5407  0010B0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5408                           
  5409                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5410  0010B2  5003               	movf	digitalWrite@value^0,w,c
  5411  0010B4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5412  0010B6  B4D8               	btfsc	status,2,c
  5413  0010B8  EF60  F008         	goto	u1921
  5414  0010BC  EF62  F008         	goto	u1920
  5415  0010C0                     u1921:
  5416  0010C0  EF72  F008         	goto	l2196
  5417  0010C4                     u1920:
  5418  0010C4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5419  0010C8  0E01               	movlw	1
  5420  0010CA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5421  0010CC  2A05               	incf	??_digitalWrite^0,f,c
  5422  0010CE  EF6B  F008         	goto	u1934
  5423  0010D2                     u1935:
  5424  0010D2  90D8               	bcf	status,0,c
  5425  0010D4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5426  0010D6                     u1934:
  5427  0010D6  2E05               	decfsz	??_digitalWrite^0,f,c
  5428  0010D8  EF69  F008         	goto	u1935
  5429  0010DC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5430  0010DE  1281               	iorwf	129,f,c	;volatile
  5431  0010E0  EF35  F009         	goto	l140
  5432  0010E4                     l2196:
  5433  0010E4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5434  0010E8  0E01               	movlw	1
  5435  0010EA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5436  0010EC  2A05               	incf	??_digitalWrite^0,f,c
  5437  0010EE  EF7B  F008         	goto	u1944
  5438  0010F2                     u1945:
  5439  0010F2  90D8               	bcf	status,0,c
  5440  0010F4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5441  0010F6                     u1944:
  5442  0010F6  2E05               	decfsz	??_digitalWrite^0,f,c
  5443  0010F8  EF79  F008         	goto	u1945
  5444  0010FC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5445  0010FE  0AFF               	xorlw	255
  5446  001100  1681               	andwf	129,f,c	;volatile
  5447  001102  EF35  F009         	goto	l140
  5448  001106                     l2198:
  5449  001106  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5450  001108  EF91  F008         	goto	u1950
  5451  00110C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5452  00110E  E107               	bnz	u1951
  5453  001110  0E18               	movlw	24
  5454  001112  5C01               	subwf	digitalWrite@pin^0,w,c
  5455  001114  B0D8               	btfsc	status,0,c
  5456  001116  EF8F  F008         	goto	u1951
  5457  00111A  EF91  F008         	goto	u1950
  5458  00111E                     u1951:
  5459  00111E  EFBF  F008         	goto	l2206
  5460  001122                     u1950:
  5461  001122                     
  5462                           ;io.c: 24:         pin -=16;
  5463  001122  0EF0               	movlw	240
  5464  001124  2601               	addwf	digitalWrite@pin^0,f,c
  5465  001126  0EFF               	movlw	255
  5466  001128  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5467                           
  5468                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5469  00112A  5003               	movf	digitalWrite@value^0,w,c
  5470  00112C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5471  00112E  B4D8               	btfsc	status,2,c
  5472  001130  EF9C  F008         	goto	u1961
  5473  001134  EF9E  F008         	goto	u1960
  5474  001138                     u1961:
  5475  001138  EFAE  F008         	goto	l2204
  5476  00113C                     u1960:
  5477  00113C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5478  001140  0E01               	movlw	1
  5479  001142  6E06               	movwf	(??_digitalWrite+1)^0,c
  5480  001144  2A05               	incf	??_digitalWrite^0,f,c
  5481  001146  EFA7  F008         	goto	u1974
  5482  00114A                     u1975:
  5483  00114A  90D8               	bcf	status,0,c
  5484  00114C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5485  00114E                     u1974:
  5486  00114E  2E05               	decfsz	??_digitalWrite^0,f,c
  5487  001150  EFA5  F008         	goto	u1975
  5488  001154  5006               	movf	(??_digitalWrite+1)^0,w,c
  5489  001156  1282               	iorwf	130,f,c	;volatile
  5490  001158  EF35  F009         	goto	l140
  5491  00115C                     l2204:
  5492  00115C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5493  001160  0E01               	movlw	1
  5494  001162  6E06               	movwf	(??_digitalWrite+1)^0,c
  5495  001164  2A05               	incf	??_digitalWrite^0,f,c
  5496  001166  EFB7  F008         	goto	u1984
  5497  00116A                     u1985:
  5498  00116A  90D8               	bcf	status,0,c
  5499  00116C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5500  00116E                     u1984:
  5501  00116E  2E05               	decfsz	??_digitalWrite^0,f,c
  5502  001170  EFB5  F008         	goto	u1985
  5503  001174  5006               	movf	(??_digitalWrite+1)^0,w,c
  5504  001176  0AFF               	xorlw	255
  5505  001178  1682               	andwf	130,f,c	;volatile
  5506  00117A  EF35  F009         	goto	l140
  5507  00117E                     l2206:
  5508  00117E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5509  001180  EFCD  F008         	goto	u1990
  5510  001184  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5511  001186  E107               	bnz	u1991
  5512  001188  0E20               	movlw	32
  5513  00118A  5C01               	subwf	digitalWrite@pin^0,w,c
  5514  00118C  B0D8               	btfsc	status,0,c
  5515  00118E  EFCB  F008         	goto	u1991
  5516  001192  EFCD  F008         	goto	u1990
  5517  001196                     u1991:
  5518  001196  EFFB  F008         	goto	l2214
  5519  00119A                     u1990:
  5520  00119A                     
  5521                           ;io.c: 28:         pin -=24;
  5522  00119A  0EE8               	movlw	232
  5523  00119C  2601               	addwf	digitalWrite@pin^0,f,c
  5524  00119E  0EFF               	movlw	255
  5525  0011A0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5526                           
  5527                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5528  0011A2  5003               	movf	digitalWrite@value^0,w,c
  5529  0011A4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5530  0011A6  B4D8               	btfsc	status,2,c
  5531  0011A8  EFD8  F008         	goto	u2001
  5532  0011AC  EFDA  F008         	goto	u2000
  5533  0011B0                     u2001:
  5534  0011B0  EFEA  F008         	goto	l2212
  5535  0011B4                     u2000:
  5536  0011B4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5537  0011B8  0E01               	movlw	1
  5538  0011BA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5539  0011BC  2A05               	incf	??_digitalWrite^0,f,c
  5540  0011BE  EFE3  F008         	goto	u2014
  5541  0011C2                     u2015:
  5542  0011C2  90D8               	bcf	status,0,c
  5543  0011C4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5544  0011C6                     u2014:
  5545  0011C6  2E05               	decfsz	??_digitalWrite^0,f,c
  5546  0011C8  EFE1  F008         	goto	u2015
  5547  0011CC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5548  0011CE  1283               	iorwf	131,f,c	;volatile
  5549  0011D0  EF35  F009         	goto	l140
  5550  0011D4                     l2212:
  5551  0011D4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5552  0011D8  0E01               	movlw	1
  5553  0011DA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5554  0011DC  2A05               	incf	??_digitalWrite^0,f,c
  5555  0011DE  EFF3  F008         	goto	u2024
  5556  0011E2                     u2025:
  5557  0011E2  90D8               	bcf	status,0,c
  5558  0011E4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5559  0011E6                     u2024:
  5560  0011E6  2E05               	decfsz	??_digitalWrite^0,f,c
  5561  0011E8  EFF1  F008         	goto	u2025
  5562  0011EC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5563  0011EE  0AFF               	xorlw	255
  5564  0011F0  1683               	andwf	131,f,c	;volatile
  5565  0011F2  EF35  F009         	goto	l140
  5566  0011F6                     l2214:
  5567  0011F6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5568  0011F8  EF09  F009         	goto	u2030
  5569  0011FC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5570  0011FE  E107               	bnz	u2031
  5571  001200  0E28               	movlw	40
  5572  001202  5C01               	subwf	digitalWrite@pin^0,w,c
  5573  001204  B0D8               	btfsc	status,0,c
  5574  001206  EF07  F009         	goto	u2031
  5575  00120A  EF09  F009         	goto	u2030
  5576  00120E                     u2031:
  5577  00120E  EF35  F009         	goto	l140
  5578  001212                     u2030:
  5579  001212                     
  5580                           ;io.c: 32:         pin -=32;
  5581  001212  0EE0               	movlw	224
  5582  001214  2601               	addwf	digitalWrite@pin^0,f,c
  5583  001216  0EFF               	movlw	255
  5584  001218  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5585                           
  5586                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5587  00121A  5003               	movf	digitalWrite@value^0,w,c
  5588  00121C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5589  00121E  B4D8               	btfsc	status,2,c
  5590  001220  EF14  F009         	goto	u2041
  5591  001224  EF16  F009         	goto	u2040
  5592  001228                     u2041:
  5593  001228  EF26  F009         	goto	l2220
  5594  00122C                     u2040:
  5595  00122C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5596  001230  0E01               	movlw	1
  5597  001232  6E06               	movwf	(??_digitalWrite+1)^0,c
  5598  001234  2A05               	incf	??_digitalWrite^0,f,c
  5599  001236  EF1F  F009         	goto	u2054
  5600  00123A                     u2055:
  5601  00123A  90D8               	bcf	status,0,c
  5602  00123C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5603  00123E                     u2054:
  5604  00123E  2E05               	decfsz	??_digitalWrite^0,f,c
  5605  001240  EF1D  F009         	goto	u2055
  5606  001244  5006               	movf	(??_digitalWrite+1)^0,w,c
  5607  001246  1284               	iorwf	132,f,c	;volatile
  5608  001248  EF35  F009         	goto	l140
  5609  00124C                     l2220:
  5610  00124C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5611  001250  0E01               	movlw	1
  5612  001252  6E06               	movwf	(??_digitalWrite+1)^0,c
  5613  001254  2A05               	incf	??_digitalWrite^0,f,c
  5614  001256  EF2F  F009         	goto	u2064
  5615  00125A                     u2065:
  5616  00125A  90D8               	bcf	status,0,c
  5617  00125C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5618  00125E                     u2064:
  5619  00125E  2E05               	decfsz	??_digitalWrite^0,f,c
  5620  001260  EF2D  F009         	goto	u2065
  5621  001264  5006               	movf	(??_digitalWrite+1)^0,w,c
  5622  001266  0AFF               	xorlw	255
  5623  001268  1684               	andwf	132,f,c	;volatile
  5624  00126A                     l140:
  5625  00126A  0012               	return		;funcret
  5626  00126C                     __end_of_digitalWrite:
  5627                           	callstack 0
  5628                           
  5629 ;; *************** function _ssdDigit *****************
  5630 ;; Defined at:
  5631 ;;		line 34 in file "ssd.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  val             1    wreg     unsigned char 
  5634 ;;  pos             1   14[COMRAM] unsigned char 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  val             1   15[COMRAM] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5646 ;;      Params:         1       0       0       0       0       0       0
  5647 ;;      Locals:         1       0       0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0
  5649 ;;      Totals:         2       0       0       0       0       0       0
  5650 ;;Total ram usage:        2 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_SSD
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text37
  5660  002368                     __ptext37:
  5661                           	callstack 0
  5662  002368                     _ssdDigit:
  5663                           	callstack 29
  5664                           
  5665                           ;incstack = 0
  5666                           ;ssdDigit@val stored from wreg
  5667  002368  6E10               	movwf	ssdDigit@val^0,c
  5668  00236A                     
  5669                           ;ssd.c: 35:     if (pos == 0) {
  5670  00236A  500F               	movf	ssdDigit@pos^0,w,c
  5671  00236C  A4D8               	btfss	status,2,c
  5672  00236E  EFBB  F011         	goto	u2651
  5673  002372  EFBD  F011         	goto	u2650
  5674  002376                     u2651:
  5675  002376  EFBF  F011         	goto	l2494
  5676  00237A                     u2650:
  5677  00237A                     
  5678                           ;ssd.c: 36:         v0 = val;
  5679  00237A  C010  F06A         	movff	ssdDigit@val,_v0
  5680  00237E                     l2494:
  5681                           
  5682                           ;ssd.c: 38:     if (pos == 1) {
  5683  00237E  040F               	decf	ssdDigit@pos^0,w,c
  5684  002380  A4D8               	btfss	status,2,c
  5685  002382  EFC5  F011         	goto	u2661
  5686  002386  EFC7  F011         	goto	u2660
  5687  00238A                     u2661:
  5688  00238A  EFC9  F011         	goto	l2498
  5689  00238E                     u2660:
  5690  00238E                     
  5691                           ;ssd.c: 39:         v1 = val;
  5692  00238E  C010  F069         	movff	ssdDigit@val,_v1
  5693  002392                     l2498:
  5694                           
  5695                           ;ssd.c: 41:     if (pos == 2) {
  5696  002392  0E02               	movlw	2
  5697  002394  180F               	xorwf	ssdDigit@pos^0,w,c
  5698  002396  A4D8               	btfss	status,2,c
  5699  002398  EFD0  F011         	goto	u2671
  5700  00239C  EFD2  F011         	goto	u2670
  5701  0023A0                     u2671:
  5702  0023A0  EFD4  F011         	goto	l2502
  5703  0023A4                     u2670:
  5704  0023A4                     
  5705                           ;ssd.c: 42:         v2 = val;
  5706  0023A4  C010  F068         	movff	ssdDigit@val,_v2
  5707  0023A8                     l2502:
  5708                           
  5709                           ;ssd.c: 44:     if (pos == 3) {
  5710  0023A8  0E03               	movlw	3
  5711  0023AA  180F               	xorwf	ssdDigit@pos^0,w,c
  5712  0023AC  A4D8               	btfss	status,2,c
  5713  0023AE  EFDB  F011         	goto	u2681
  5714  0023B2  EFDD  F011         	goto	u2680
  5715  0023B6                     u2681:
  5716  0023B6  EFDF  F011         	goto	l341
  5717  0023BA                     u2680:
  5718  0023BA                     
  5719                           ;ssd.c: 45:         v3 = val;
  5720  0023BA  C010  F067         	movff	ssdDigit@val,_v3
  5721  0023BE                     l341:
  5722  0023BE  0012               	return		;funcret
  5723  0023C0                     __end_of_ssdDigit:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function ___flge *****************
  5727 ;; Defined at:
  5728 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  ff1             4    0[COMRAM] void 
  5731 ;;  ff2             4    4[COMRAM] void 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;		None               void
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5743 ;;      Params:         8       0       0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0
  5745 ;;      Temps:          4       0       0       0       0       0       0
  5746 ;;      Totals:        12       0       0       0       0       0       0
  5747 ;;Total ram usage:       12 bytes
  5748 ;; Hardware stack levels used: 1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_SSD
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text38
  5757  001C64                     __ptext38:
  5758                           	callstack 0
  5759  001C64                     ___flge:
  5760                           	callstack 29
  5761  001C64  0E00               	movlw	0
  5762  001C66  1401               	andwf	___flge@ff1^0,w,c
  5763  001C68  6E09               	movwf	??___flge^0,c
  5764  001C6A  0E00               	movlw	0
  5765  001C6C  1402               	andwf	(___flge@ff1+1)^0,w,c
  5766  001C6E  6E0A               	movwf	(??___flge+1)^0,c
  5767  001C70  0E80               	movlw	128
  5768  001C72  1403               	andwf	(___flge@ff1+2)^0,w,c
  5769  001C74  6E0B               	movwf	(??___flge+2)^0,c
  5770  001C76  0E7F               	movlw	127
  5771  001C78  1404               	andwf	(___flge@ff1+3)^0,w,c
  5772  001C7A  6E0C               	movwf	(??___flge+3)^0,c
  5773  001C7C  5009               	movf	??___flge^0,w,c
  5774  001C7E  100A               	iorwf	(??___flge+1)^0,w,c
  5775  001C80  100B               	iorwf	(??___flge+2)^0,w,c
  5776  001C82  100C               	iorwf	(??___flge+3)^0,w,c
  5777  001C84  A4D8               	btfss	status,2,c
  5778  001C86  EF47  F00E         	goto	u3231
  5779  001C8A  EF49  F00E         	goto	u3230
  5780  001C8E                     u3231:
  5781  001C8E  EF51  F00E         	goto	l2866
  5782  001C92                     u3230:
  5783  001C92  0E00               	movlw	0
  5784  001C94  6E01               	movwf	___flge@ff1^0,c
  5785  001C96  0E00               	movlw	0
  5786  001C98  6E02               	movwf	(___flge@ff1+1)^0,c
  5787  001C9A  0E00               	movlw	0
  5788  001C9C  6E03               	movwf	(___flge@ff1+2)^0,c
  5789  001C9E  0E00               	movlw	0
  5790  001CA0  6E04               	movwf	(___flge@ff1+3)^0,c
  5791  001CA2                     l2866:
  5792  001CA2  0E00               	movlw	0
  5793  001CA4  1405               	andwf	___flge@ff2^0,w,c
  5794  001CA6  6E09               	movwf	??___flge^0,c
  5795  001CA8  0E00               	movlw	0
  5796  001CAA  1406               	andwf	(___flge@ff2+1)^0,w,c
  5797  001CAC  6E0A               	movwf	(??___flge+1)^0,c
  5798  001CAE  0E80               	movlw	128
  5799  001CB0  1407               	andwf	(___flge@ff2+2)^0,w,c
  5800  001CB2  6E0B               	movwf	(??___flge+2)^0,c
  5801  001CB4  0E7F               	movlw	127
  5802  001CB6  1408               	andwf	(___flge@ff2+3)^0,w,c
  5803  001CB8  6E0C               	movwf	(??___flge+3)^0,c
  5804  001CBA  5009               	movf	??___flge^0,w,c
  5805  001CBC  100A               	iorwf	(??___flge+1)^0,w,c
  5806  001CBE  100B               	iorwf	(??___flge+2)^0,w,c
  5807  001CC0  100C               	iorwf	(??___flge+3)^0,w,c
  5808  001CC2  A4D8               	btfss	status,2,c
  5809  001CC4  EF66  F00E         	goto	u3241
  5810  001CC8  EF68  F00E         	goto	u3240
  5811  001CCC                     u3241:
  5812  001CCC  EF70  F00E         	goto	l2870
  5813  001CD0                     u3240:
  5814  001CD0  0E00               	movlw	0
  5815  001CD2  6E05               	movwf	___flge@ff2^0,c
  5816  001CD4  0E00               	movlw	0
  5817  001CD6  6E06               	movwf	(___flge@ff2+1)^0,c
  5818  001CD8  0E00               	movlw	0
  5819  001CDA  6E07               	movwf	(___flge@ff2+2)^0,c
  5820  001CDC  0E00               	movlw	0
  5821  001CDE  6E08               	movwf	(___flge@ff2+3)^0,c
  5822  001CE0                     l2870:
  5823  001CE0  AE04               	btfss	(___flge@ff1+3)^0,7,c
  5824  001CE2  EF75  F00E         	goto	u3251
  5825  001CE6  EF77  F00E         	goto	u3250
  5826  001CEA                     u3251:
  5827  001CEA  EF80  F00E         	goto	l2874
  5828  001CEE                     u3250:
  5829  001CEE  6C01               	negf	___flge@ff1^0,c
  5830  001CF0  1E02               	comf	(___flge@ff1+1)^0,f,c
  5831  001CF2  B0D8               	btfsc	status,0,c
  5832  001CF4  2A02               	incf	(___flge@ff1+1)^0,f,c
  5833  001CF6  1E03               	comf	(___flge@ff1+2)^0,f,c
  5834  001CF8  B0D8               	btfsc	status,0,c
  5835  001CFA  2A03               	incf	(___flge@ff1+2)^0,f,c
  5836  001CFC  0E80               	movlw	128
  5837  001CFE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  5838  001D00                     l2874:
  5839  001D00  AE08               	btfss	(___flge@ff2+3)^0,7,c
  5840  001D02  EF85  F00E         	goto	u3261
  5841  001D06  EF87  F00E         	goto	u3260
  5842  001D0A                     u3261:
  5843  001D0A  EF90  F00E         	goto	l674
  5844  001D0E                     u3260:
  5845  001D0E  6C05               	negf	___flge@ff2^0,c
  5846  001D10  1E06               	comf	(___flge@ff2+1)^0,f,c
  5847  001D12  B0D8               	btfsc	status,0,c
  5848  001D14  2A06               	incf	(___flge@ff2+1)^0,f,c
  5849  001D16  1E07               	comf	(___flge@ff2+2)^0,f,c
  5850  001D18  B0D8               	btfsc	status,0,c
  5851  001D1A  2A07               	incf	(___flge@ff2+2)^0,f,c
  5852  001D1C  0E80               	movlw	128
  5853  001D1E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5854  001D20                     l674:
  5855  001D20  0E00               	movlw	0
  5856  001D22  1A01               	xorwf	___flge@ff1^0,f,c
  5857  001D24  0E00               	movlw	0
  5858  001D26  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5859  001D28  0E00               	movlw	0
  5860  001D2A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5861  001D2C  0E80               	movlw	128
  5862  001D2E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5863  001D30  0E00               	movlw	0
  5864  001D32  1A05               	xorwf	___flge@ff2^0,f,c
  5865  001D34  0E00               	movlw	0
  5866  001D36  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5867  001D38  0E00               	movlw	0
  5868  001D3A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5869  001D3C  0E80               	movlw	128
  5870  001D3E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5871  001D40  5005               	movf	___flge@ff2^0,w,c
  5872  001D42  5C01               	subwf	___flge@ff1^0,w,c
  5873  001D44  5006               	movf	(___flge@ff2+1)^0,w,c
  5874  001D46  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5875  001D48  5007               	movf	(___flge@ff2+2)^0,w,c
  5876  001D4A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5877  001D4C  5008               	movf	(___flge@ff2+3)^0,w,c
  5878  001D4E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5879  001D50  B0D8               	btfsc	status,0,c
  5880  001D52  EFAD  F00E         	goto	u3271
  5881  001D56  EFAF  F00E         	goto	u3270
  5882  001D5A                     u3271:
  5883  001D5A  EFB2  F00E         	goto	l2880
  5884  001D5E                     u3270:
  5885  001D5E  90D8               	bcf	status,0,c
  5886  001D60  EFB3  F00E         	goto	l679
  5887  001D64                     l2880:
  5888  001D64  80D8               	bsf	status,0,c
  5889  001D66                     l679:
  5890  001D66  0012               	return		;funcret
  5891  001D68                     __end_of___flge:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function ___fladd *****************
  5895 ;; Defined at:
  5896 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  b               4    0[COMRAM] void 
  5899 ;;  a               4    4[COMRAM] void 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  grs             1   15[COMRAM] unsigned char 
  5902 ;;  bexp            1   14[COMRAM] unsigned char 
  5903 ;;  aexp            1   13[COMRAM] unsigned char 
  5904 ;;  signs           1   12[COMRAM] unsigned char 
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  4    0[COMRAM] unsigned char 
  5907 ;; Registers used:
  5908 ;;		wreg, status,2, status,0
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5914 ;;      Params:         8       0       0       0       0       0       0
  5915 ;;      Locals:         4       0       0       0       0       0       0
  5916 ;;      Temps:          4       0       0       0       0       0       0
  5917 ;;      Totals:        16       0       0       0       0       0       0
  5918 ;;Total ram usage:       16 bytes
  5919 ;; Hardware stack levels used: 1
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_SSD
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text39
  5928  00065C                     __ptext39:
  5929                           	callstack 0
  5930  00065C                     ___fladd:
  5931                           	callstack 29
  5932  00065C  5004               	movf	(___fladd@b+3)^0,w,c
  5933  00065E  0B80               	andlw	128
  5934  000660  6E0D               	movwf	___fladd@signs^0,c
  5935  000662  5004               	movf	(___fladd@b+3)^0,w,c
  5936  000664  2404               	addwf	(___fladd@b+3)^0,w,c
  5937  000666  6E0F               	movwf	___fladd@bexp^0,c
  5938  000668  AE03               	btfss	(___fladd@b+2)^0,7,c
  5939  00066A  EF39  F003         	goto	u2721
  5940  00066E  EF3B  F003         	goto	u2720
  5941  000672                     u2721:
  5942  000672  EF3C  F003         	goto	l2586
  5943  000676                     u2720:
  5944  000676  800F               	bsf	___fladd@bexp^0,0,c
  5945  000678                     l2586:
  5946  000678  500F               	movf	___fladd@bexp^0,w,c
  5947  00067A  B4D8               	btfsc	status,2,c
  5948  00067C  EF42  F003         	goto	u2731
  5949  000680  EF44  F003         	goto	u2730
  5950  000684                     u2731:
  5951  000684  EF59  F003         	goto	l2596
  5952  000688                     u2730:
  5953  000688  280F               	incf	___fladd@bexp^0,w,c
  5954  00068A  A4D8               	btfss	status,2,c
  5955  00068C  EF4A  F003         	goto	u2741
  5956  000690  EF4C  F003         	goto	u2740
  5957  000694                     u2741:
  5958  000694  EF54  F003         	goto	l2592
  5959  000698                     u2740:
  5960  000698  0E00               	movlw	0
  5961  00069A  6E01               	movwf	___fladd@b^0,c
  5962  00069C  0E00               	movlw	0
  5963  00069E  6E02               	movwf	(___fladd@b+1)^0,c
  5964  0006A0  0E00               	movlw	0
  5965  0006A2  6E03               	movwf	(___fladd@b+2)^0,c
  5966  0006A4  0E00               	movlw	0
  5967  0006A6  6E04               	movwf	(___fladd@b+3)^0,c
  5968  0006A8                     l2592:
  5969  0006A8  8E03               	bsf	(___fladd@b+2)^0,7,c
  5970  0006AA  0E00               	movlw	0
  5971  0006AC  6E04               	movwf	(___fladd@b+3)^0,c
  5972  0006AE  EF61  F003         	goto	l2598
  5973  0006B2                     l2596:
  5974  0006B2  0E00               	movlw	0
  5975  0006B4  6E01               	movwf	___fladd@b^0,c
  5976  0006B6  0E00               	movlw	0
  5977  0006B8  6E02               	movwf	(___fladd@b+1)^0,c
  5978  0006BA  0E00               	movlw	0
  5979  0006BC  6E03               	movwf	(___fladd@b+2)^0,c
  5980  0006BE  0E00               	movlw	0
  5981  0006C0  6E04               	movwf	(___fladd@b+3)^0,c
  5982  0006C2                     l2598:
  5983  0006C2  5008               	movf	(___fladd@a+3)^0,w,c
  5984  0006C4  0B80               	andlw	128
  5985  0006C6  6E0E               	movwf	___fladd@aexp^0,c
  5986  0006C8  500D               	movf	___fladd@signs^0,w,c
  5987  0006CA  180E               	xorwf	___fladd@aexp^0,w,c
  5988  0006CC  B4D8               	btfsc	status,2,c
  5989  0006CE  EF6B  F003         	goto	u2751
  5990  0006D2  EF6D  F003         	goto	u2750
  5991  0006D6                     u2751:
  5992  0006D6  EF6E  F003         	goto	l2604
  5993  0006DA                     u2750:
  5994  0006DA  8C0D               	bsf	___fladd@signs^0,6,c
  5995  0006DC                     l2604:
  5996  0006DC  5008               	movf	(___fladd@a+3)^0,w,c
  5997  0006DE  2408               	addwf	(___fladd@a+3)^0,w,c
  5998  0006E0  6E0E               	movwf	___fladd@aexp^0,c
  5999  0006E2  AE07               	btfss	(___fladd@a+2)^0,7,c
  6000  0006E4  EF76  F003         	goto	u2761
  6001  0006E8  EF78  F003         	goto	u2760
  6002  0006EC                     u2761:
  6003  0006EC  EF79  F003         	goto	l2610
  6004  0006F0                     u2760:
  6005  0006F0  800E               	bsf	___fladd@aexp^0,0,c
  6006  0006F2                     l2610:
  6007  0006F2  500E               	movf	___fladd@aexp^0,w,c
  6008  0006F4  B4D8               	btfsc	status,2,c
  6009  0006F6  EF7F  F003         	goto	u2771
  6010  0006FA  EF81  F003         	goto	u2770
  6011  0006FE                     u2771:
  6012  0006FE  EF96  F003         	goto	l2620
  6013  000702                     u2770:
  6014  000702  280E               	incf	___fladd@aexp^0,w,c
  6015  000704  A4D8               	btfss	status,2,c
  6016  000706  EF87  F003         	goto	u2781
  6017  00070A  EF89  F003         	goto	u2780
  6018  00070E                     u2781:
  6019  00070E  EF91  F003         	goto	l2616
  6020  000712                     u2780:
  6021  000712  0E00               	movlw	0
  6022  000714  6E05               	movwf	___fladd@a^0,c
  6023  000716  0E00               	movlw	0
  6024  000718  6E06               	movwf	(___fladd@a+1)^0,c
  6025  00071A  0E00               	movlw	0
  6026  00071C  6E07               	movwf	(___fladd@a+2)^0,c
  6027  00071E  0E00               	movlw	0
  6028  000720  6E08               	movwf	(___fladd@a+3)^0,c
  6029  000722                     l2616:
  6030  000722  8E07               	bsf	(___fladd@a+2)^0,7,c
  6031  000724  0E00               	movlw	0
  6032  000726  6E08               	movwf	(___fladd@a+3)^0,c
  6033  000728  EF9E  F003         	goto	l2622
  6034  00072C                     l2620:
  6035  00072C  0E00               	movlw	0
  6036  00072E  6E05               	movwf	___fladd@a^0,c
  6037  000730  0E00               	movlw	0
  6038  000732  6E06               	movwf	(___fladd@a+1)^0,c
  6039  000734  0E00               	movlw	0
  6040  000736  6E07               	movwf	(___fladd@a+2)^0,c
  6041  000738  0E00               	movlw	0
  6042  00073A  6E08               	movwf	(___fladd@a+3)^0,c
  6043  00073C                     l2622:
  6044  00073C  500F               	movf	___fladd@bexp^0,w,c
  6045  00073E  5C0E               	subwf	___fladd@aexp^0,w,c
  6046  000740  B0D8               	btfsc	status,0,c
  6047  000742  EFA5  F003         	goto	u2791
  6048  000746  EFA7  F003         	goto	u2790
  6049  00074A                     u2791:
  6050  00074A  EFCE  F003         	goto	l2658
  6051  00074E                     u2790:
  6052  00074E  AC0D               	btfss	___fladd@signs^0,6,c
  6053  000750  EFAC  F003         	goto	u2801
  6054  000754  EFAE  F003         	goto	u2800
  6055  000758                     u2801:
  6056  000758  EFB0  F003         	goto	l2628
  6057  00075C                     u2800:
  6058  00075C  0E80               	movlw	128
  6059  00075E  1A0D               	xorwf	___fladd@signs^0,f,c
  6060  000760                     l2628:
  6061  000760  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6062  000764  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6063  000768  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6064  00076C  C001  F010         	movff	___fladd@b,___fladd@grs
  6065  000770  C005  F001         	movff	___fladd@a,___fladd@b
  6066  000774  C010  F005         	movff	___fladd@grs,___fladd@a
  6067  000778  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6068  00077C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6069  000780  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6070  000784  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6071  000788  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6072  00078C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6073  000790  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6074  000794  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6075  000798  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6076  00079C                     l2658:
  6077  00079C  0E00               	movlw	0
  6078  00079E  6E10               	movwf	___fladd@grs^0,c
  6079  0007A0  500F               	movf	___fladd@bexp^0,w,c
  6080  0007A2  C00E  F009         	movff	___fladd@aexp,??___fladd
  6081  0007A6  6A0A               	clrf	(??___fladd+1)^0,c
  6082  0007A8  5E09               	subwf	??___fladd^0,f,c
  6083  0007AA  0E00               	movlw	0
  6084  0007AC  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6085  0007AE  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6086  0007B0  EFE3  F003         	goto	u2811
  6087  0007B4  500A               	movf	(??___fladd+1)^0,w,c
  6088  0007B6  E109               	bnz	u2810
  6089  0007B8  0E1A               	movlw	26
  6090  0007BA  5C09               	subwf	??___fladd^0,w,c
  6091  0007BC  A0D8               	btfss	status,0,c
  6092  0007BE  EFE3  F003         	goto	u2811
  6093  0007C2  EFE5  F003         	goto	u2810
  6094  0007C6                     u2811:
  6095  0007C6  EF1C  F004         	goto	l938
  6096  0007CA                     u2810:
  6097  0007CA  5001               	movf	___fladd@b^0,w,c
  6098  0007CC  1002               	iorwf	(___fladd@b+1)^0,w,c
  6099  0007CE  1003               	iorwf	(___fladd@b+2)^0,w,c
  6100  0007D0  1004               	iorwf	(___fladd@b+3)^0,w,c
  6101  0007D2  A4D8               	btfss	status,2,c
  6102  0007D4  EFEE  F003         	goto	u2821
  6103  0007D8  EFF1  F003         	goto	u2820
  6104  0007DC                     u2821:
  6105  0007DC  0E01               	movlw	1
  6106  0007DE  EFF2  F003         	goto	u2830
  6107  0007E2                     u2820:
  6108  0007E2  0E00               	movlw	0
  6109  0007E4                     u2830:
  6110  0007E4  6E10               	movwf	___fladd@grs^0,c
  6111  0007E6  0E00               	movlw	0
  6112  0007E8  6E01               	movwf	___fladd@b^0,c
  6113  0007EA  0E00               	movlw	0
  6114  0007EC  6E02               	movwf	(___fladd@b+1)^0,c
  6115  0007EE  0E00               	movlw	0
  6116  0007F0  6E03               	movwf	(___fladd@b+2)^0,c
  6117  0007F2  0E00               	movlw	0
  6118  0007F4  6E04               	movwf	(___fladd@b+3)^0,c
  6119  0007F6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6120  0007FA  EF25  F004         	goto	l937
  6121  0007FE                     l939:
  6122  0007FE  A010               	btfss	___fladd@grs^0,0,c
  6123  000800  EF04  F004         	goto	u2841
  6124  000804  EF06  F004         	goto	u2840
  6125  000808                     u2841:
  6126  000808  EF0C  F004         	goto	l2670
  6127  00080C                     u2840:
  6128  00080C  90D8               	bcf	status,0,c
  6129  00080E  3010               	rrcf	___fladd@grs^0,w,c
  6130  000810  0901               	iorlw	1
  6131  000812  6E10               	movwf	___fladd@grs^0,c
  6132  000814  EF0E  F004         	goto	l2672
  6133  000818                     l2670:
  6134  000818  90D8               	bcf	status,0,c
  6135  00081A  3210               	rrcf	___fladd@grs^0,f,c
  6136  00081C                     l2672:
  6137  00081C  A001               	btfss	___fladd@b^0,0,c
  6138  00081E  EF13  F004         	goto	u2851
  6139  000822  EF15  F004         	goto	u2850
  6140  000826                     u2851:
  6141  000826  EF16  F004         	goto	l2676
  6142  00082A                     u2850:
  6143  00082A  8E10               	bsf	___fladd@grs^0,7,c
  6144  00082C                     l2676:
  6145  00082C  3404               	rlcf	(___fladd@b+3)^0,w,c
  6146  00082E  3204               	rrcf	(___fladd@b+3)^0,f,c
  6147  000830  3203               	rrcf	(___fladd@b+2)^0,f,c
  6148  000832  3202               	rrcf	(___fladd@b+1)^0,f,c
  6149  000834  3201               	rrcf	___fladd@b^0,f,c
  6150  000836  2A0F               	incf	___fladd@bexp^0,f,c
  6151  000838                     l938:
  6152  000838  500E               	movf	___fladd@aexp^0,w,c
  6153  00083A  5C0F               	subwf	___fladd@bexp^0,w,c
  6154  00083C  A0D8               	btfss	status,0,c
  6155  00083E  EF23  F004         	goto	u2861
  6156  000842  EF25  F004         	goto	u2860
  6157  000846                     u2861:
  6158  000846  EFFF  F003         	goto	l939
  6159  00084A                     u2860:
  6160  00084A                     l937:
  6161  00084A  BC0D               	btfsc	___fladd@signs^0,6,c
  6162  00084C  EF2A  F004         	goto	u2871
  6163  000850  EF2C  F004         	goto	u2870
  6164  000854                     u2871:
  6165  000854  EF6C  F004         	goto	l2704
  6166  000858                     u2870:
  6167  000858  500F               	movf	___fladd@bexp^0,w,c
  6168  00085A  A4D8               	btfss	status,2,c
  6169  00085C  EF32  F004         	goto	u2881
  6170  000860  EF34  F004         	goto	u2880
  6171  000864                     u2881:
  6172  000864  EF3E  F004         	goto	l2686
  6173  000868                     u2880:
  6174  000868  0E00               	movlw	0
  6175  00086A  6E01               	movwf	?___fladd^0,c
  6176  00086C  0E00               	movlw	0
  6177  00086E  6E02               	movwf	(?___fladd+1)^0,c
  6178  000870  0E00               	movlw	0
  6179  000872  6E03               	movwf	(?___fladd+2)^0,c
  6180  000874  0E00               	movlw	0
  6181  000876  6E04               	movwf	(?___fladd+3)^0,c
  6182  000878  EF8D  F005         	goto	l946
  6183  00087C                     l2686:
  6184  00087C  5005               	movf	___fladd@a^0,w,c
  6185  00087E  2601               	addwf	___fladd@b^0,f,c
  6186  000880  5006               	movf	(___fladd@a+1)^0,w,c
  6187  000882  2202               	addwfc	(___fladd@b+1)^0,f,c
  6188  000884  5007               	movf	(___fladd@a+2)^0,w,c
  6189  000886  2203               	addwfc	(___fladd@b+2)^0,f,c
  6190  000888  5008               	movf	(___fladd@a+3)^0,w,c
  6191  00088A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6192  00088C  A004               	btfss	(___fladd@b+3)^0,0,c
  6193  00088E  EF4B  F004         	goto	u2891
  6194  000892  EF4D  F004         	goto	u2890
  6195  000896                     u2891:
  6196  000896  EFF9  F004         	goto	l2740
  6197  00089A                     u2890:
  6198  00089A  A010               	btfss	___fladd@grs^0,0,c
  6199  00089C  EF52  F004         	goto	u2901
  6200  0008A0  EF54  F004         	goto	u2900
  6201  0008A4                     u2901:
  6202  0008A4  EF5A  F004         	goto	l2694
  6203  0008A8                     u2900:
  6204  0008A8  90D8               	bcf	status,0,c
  6205  0008AA  3010               	rrcf	___fladd@grs^0,w,c
  6206  0008AC  0901               	iorlw	1
  6207  0008AE  6E10               	movwf	___fladd@grs^0,c
  6208  0008B0  EF5C  F004         	goto	l2696
  6209  0008B4                     l2694:
  6210  0008B4  90D8               	bcf	status,0,c
  6211  0008B6  3210               	rrcf	___fladd@grs^0,f,c
  6212  0008B8                     l2696:
  6213  0008B8  A001               	btfss	___fladd@b^0,0,c
  6214  0008BA  EF61  F004         	goto	u2911
  6215  0008BE  EF63  F004         	goto	u2910
  6216  0008C2                     u2911:
  6217  0008C2  EF64  F004         	goto	l2700
  6218  0008C6                     u2910:
  6219  0008C6  8E10               	bsf	___fladd@grs^0,7,c
  6220  0008C8                     l2700:
  6221  0008C8  3404               	rlcf	(___fladd@b+3)^0,w,c
  6222  0008CA  3204               	rrcf	(___fladd@b+3)^0,f,c
  6223  0008CC  3203               	rrcf	(___fladd@b+2)^0,f,c
  6224  0008CE  3202               	rrcf	(___fladd@b+1)^0,f,c
  6225  0008D0  3201               	rrcf	___fladd@b^0,f,c
  6226  0008D2  2A0F               	incf	___fladd@bexp^0,f,c
  6227  0008D4  EFF9  F004         	goto	l2740
  6228  0008D8                     l2704:
  6229  0008D8  5005               	movf	___fladd@a^0,w,c
  6230  0008DA  5C01               	subwf	___fladd@b^0,w,c
  6231  0008DC  5006               	movf	(___fladd@a+1)^0,w,c
  6232  0008DE  5802               	subwfb	(___fladd@b+1)^0,w,c
  6233  0008E0  5007               	movf	(___fladd@a+2)^0,w,c
  6234  0008E2  5803               	subwfb	(___fladd@b+2)^0,w,c
  6235  0008E4  5004               	movf	(___fladd@b+3)^0,w,c
  6236  0008E6  0A80               	xorlw	128
  6237  0008E8  6E09               	movwf	??___fladd^0,c
  6238  0008EA  5008               	movf	(___fladd@a+3)^0,w,c
  6239  0008EC  0A80               	xorlw	128
  6240  0008EE  5809               	subwfb	??___fladd^0,w,c
  6241  0008F0  B0D8               	btfsc	status,0,c
  6242  0008F2  EF7D  F004         	goto	u2921
  6243  0008F6  EF7F  F004         	goto	u2920
  6244  0008FA                     u2921:
  6245  0008FA  EFAA  F004         	goto	l2714
  6246  0008FE                     u2920:
  6247  0008FE  5001               	movf	___fladd@b^0,w,c
  6248  000900  5C05               	subwf	___fladd@a^0,w,c
  6249  000902  6E09               	movwf	??___fladd^0,c
  6250  000904  5002               	movf	(___fladd@b+1)^0,w,c
  6251  000906  5806               	subwfb	(___fladd@a+1)^0,w,c
  6252  000908  6E0A               	movwf	(??___fladd+1)^0,c
  6253  00090A  5003               	movf	(___fladd@b+2)^0,w,c
  6254  00090C  5807               	subwfb	(___fladd@a+2)^0,w,c
  6255  00090E  6E0B               	movwf	(??___fladd+2)^0,c
  6256  000910  5004               	movf	(___fladd@b+3)^0,w,c
  6257  000912  5808               	subwfb	(___fladd@a+3)^0,w,c
  6258  000914  6E0C               	movwf	(??___fladd+3)^0,c
  6259  000916  0EFF               	movlw	255
  6260  000918  2409               	addwf	??___fladd^0,w,c
  6261  00091A  6E01               	movwf	___fladd@b^0,c
  6262  00091C  0EFF               	movlw	255
  6263  00091E  200A               	addwfc	(??___fladd+1)^0,w,c
  6264  000920  6E02               	movwf	(___fladd@b+1)^0,c
  6265  000922  0EFF               	movlw	255
  6266  000924  200B               	addwfc	(??___fladd+2)^0,w,c
  6267  000926  6E03               	movwf	(___fladd@b+2)^0,c
  6268  000928  0EFF               	movlw	255
  6269  00092A  200C               	addwfc	(??___fladd+3)^0,w,c
  6270  00092C  6E04               	movwf	(___fladd@b+3)^0,c
  6271  00092E  0E80               	movlw	128
  6272  000930  1A0D               	xorwf	___fladd@signs^0,f,c
  6273  000932  6C10               	negf	___fladd@grs^0,c
  6274  000934  5010               	movf	___fladd@grs^0,w,c
  6275  000936  A4D8               	btfss	status,2,c
  6276  000938  EFA0  F004         	goto	u2931
  6277  00093C  EFA2  F004         	goto	u2930
  6278  000940                     u2931:
  6279  000940  EFB2  F004         	goto	l954
  6280  000944                     u2930:
  6281  000944  0E01               	movlw	1
  6282  000946  2601               	addwf	___fladd@b^0,f,c
  6283  000948  0E00               	movlw	0
  6284  00094A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6285  00094C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6286  00094E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6287  000950  EFB2  F004         	goto	l954
  6288  000954                     l2714:
  6289  000954  5005               	movf	___fladd@a^0,w,c
  6290  000956  5E01               	subwf	___fladd@b^0,f,c
  6291  000958  5006               	movf	(___fladd@a+1)^0,w,c
  6292  00095A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6293  00095C  5007               	movf	(___fladd@a+2)^0,w,c
  6294  00095E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6295  000960  5008               	movf	(___fladd@a+3)^0,w,c
  6296  000962  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6297  000964                     l954:
  6298  000964  5001               	movf	___fladd@b^0,w,c
  6299  000966  1002               	iorwf	(___fladd@b+1)^0,w,c
  6300  000968  1003               	iorwf	(___fladd@b+2)^0,w,c
  6301  00096A  1004               	iorwf	(___fladd@b+3)^0,w,c
  6302  00096C  A4D8               	btfss	status,2,c
  6303  00096E  EFBB  F004         	goto	u2941
  6304  000972  EFBD  F004         	goto	u2940
  6305  000976                     u2941:
  6306  000976  EFF2  F004         	goto	l2738
  6307  00097A                     u2940:
  6308  00097A  5010               	movf	___fladd@grs^0,w,c
  6309  00097C  A4D8               	btfss	status,2,c
  6310  00097E  EFC3  F004         	goto	u2951
  6311  000982  EFC5  F004         	goto	u2950
  6312  000986                     u2951:
  6313  000986  EFF2  F004         	goto	l2738
  6314  00098A                     u2950:
  6315  00098A  0E00               	movlw	0
  6316  00098C  6E01               	movwf	?___fladd^0,c
  6317  00098E  0E00               	movlw	0
  6318  000990  6E02               	movwf	(?___fladd+1)^0,c
  6319  000992  0E00               	movlw	0
  6320  000994  6E03               	movwf	(?___fladd+2)^0,c
  6321  000996  0E00               	movlw	0
  6322  000998  6E04               	movwf	(?___fladd+3)^0,c
  6323  00099A  EF8D  F005         	goto	l946
  6324  00099E                     l2722:
  6325  00099E  90D8               	bcf	status,0,c
  6326  0009A0  3601               	rlcf	___fladd@b^0,f,c
  6327  0009A2  3602               	rlcf	(___fladd@b+1)^0,f,c
  6328  0009A4  3603               	rlcf	(___fladd@b+2)^0,f,c
  6329  0009A6  3604               	rlcf	(___fladd@b+3)^0,f,c
  6330  0009A8  AE10               	btfss	___fladd@grs^0,7,c
  6331  0009AA  EFD9  F004         	goto	u2961
  6332  0009AE  EFDB  F004         	goto	u2960
  6333  0009B2                     u2961:
  6334  0009B2  EFDC  F004         	goto	l2728
  6335  0009B6                     u2960:
  6336  0009B6  8001               	bsf	___fladd@b^0,0,c
  6337  0009B8                     l2728:
  6338  0009B8  A010               	btfss	___fladd@grs^0,0,c
  6339  0009BA  EFE1  F004         	goto	u2971
  6340  0009BE  EFE3  F004         	goto	u2970
  6341  0009C2                     u2971:
  6342  0009C2  EFE7  F004         	goto	l2732
  6343  0009C6                     u2970:
  6344  0009C6  80D8               	bsf	status,0,c
  6345  0009C8  3610               	rlcf	___fladd@grs^0,f,c
  6346  0009CA  EFE9  F004         	goto	l2734
  6347  0009CE                     l2732:
  6348  0009CE  90D8               	bcf	status,0,c
  6349  0009D0  3610               	rlcf	___fladd@grs^0,f,c
  6350  0009D2                     l2734:
  6351  0009D2  500F               	movf	___fladd@bexp^0,w,c
  6352  0009D4  B4D8               	btfsc	status,2,c
  6353  0009D6  EFEF  F004         	goto	u2981
  6354  0009DA  EFF1  F004         	goto	u2980
  6355  0009DE                     u2981:
  6356  0009DE  EFF2  F004         	goto	l2738
  6357  0009E2                     u2980:
  6358  0009E2  060F               	decf	___fladd@bexp^0,f,c
  6359  0009E4                     l2738:
  6360  0009E4  AE03               	btfss	(___fladd@b+2)^0,7,c
  6361  0009E6  EFF7  F004         	goto	u2991
  6362  0009EA  EFF9  F004         	goto	u2990
  6363  0009EE                     u2991:
  6364  0009EE  EFCF  F004         	goto	l2722
  6365  0009F2                     u2990:
  6366  0009F2                     l2740:
  6367  0009F2  0E00               	movlw	0
  6368  0009F4  6E0E               	movwf	___fladd@aexp^0,c
  6369  0009F6  AE10               	btfss	___fladd@grs^0,7,c
  6370  0009F8  EF00  F005         	goto	u3001
  6371  0009FC  EF02  F005         	goto	u3000
  6372  000A00                     u3001:
  6373  000A00  EF1A  F005         	goto	l963
  6374  000A04                     u3000:
  6375  000A04  C010  F009         	movff	___fladd@grs,??___fladd
  6376  000A08  0E7F               	movlw	127
  6377  000A0A  1609               	andwf	??___fladd^0,f,c
  6378  000A0C  B4D8               	btfsc	status,2,c
  6379  000A0E  EF0B  F005         	goto	u3011
  6380  000A12  EF0D  F005         	goto	u3010
  6381  000A16                     u3011:
  6382  000A16  EF11  F005         	goto	l964
  6383  000A1A                     u3010:
  6384  000A1A                     l2746:
  6385  000A1A  0E01               	movlw	1
  6386  000A1C  6E0E               	movwf	___fladd@aexp^0,c
  6387  000A1E  EF1A  F005         	goto	l963
  6388  000A22                     l964:
  6389  000A22  A001               	btfss	___fladd@b^0,0,c
  6390  000A24  EF16  F005         	goto	u3021
  6391  000A28  EF18  F005         	goto	u3020
  6392  000A2C                     u3021:
  6393  000A2C  EF1A  F005         	goto	l963
  6394  000A30                     u3020:
  6395  000A30  EF0D  F005         	goto	l2746
  6396  000A34                     l963:
  6397  000A34  500E               	movf	___fladd@aexp^0,w,c
  6398  000A36  B4D8               	btfsc	status,2,c
  6399  000A38  EF20  F005         	goto	u3031
  6400  000A3C  EF22  F005         	goto	u3030
  6401  000A40                     u3031:
  6402  000A40  EF4D  F005         	goto	l2758
  6403  000A44                     u3030:
  6404  000A44  0E01               	movlw	1
  6405  000A46  2601               	addwf	___fladd@b^0,f,c
  6406  000A48  0E00               	movlw	0
  6407  000A4A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6408  000A4C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6409  000A4E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6410  000A50  A004               	btfss	(___fladd@b+3)^0,0,c
  6411  000A52  EF2D  F005         	goto	u3041
  6412  000A56  EF2F  F005         	goto	u3040
  6413  000A5A                     u3041:
  6414  000A5A  EF4D  F005         	goto	l2758
  6415  000A5E                     u3040:
  6416  000A5E  C001  F009         	movff	___fladd@b,??___fladd
  6417  000A62  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6418  000A66  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6419  000A6A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6420  000A6E  340C               	rlcf	(??___fladd+3)^0,w,c
  6421  000A70  320C               	rrcf	(??___fladd+3)^0,f,c
  6422  000A72  320B               	rrcf	(??___fladd+2)^0,f,c
  6423  000A74  320A               	rrcf	(??___fladd+1)^0,f,c
  6424  000A76  3209               	rrcf	??___fladd^0,f,c
  6425  000A78  C009  F001         	movff	??___fladd,___fladd@b
  6426  000A7C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6427  000A80  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6428  000A84  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6429  000A88  280F               	incf	___fladd@bexp^0,w,c
  6430  000A8A  B4D8               	btfsc	status,2,c
  6431  000A8C  EF4A  F005         	goto	u3051
  6432  000A90  EF4C  F005         	goto	u3050
  6433  000A94                     u3051:
  6434  000A94  EF4D  F005         	goto	l2758
  6435  000A98                     u3050:
  6436  000A98  2A0F               	incf	___fladd@bexp^0,f,c
  6437  000A9A                     l2758:
  6438  000A9A  280F               	incf	___fladd@bexp^0,w,c
  6439  000A9C  B4D8               	btfsc	status,2,c
  6440  000A9E  EF53  F005         	goto	u3061
  6441  000AA2  EF55  F005         	goto	u3060
  6442  000AA6                     u3061:
  6443  000AA6  EF5D  F005         	goto	l2762
  6444  000AAA                     u3060:
  6445  000AAA  500F               	movf	___fladd@bexp^0,w,c
  6446  000AAC  A4D8               	btfss	status,2,c
  6447  000AAE  EF5B  F005         	goto	u3071
  6448  000AB2  EF5D  F005         	goto	u3070
  6449  000AB6                     u3071:
  6450  000AB6  EF6F  F005         	goto	l2766
  6451  000ABA                     u3070:
  6452  000ABA                     l2762:
  6453  000ABA  0E00               	movlw	0
  6454  000ABC  6E01               	movwf	___fladd@b^0,c
  6455  000ABE  0E00               	movlw	0
  6456  000AC0  6E02               	movwf	(___fladd@b+1)^0,c
  6457  000AC2  0E00               	movlw	0
  6458  000AC4  6E03               	movwf	(___fladd@b+2)^0,c
  6459  000AC6  0E00               	movlw	0
  6460  000AC8  6E04               	movwf	(___fladd@b+3)^0,c
  6461  000ACA  500F               	movf	___fladd@bexp^0,w,c
  6462  000ACC  A4D8               	btfss	status,2,c
  6463  000ACE  EF6B  F005         	goto	u3081
  6464  000AD2  EF6D  F005         	goto	u3080
  6465  000AD6                     u3081:
  6466  000AD6  EF6F  F005         	goto	l2766
  6467  000ADA                     u3080:
  6468  000ADA  0E00               	movlw	0
  6469  000ADC  6E0D               	movwf	___fladd@signs^0,c
  6470  000ADE                     l2766:
  6471  000ADE  A00F               	btfss	___fladd@bexp^0,0,c
  6472  000AE0  EF74  F005         	goto	u3091
  6473  000AE4  EF76  F005         	goto	u3090
  6474  000AE8                     u3091:
  6475  000AE8  EF79  F005         	goto	l2770
  6476  000AEC                     u3090:
  6477  000AEC  8E03               	bsf	(___fladd@b+2)^0,7,c
  6478  000AEE  EF7A  F005         	goto	l2772
  6479  000AF2                     l2770:
  6480  000AF2  9E03               	bcf	(___fladd@b+2)^0,7,c
  6481  000AF4                     l2772:
  6482  000AF4  90D8               	bcf	status,0,c
  6483  000AF6  300F               	rrcf	___fladd@bexp^0,w,c
  6484  000AF8  6E04               	movwf	(___fladd@b+3)^0,c
  6485  000AFA  AE0D               	btfss	___fladd@signs^0,7,c
  6486  000AFC  EF82  F005         	goto	u3101
  6487  000B00  EF84  F005         	goto	u3100
  6488  000B04                     u3101:
  6489  000B04  EF85  F005         	goto	l2778
  6490  000B08                     u3100:
  6491  000B08  8E04               	bsf	(___fladd@b+3)^0,7,c
  6492  000B0A                     l2778:
  6493  000B0A  C001  F001         	movff	___fladd@b,?___fladd
  6494  000B0E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6495  000B12  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6496  000B16  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6497  000B1A                     l946:
  6498  000B1A  0012               	return		;funcret
  6499  000B1C                     __end_of___fladd:
  6500                           	callstack 0
  6501                           
  6502 ;; *************** function ___awmod *****************
  6503 ;; Defined at:
  6504 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  dividend        2    8[COMRAM] int 
  6507 ;;  divisor         2   10[COMRAM] int 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  sign            1   13[COMRAM] unsigned char 
  6510 ;;  counter         1   12[COMRAM] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2    8[COMRAM] int 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6520 ;;      Params:         4       0       0       0       0       0       0
  6521 ;;      Locals:         2       0       0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0
  6523 ;;      Totals:         6       0       0       0       0       0       0
  6524 ;;Total ram usage:        6 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_SSD
  6530 ;;		_sinalizar
  6531 ;;		_lcdNumber
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text40
  6536  001EE0                     __ptext40:
  6537                           	callstack 0
  6538  001EE0                     ___awmod:
  6539                           	callstack 29
  6540  001EE0  0E00               	movlw	0
  6541  001EE2  6E0E               	movwf	___awmod@sign^0,c
  6542  001EE4  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  6543  001EE6  EF79  F00F         	goto	u3170
  6544  001EEA  EF77  F00F         	goto	u3171
  6545  001EEE                     u3171:
  6546  001EEE  EF7F  F00F         	goto	l2834
  6547  001EF2                     u3170:
  6548  001EF2  6C09               	negf	___awmod@dividend^0,c
  6549  001EF4  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6550  001EF6  B0D8               	btfsc	status,0,c
  6551  001EF8  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6552  001EFA  0E01               	movlw	1
  6553  001EFC  6E0E               	movwf	___awmod@sign^0,c
  6554  001EFE                     l2834:
  6555  001EFE  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  6556  001F00  EF86  F00F         	goto	u3180
  6557  001F04  EF84  F00F         	goto	u3181
  6558  001F08                     u3181:
  6559  001F08  EF8A  F00F         	goto	l2838
  6560  001F0C                     u3180:
  6561  001F0C  6C0B               	negf	___awmod@divisor^0,c
  6562  001F0E  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  6563  001F10  B0D8               	btfsc	status,0,c
  6564  001F12  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  6565  001F14                     l2838:
  6566  001F14  500B               	movf	___awmod@divisor^0,w,c
  6567  001F16  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  6568  001F18  B4D8               	btfsc	status,2,c
  6569  001F1A  EF91  F00F         	goto	u3191
  6570  001F1E  EF93  F00F         	goto	u3190
  6571  001F22                     u3191:
  6572  001F22  EFB7  F00F         	goto	l2854
  6573  001F26                     u3190:
  6574  001F26  0E01               	movlw	1
  6575  001F28  6E0D               	movwf	___awmod@counter^0,c
  6576  001F2A  EF9B  F00F         	goto	l2844
  6577  001F2E                     l2842:
  6578  001F2E  90D8               	bcf	status,0,c
  6579  001F30  360B               	rlcf	___awmod@divisor^0,f,c
  6580  001F32  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  6581  001F34  2A0D               	incf	___awmod@counter^0,f,c
  6582  001F36                     l2844:
  6583  001F36  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  6584  001F38  EFA0  F00F         	goto	u3201
  6585  001F3C  EFA2  F00F         	goto	u3200
  6586  001F40                     u3201:
  6587  001F40  EF97  F00F         	goto	l2842
  6588  001F44                     u3200:
  6589  001F44                     l2846:
  6590  001F44  500B               	movf	___awmod@divisor^0,w,c
  6591  001F46  5C09               	subwf	___awmod@dividend^0,w,c
  6592  001F48  500C               	movf	(___awmod@divisor+1)^0,w,c
  6593  001F4A  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  6594  001F4C  A0D8               	btfss	status,0,c
  6595  001F4E  EFAB  F00F         	goto	u3211
  6596  001F52  EFAD  F00F         	goto	u3210
  6597  001F56                     u3211:
  6598  001F56  EFB1  F00F         	goto	l2850
  6599  001F5A                     u3210:
  6600  001F5A  500B               	movf	___awmod@divisor^0,w,c
  6601  001F5C  5E09               	subwf	___awmod@dividend^0,f,c
  6602  001F5E  500C               	movf	(___awmod@divisor+1)^0,w,c
  6603  001F60  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  6604  001F62                     l2850:
  6605  001F62  90D8               	bcf	status,0,c
  6606  001F64  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  6607  001F66  320B               	rrcf	___awmod@divisor^0,f,c
  6608  001F68  2E0D               	decfsz	___awmod@counter^0,f,c
  6609  001F6A  EFA2  F00F         	goto	l2846
  6610  001F6E                     l2854:
  6611  001F6E  500E               	movf	___awmod@sign^0,w,c
  6612  001F70  B4D8               	btfsc	status,2,c
  6613  001F72  EFBD  F00F         	goto	u3221
  6614  001F76  EFBF  F00F         	goto	u3220
  6615  001F7A                     u3221:
  6616  001F7A  EFC3  F00F         	goto	l2858
  6617  001F7E                     u3220:
  6618  001F7E  6C09               	negf	___awmod@dividend^0,c
  6619  001F80  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6620  001F82  B0D8               	btfsc	status,0,c
  6621  001F84  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6622  001F86                     l2858:
  6623  001F86  C009  F009         	movff	___awmod@dividend,?___awmod
  6624  001F8A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  6625  001F8E  0012               	return		;funcret
  6626  001F90                     __end_of___awmod:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function ___awdiv *****************
  6630 ;; Defined at:
  6631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  dividend        2    0[COMRAM] int 
  6634 ;;  divisor         2    2[COMRAM] int 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  quotient        2    6[COMRAM] int 
  6637 ;;  sign            1    5[COMRAM] unsigned char 
  6638 ;;  counter         1    4[COMRAM] unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  2    0[COMRAM] int 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2, status,0
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6648 ;;      Params:         4       0       0       0       0       0       0
  6649 ;;      Locals:         4       0       0       0       0       0       0
  6650 ;;      Temps:          0       0       0       0       0       0       0
  6651 ;;      Totals:         8       0       0       0       0       0       0
  6652 ;;Total ram usage:        8 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_SSD
  6658 ;;		_lcdNumber
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text41
  6663  001D68                     __ptext41:
  6664                           	callstack 0
  6665  001D68                     ___awdiv:
  6666                           	callstack 29
  6667  001D68  0E00               	movlw	0
  6668  001D6A  6E06               	movwf	___awdiv@sign^0,c
  6669  001D6C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6670  001D6E  EFBD  F00E         	goto	u3110
  6671  001D72  EFBB  F00E         	goto	u3111
  6672  001D76                     u3111:
  6673  001D76  EFC3  F00E         	goto	l2790
  6674  001D7A                     u3110:
  6675  001D7A  6C03               	negf	___awdiv@divisor^0,c
  6676  001D7C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6677  001D7E  B0D8               	btfsc	status,0,c
  6678  001D80  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6679  001D82  0E01               	movlw	1
  6680  001D84  6E06               	movwf	___awdiv@sign^0,c
  6681  001D86                     l2790:
  6682  001D86  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6683  001D88  EFCA  F00E         	goto	u3120
  6684  001D8C  EFC8  F00E         	goto	u3121
  6685  001D90                     u3121:
  6686  001D90  EFD0  F00E         	goto	l2796
  6687  001D94                     u3120:
  6688  001D94  6C01               	negf	___awdiv@dividend^0,c
  6689  001D96  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6690  001D98  B0D8               	btfsc	status,0,c
  6691  001D9A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6692  001D9C  0E01               	movlw	1
  6693  001D9E  1A06               	xorwf	___awdiv@sign^0,f,c
  6694  001DA0                     l2796:
  6695  001DA0  0E00               	movlw	0
  6696  001DA2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6697  001DA4  0E00               	movlw	0
  6698  001DA6  6E07               	movwf	___awdiv@quotient^0,c
  6699  001DA8  5003               	movf	___awdiv@divisor^0,w,c
  6700  001DAA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6701  001DAC  B4D8               	btfsc	status,2,c
  6702  001DAE  EFDB  F00E         	goto	u3131
  6703  001DB2  EFDD  F00E         	goto	u3130
  6704  001DB6                     u3131:
  6705  001DB6  EF05  F00F         	goto	l2818
  6706  001DBA                     u3130:
  6707  001DBA  0E01               	movlw	1
  6708  001DBC  6E05               	movwf	___awdiv@counter^0,c
  6709  001DBE  EFE5  F00E         	goto	l2804
  6710  001DC2                     l2802:
  6711  001DC2  90D8               	bcf	status,0,c
  6712  001DC4  3603               	rlcf	___awdiv@divisor^0,f,c
  6713  001DC6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6714  001DC8  2A05               	incf	___awdiv@counter^0,f,c
  6715  001DCA                     l2804:
  6716  001DCA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6717  001DCC  EFEA  F00E         	goto	u3141
  6718  001DD0  EFEC  F00E         	goto	u3140
  6719  001DD4                     u3141:
  6720  001DD4  EFE1  F00E         	goto	l2802
  6721  001DD8                     u3140:
  6722  001DD8                     l2806:
  6723  001DD8  90D8               	bcf	status,0,c
  6724  001DDA  3607               	rlcf	___awdiv@quotient^0,f,c
  6725  001DDC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6726  001DDE  5003               	movf	___awdiv@divisor^0,w,c
  6727  001DE0  5C01               	subwf	___awdiv@dividend^0,w,c
  6728  001DE2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6729  001DE4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6730  001DE6  A0D8               	btfss	status,0,c
  6731  001DE8  EFF8  F00E         	goto	u3151
  6732  001DEC  EFFA  F00E         	goto	u3150
  6733  001DF0                     u3151:
  6734  001DF0  EFFF  F00E         	goto	l2814
  6735  001DF4                     u3150:
  6736  001DF4  5003               	movf	___awdiv@divisor^0,w,c
  6737  001DF6  5E01               	subwf	___awdiv@dividend^0,f,c
  6738  001DF8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6739  001DFA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6740  001DFC  8007               	bsf	___awdiv@quotient^0,0,c
  6741  001DFE                     l2814:
  6742  001DFE  90D8               	bcf	status,0,c
  6743  001E00  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6744  001E02  3203               	rrcf	___awdiv@divisor^0,f,c
  6745  001E04  2E05               	decfsz	___awdiv@counter^0,f,c
  6746  001E06  EFEC  F00E         	goto	l2806
  6747  001E0A                     l2818:
  6748  001E0A  5006               	movf	___awdiv@sign^0,w,c
  6749  001E0C  B4D8               	btfsc	status,2,c
  6750  001E0E  EF0B  F00F         	goto	u3161
  6751  001E12  EF0D  F00F         	goto	u3160
  6752  001E16                     u3161:
  6753  001E16  EF11  F00F         	goto	l2822
  6754  001E1A                     u3160:
  6755  001E1A  6C07               	negf	___awdiv@quotient^0,c
  6756  001E1C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6757  001E1E  B0D8               	btfsc	status,0,c
  6758  001E20  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6759  001E22                     l2822:
  6760  001E22  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6761  001E26  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6762  001E2A  0012               	return		;funcret
  6763  001E2C                     __end_of___awdiv:
  6764                           	callstack 0
  6765                           
  6766                           	psect	rparam
  6767  0000                     
  6768                           	psect	idloc
  6769                           
  6770                           ;Config register IDLOC0 @ 0x200000
  6771                           ;	unspecified, using default values
  6772  200000                     	org	2097152
  6773  200000  FF                 	db	255
  6774                           
  6775                           ;Config register IDLOC1 @ 0x200001
  6776                           ;	unspecified, using default values
  6777  200001                     	org	2097153
  6778  200001  FF                 	db	255
  6779                           
  6780                           ;Config register IDLOC2 @ 0x200002
  6781                           ;	unspecified, using default values
  6782  200002                     	org	2097154
  6783  200002  FF                 	db	255
  6784                           
  6785                           ;Config register IDLOC3 @ 0x200003
  6786                           ;	unspecified, using default values
  6787  200003                     	org	2097155
  6788  200003  FF                 	db	255
  6789                           
  6790                           ;Config register IDLOC4 @ 0x200004
  6791                           ;	unspecified, using default values
  6792  200004                     	org	2097156
  6793  200004  FF                 	db	255
  6794                           
  6795                           ;Config register IDLOC5 @ 0x200005
  6796                           ;	unspecified, using default values
  6797  200005                     	org	2097157
  6798  200005  FF                 	db	255
  6799                           
  6800                           ;Config register IDLOC6 @ 0x200006
  6801                           ;	unspecified, using default values
  6802  200006                     	org	2097158
  6803  200006  FF                 	db	255
  6804                           
  6805                           ;Config register IDLOC7 @ 0x200007
  6806                           ;	unspecified, using default values
  6807  200007                     	org	2097159
  6808  200007  FF                 	db	255
  6809                           
  6810                           	psect	config
  6811                           
  6812                           ; Padding undefined space
  6813  300000                     	org	3145728
  6814  300000  FF                 	db	255
  6815                           
  6816                           ;Config register CONFIG1H @ 0x300001
  6817                           ;	Oscillator Selection bits
  6818                           ;	OSC = HS, HS oscillator
  6819                           ;	Fail-Safe Clock Monitor Enable bit
  6820                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6821                           ;	Internal/External Oscillator Switchover bit
  6822                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6823  300001                     	org	3145729
  6824  300001  02                 	db	2
  6825                           
  6826                           ;Config register CONFIG2L @ 0x300002
  6827                           ;	Power-up Timer Enable bit
  6828                           ;	PWRT = OFF, PWRT disabled
  6829                           ;	Brown-out Reset Enable bits
  6830                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6831                           ;	Brown Out Reset Voltage bits
  6832                           ;	BORV = 0x2E, user specified literal
  6833  300002                     	org	3145730
  6834  300002  71                 	db	369
  6835                           
  6836                           ;Config register CONFIG2H @ 0x300003
  6837                           ;	Watchdog Timer Enable bit
  6838                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6839                           ;	Watchdog Timer Postscale Select bits
  6840                           ;	WDTPS = 1, 1:1
  6841  300003                     	org	3145731
  6842  300003  00                 	db	0
  6843                           
  6844                           ; Padding undefined space
  6845  300004                     	org	3145732
  6846  300004  FF                 	db	255
  6847                           
  6848                           ;Config register CONFIG3H @ 0x300005
  6849                           ;	CCP2 MUX bit
  6850                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6851                           ;	PORTB A/D Enable bit
  6852                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6853                           ;	Low-Power Timer1 Oscillator Enable bit
  6854                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6855                           ;	MCLR Pin Enable bit
  6856                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6857  300005                     	org	3145733
  6858  300005  83                 	db	131
  6859                           
  6860                           ;Config register CONFIG4L @ 0x300006
  6861                           ;	Stack Full/Underflow Reset Enable bit
  6862                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6863                           ;	Single-Supply ICSP Enable bit
  6864                           ;	LVP = OFF, Single-Supply ICSP disabled
  6865                           ;	Extended Instruction Set Enable bit
  6866                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6867                           ;	Background Debugger Enable bit
  6868                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6869  300006                     	org	3145734
  6870  300006  80                 	db	128
  6871                           
  6872                           ; Padding undefined space
  6873  300007                     	org	3145735
  6874  300007  FF                 	db	255
  6875                           
  6876                           ;Config register CONFIG5L @ 0x300008
  6877                           ;	Code Protection bit
  6878                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6879                           ;	Code Protection bit
  6880                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6881                           ;	Code Protection bit
  6882                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6883                           ;	Code Protection bit
  6884                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6885  300008                     	org	3145736
  6886  300008  0F                 	db	15
  6887                           
  6888                           ;Config register CONFIG5H @ 0x300009
  6889                           ;	Boot Block Code Protection bit
  6890                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6891                           ;	Data EEPROM Code Protection bit
  6892                           ;	CPD = OFF, Data EEPROM not code-protected
  6893  300009                     	org	3145737
  6894  300009  C0                 	db	192
  6895                           
  6896                           ;Config register CONFIG6L @ 0x30000A
  6897                           ;	Write Protection bit
  6898                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6899                           ;	Write Protection bit
  6900                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6901                           ;	Write Protection bit
  6902                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6903                           ;	Write Protection bit
  6904                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6905  30000A                     	org	3145738
  6906  30000A  0F                 	db	15
  6907                           
  6908                           ;Config register CONFIG6H @ 0x30000B
  6909                           ;	Configuration Register Write Protection bit
  6910                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6911                           ;	Boot Block Write Protection bit
  6912                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6913                           ;	Data EEPROM Write Protection bit
  6914                           ;	WRTD = OFF, Data EEPROM not write-protected
  6915  30000B                     	org	3145739
  6916  30000B  E0                 	db	224
  6917                           
  6918                           ;Config register CONFIG7L @ 0x30000C
  6919                           ;	Table Read Protection bit
  6920                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6921                           ;	Table Read Protection bit
  6922                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6923                           ;	Table Read Protection bit
  6924                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6925                           ;	Table Read Protection bit
  6926                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6927  30000C                     	org	3145740
  6928  30000C  0F                 	db	15
  6929                           
  6930                           ;Config register CONFIG7H @ 0x30000D
  6931                           ;	Boot Block Table Read Protection bit
  6932                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6933  30000D                     	org	3145741
  6934  30000D  40                 	db	64
  6935                           tosu	equ	0xFFF
  6936                           tosh	equ	0xFFE
  6937                           tosl	equ	0xFFD
  6938                           stkptr	equ	0xFFC
  6939                           pclatu	equ	0xFFB
  6940                           pclath	equ	0xFFA
  6941                           pcl	equ	0xFF9
  6942                           tblptru	equ	0xFF8
  6943                           tblptrh	equ	0xFF7
  6944                           tblptrl	equ	0xFF6
  6945                           tablat	equ	0xFF5
  6946                           prodh	equ	0xFF4
  6947                           prodl	equ	0xFF3
  6948                           indf0	equ	0xFEF
  6949                           postinc0	equ	0xFEE
  6950                           postdec0	equ	0xFED
  6951                           preinc0	equ	0xFEC
  6952                           plusw0	equ	0xFEB
  6953                           fsr0h	equ	0xFEA
  6954                           fsr0l	equ	0xFE9
  6955                           wreg	equ	0xFE8
  6956                           indf1	equ	0xFE7
  6957                           postinc1	equ	0xFE6
  6958                           postdec1	equ	0xFE5
  6959                           preinc1	equ	0xFE4
  6960                           plusw1	equ	0xFE3
  6961                           fsr1h	equ	0xFE2
  6962                           fsr1l	equ	0xFE1
  6963                           bsr	equ	0xFE0
  6964                           indf2	equ	0xFDF
  6965                           postinc2	equ	0xFDE
  6966                           postdec2	equ	0xFDD
  6967                           preinc2	equ	0xFDC
  6968                           plusw2	equ	0xFDB
  6969                           fsr2h	equ	0xFDA
  6970                           fsr2l	equ	0xFD9
  6971                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    26
    Data        64
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     92     124
    BANK0           128      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> lembrete(COMRAM[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> lembrete(COMRAM[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 16
		 -> tarefas@msg4(COMRAM[16]), tarefas@msg3(COMRAM[16]), tarefas@msg2(COMRAM[16]), tarefas@msg1(COMRAM[16]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 16
		 -> tarefas@msg4(COMRAM[16]), tarefas@msg3(COMRAM[16]), tarefas@msg2(COMRAM[16]), tarefas@msg1(COMRAM[16]), 

    lcdString@msg	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[14]), 
		 -> lembrete(COMRAM[16]), STR_1(CODE[16]), tarefas@msg4(COMRAM[16]), tarefas@msg3(COMRAM[16]), 
		 -> tarefas@msg2(COMRAM[16]), tarefas@msg1(COMRAM[16]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> lembrete(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_tarefas
    _tarefas->_lcdString
    _ssdInit->_pinMode
    _sinalizar->_lcdString
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _Time->___llmod
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpDebounce->_soWrite
    ___llmod->___lldiv
    _SSD->___fladd
    _SSD->_ssdDigit
    _ssdUpdate->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _ssdDigit->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  402566
                                             88 COMRAM     4     4      0
                                _SSD
                               _Time
                             _kpInit
                            _lcdInit
                            _pwmInit
                          _sinalizar
                            _ssdInit
                            _tarefas
 ---------------------------------------------------------------------------------
 (1) _tarefas                                             68    68      0   81731
                                             20 COMRAM    68    68      0
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                          _lcdString
                             _strcpy
                              _tempo
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     704
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _sinalizar                                            2     2      0   69854
                                             20 COMRAM     2     2      0
                            ___awmod
                       _digitalWrite
                         _lcdCommand
                          _lcdString
                             _pwmSet
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0     716
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   66732
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   30301
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Time                                                 8     8      0  143865
                                             22 COMRAM     8     8      0
                            ___lldiv
                            ___llmod
                         _kpDebounce
                             _kpRead
                            _lcdChar
                         _lcdCommand
                        _lcdPosition
                          _lcdString
                              _tempo
 ---------------------------------------------------------------------------------
 (2) _tempo                                                4     4      0     138
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   31445
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   30595
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          4     0      4   30805
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   30565
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   30193
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    6144
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   18529
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _SSD                                                 18    18      0   29535
                                             16 COMRAM    18    18      0
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0   23809
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2   18045
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    5764
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    5764
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         6     2      4    5764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     480
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SSD
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___fladd
     ___flge
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
     _ssdUpdate
       _digitalWrite
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
   _Time
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _kpDebounce
       _digitalRead
       _soWrite
     _kpRead
     _lcdChar
       _delayMicro
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
     _lcdCommand
       _delayMili
       _pushByte
     _lcdPosition
       _lcdCommand
     _lcdString
       _lcdChar
     _tempo
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _pwmInit
     _pwmFrequency
       ___aldiv
   _sinalizar
     ___awmod
     _digitalWrite
     _lcdCommand
     _lcdString
     _pwmSet
       ___lwdiv
       ___wmul
   _ssdInit
     _pinMode
     _soInit
   _tarefas
     _kpDebounce
     _kpRead
     _lcdCommand
     _lcdString
     _strcpy
     _tempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      40       5       50.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5C      7C       1       97.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      15        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 19:26:57 2021

         _pulseEnablePin 2464             lcdString@msg 000F                       l54 1620  
                     l64 0DCE                       l82 1AAE                       l75 1480  
                     l85 1B56             ___awdiv@sign 0006                       _v0 006A  
                     _v1 0069                       _v2 0068                       _v3 0067  
    ___wmul@multiplicand 0003                      l211 1A14                      l140 126A  
                    l213 1A2C                      l303 2560                      l144 18F6  
                    l216 2602                      l400 22B0                      l145 18F2  
                    l233 2632                      l306 265C                      l314 2462  
                    l242 2366                      l250 259A                      l227 275A  
                    l403 26D2                      l236 24A4                      l341 23BE  
                    l309 2686                      l149 18F2                      l245 2734  
                    l253 2716                      l174 101C                      l406 274E  
                    l351 178C                      l191 2758                      l239 26F8  
                    l409 26AC                      l354 2414                      l443 2032  
                    l259 21D0                      l436 2022                      l268 1EDE  
                    l640 1E2A                      l387 230C                      l900 223C  
                    l653 1F8E                      l488 1C62                      l674 1D20  
                    l907 2244                      l836 2152                      l829 2142  
                    l679 1D66                      l937 084A                      l954 0964  
                    l946 0B1A                      l938 0838                      l963 0A34  
                    l939 07FE                      l964 0A22                      _PR2 000FCB  
                    _SSD 126C             ___awmod@sign 000E                      wreg 000FE8  
                   ?_SSD 0001                     l2200 1122                     l3000 0D0A  
                   l2210 11B4                     l2202 113C                     l3010 0D6C  
                   l3002 0D18                     l2220 124C                     l2212 11D4  
                   l2204 115C                     l3020 0DC8                     l3012 0D82  
                   l3004 0D34                     l3100 1ADA                     l2214 11F6  
                   l2206 117E                     l2222 2634                     l3030 12D6  
                   l3022 126C                     l3014 0D90                     l3006 0D42  
                   l2310 0E40                     l2302 0DD0                     l3110 1B1A  
                   l3102 1ADE                     l1086 2522                     l2216 1212  
                   l2208 119A                     l2224 265E                     l2240 244E  
                   l3040 1368                     l3032 133C                     l3024 1290  
                   l3008 0D5E                     l3016 0DA8                     l2320 0ED4  
                   l2312 0E5C                     l2304 0DEC                     l3120 1E98  
                   l2400 21FC                     l3112 1B2E                     l3104 1AFA  
                   l2218 122C                     l2242 245E                     l2234 242E  
                   l2226 2416                     l3050 13A4                     l3042 137C  
                   l3034 1340                     l3026 12A0                     l2250 2604  
                   l3018 0DAC                     l2330 0F5E                     l2322 0EE6  
                   l2314 0E6E                     l2306 0DFE                     l3130 1ED8  
                   l3122 1EB2                     l2410 2230                     l2402 220A  
                   l3114 1B42                     l3106 1B00                     l2500 23A4  
                   l2236 2446                     l2228 242A                     l3060 1448  
                   l3052 13A8                     l3044 1380                     l3036 135C  
                   l2252 2610                     l2244 2464                     l2260 26FC  
                   l2420 2194                     l2340 0FFA                     l2332 0F82  
                   l2324 0F0A                     l2316 0E92                     l2308 0E1E  
                   l3132 25D2                     l3124 1EC0                     l3116 1E2C  
                   l3140 273C                     l2412 2236                     l2404 2210  
                   l3108 1B06                     l2502 23A8                     l2190 108E  
                   l2182 101E                     l2238 244C                     l2510 169A  
                   l3054 13C6                     l3046 1388                     l3038 1364  
                   l3062 144C                     l2254 2614                     l2246 2478  
                   l2262 270A                     l2414 2154                     l2430 22D4  
                   l2422 22B4                     l2334 0FA8                     l2326 0F30  
                   l2318 0EB8                     l3134 25FE                     l3126 1ECC  
                   l3118 1E8C                     l2350 1B5C                     l3142 273E  
                   l2406 2226                     l2342 2688                     l3150 203C  
                   l2600 06C8                     l2504 23BA                     l2192 10AA  
                   l2184 103A                     l2520 16EA                     l2512 16AE  
                   l3056 13F8                     l3048 139C                     l3064 1450  
                   l2280 181A                     l2272 17D2                     l2264 178E  
                   l2248 2484                     l2256 2310                     l2416 2160  
                   l2440 22F2                     l2432 22D8                     l2424 22BC  
                   l2336 0FC4                     l2328 0F4C                     l3128 1ED2  
                   l2360 1B9C                     l2352 1B6A                     l3144 2742  
                   l3136 2736                     l2408 222E                     l2344 26A4  
                   l3080 1A60                     l3072 1A3A                     l3240 20A2  
                   l3160 2054                     l3152 2040                     l2610 06F2  
                   l2602 06DA                     l2194 10C4                     l2186 104C  
                   l3242 1766                     l2530 174A                     l2522 1702  
                   l2514 16B6                     l2506 1622                     l3058 1416  
                   l2290 187E                     l2282 1836                     l2274 17EE  
                   l2266 17AA                     l2450 1908                     l2258 271A  
                   l2418 2190                     l2426 22C0                     l2338 0FD6  
                   l2370 1BDA                     l2362 1BA0                     l2354 1B7A  
                   l3138 2738                     l3090 1AAC                     l3082 1A6C  
                   l3074 1A40                     l3066 1A2E                     l3146 23C0  
                   l3170 2080                     l3162 2060                     l3154 2044  
                   l2700 08C8                     l2612 0702                     l2620 072C  
                   l2604 06DC                     l2196 10E4                     l2188 106C  
                   l2524 1716                     l2516 16CE                     l2508 1682  
                   l2460 19B8                     l2436 22EC                     l2444 22F8  
                   l2380 1C22                     l2372 1BE8                     l2364 1BB0  
                   l2356 1B7E                     l2348 1B58                     l3092 1ABC  
                   l3084 1A72                     l3076 1A4C                     l3172 2084  
                   l3164 2064                     l3156 2048                     l3148 2034  
                   l2710 0934                     l2702 08D2                     l2630 0764  
                   l2622 073C                     l2614 0712                     l2606 06E2  
                   l2198 1106                     l2526 171E                     l2518 16E2  
                   l2470 1A08                     l2462 19E2                     l2454 1928  
                   l2446 22FA                     l2382 1C2C                     l2374 1BF2  
                   l2366 1BC6                     l2358 1B8C                     l2550 22A2  
                   l2542 2248                     l3094 1AC0                     l3086 1A98  
                   l3078 1A5A                     l3166 2070                     l3158 2050  
                   l2800 1DBA                     l2712 0944                     l2704 08D8  
                   l2640 0778                     l2632 0768                     l2624 074E  
                   l2616 0722                     l2608 06F0                     l2528 1736  
                   l2536 1752                     l2560 1FA0                     l2296 18AA  
                   l2288 1862                     l2472 1A0C                     l2456 1974  
                   l2448 18F8                     l2552 2524                     l2376 1C10  
                   l2368 1BCE                     l2384 1C32                     l2392 21D2  
                   l2544 2266                     l3096 1AC6                     l3088 1A9E  
                   l2480 24F6                     l3168 2074                     l3176 208C  
                   SSD@i 0017                     l2810 1DF4                     l2802 1DC2  
                   l2730 09C6                     l2722 099E                     l2706 08FE  
                   l2714 0954                     l2650 078C                     l2642 077C  
                   l2634 076C                     l2626 075C                     l2618 0724  
                   l2490 236A                     l2570 1FE2                     l2562 1FB6  
                   l2298 18C6                     l2474 1A24                     l2458 199A  
                   l2466 19EA                     l2482 2562                     l2554 26D6  
                   l2386 1C42                     l2378 1C20                     l2394 21DA  
                   l2546 2282                     l3098 1AD4                     l2820 1E1A  
                   l2812 1DFC                     l2804 1DCA                     l2732 09CE  
                   l2724 09A8                     l2716 097A                     l2708 0932  
                   l2740 09F2                     l2660 07A0                     l2652 0790  
                   l2644 0780                     l2636 0770                     l2628 0760  
                   l2580 065C                     l2492 237A                     l2572 2000  
                   l2564 1FBE                     l2468 1A02                     l2476 2750  
                   l2484 2574                     l2388 1C52                     l2556 26AE  
                   l2396 21EC                     l2548 228A                     l2900 1482  
                   l2822 1E22                     l2814 1DFE                     l2806 1DD8  
                   l2830 1EF2                     l2750 0A44                     l2742 09F6  
                   l2734 09D2                     l2726 09B6                     l2718 098A  
                   l2670 0818                     l2662 07CA                     l2654 0794  
                   l2646 0784                     l2638 0774                     l2590 0698  
                   l2582 0668                     l2494 237E                     l2574 2010  
                   l2566 1FCA                     l2558 1F90                     l2486 257E  
                   l2398 21F4                     l2478 24E6                     l2910 14D2  
                   l2902 148A                     l2816 1E04                     l2808 1DDE  
                   l2840 1F26                     l2832 1EFA                     l2760 0AAA  
                   l2752 0A50                     l2744 0A04                     l2736 09E2  
                   l2728 09B8                     l2680 0858                     l2672 081C  
                   l2664 07E6                     l2656 0798                     l2648 0788  
                   l2592 06A8                     l2584 0676                     l2496 238E  
                   l2576 2012                     l2568 1FD8                     l2488 2590  
                   l2920 14FC                     l2912 14D8                     l2904 149C  
                   l2818 1E0A                     l2850 1F62                     l2842 1F2E  
                   l2834 1EFE                     l2826 1EE0                     l2770 0AF2  
                   l2762 0ABA                     l2754 0A5E                     l2746 0A1A  
                   l2738 09E4                     l2690 089A                     l2682 0868  
                   l2674 082A                     l2666 07F6                     l2658 079C  
                   l2594 06AA                     l2586 0678                     l2498 2392  
                   l2578 201C                     l2930 1520                     l2922 1502  
                   l2914 14E4                     l2906 14AE                     l2852 1F68  
                   l2844 1F36                     l2836 1F0C                     l2828 1EE4  
                   l2772 0AF4                     l2764 0ADA                     l2756 0A98  
                   l2692 08A8                     l2676 082C                     l2668 080C  
                   l2588 0688                     l2596 06B2                     l2940 154A  
                   l2932 152C                     l2924 150E                     l2916 14EA  
                   l2908 14C0                     l2790 1D86                     l2782 1D68  
                   l2846 1F44                     l2854 1F6E                     l2838 1F14  
                   l2774 0AFA                     l2766 0ADE                     l2758 0A9A  
                   l2694 08B4                     l2686 087C                     l2678 0836  
                   l2598 06C2                     l2870 1CE0                     l2862 1C64  
                   l2950 157E                     l2934 1532                     l2926 1514  
                   l2918 14F0                     l2792 1D94                     l2784 1D6C  
                   l2856 1F7E                     l2848 1F5A                     l2776 0B08  
                   l2768 0AEC                     l2696 08B8                     l2688 088C  
                   l2880 1D64                     l2872 1CEE                     l2864 1C92  
                   l2960 15D0                     l2952 158C                     l2936 153E  
                   l2928 151A                     l2794 1D9C                     l2786 1D7A  
                   l2858 1F86                     l2778 0B0A                     l2698 08C6  
                   l2874 1D00                     l2866 1CA2                     l2890 20F6  
                   l2970 0B1C                     l2962 15E4                     l2954 15A0  
                   l2946 1552                     l2938 1544                     l2796 1DA0  
                   l2788 1D82                     l2876 1D0E                     l2868 1CD0  
                   l2892 2104                     l2884 20CC                     l2980 0B52  
                   l2972 0B34                     l2964 15F2                     l2956 15AE  
                   l2948 1572                     l2798 1DA8                     l2878 1D5E  
                   l2894 2122                     l2886 20E2                     l2990 0B7C  
                   l2982 0B5E                     l2974 0B3A                     l2958 15C2  
                   l2966 1606                     l2896 2132                     l2888 20EA  
                   l2984 0B64                     l2976 0B46                     l2968 160A  
                   l2898 213C                     l2986 0B70                     l2978 0B4C  
                   l2996 0B84                     l2988 0B76                     l2998 0CFE  
                   STR_1 061B                     STR_2 062B                     STR_3 0644  
                   STR_4 064F                     STR_5 0639                     u2000 11B4  
                   u2001 11B0                     u2030 1212                     u2014 11C6  
                   u2110 17EE                     u2031 120E                     u2015 11C2  
                   u2111 17EA                     u3000 0A04                     u2040 122C  
                   u2024 11E6                     u2104 17BC                     u2200 0DFE  
                   u3001 0A00                     u2041 1228                     u2025 11E2  
                   u2105 17B8                     u2201 0DFA                     u3010 0A1A  
                   u2130 1836                     u3011 0A16                     u2131 1832  
                   u3100 0B08                     u3020 0A30                     u2124 1804  
                   u3101 0B04                     u3021 0A2C                     u2125 1800  
                   u3110 1D7A                     u3030 0A44                     u2054 123E  
                   u2070 245E                     u2150 187E                     u2310 0F4C  
                   u2230 0E5C                     u2214 0E10                     u3111 1D76  
                   u3031 0A40                     u2055 123A                     u2071 245A  
                   u2151 187A                     u2311 0F48                     u2231 0E58  
                   u2215 0E0C                     u3120 1D94                     u3200 1F44  
                   u3040 0A5E                     u2064 125E                     u2144 184C  
                   u2080 2632                     u2320 0F5E                     u2304 0F20  
                   u2240 0E6E                     u2224 0E30                     u2400 1B8C  
                   u3121 1D90                     u3201 1F40                     u3041 0A5A  
                   u2065 125A                     u2145 1848                     u2081 262E  
                   u2321 0F5A                     u2305 0F1C                     u2241 0E6A  
                   u2225 0E2C                     u2401 1B88                     u3130 1DBA  
                   u3210 1F5A                     u3050 0A98                     u2170 18C6  
                   u2090 17AA                     u2410 1BC6                     u3131 1DB6  
                   u3211 1F56                     u3051 0A94                     u2171 18C2  
                   u2091 17A6                     u2411 1BC2                     u3140 1DD8  
                   u3220 1F7E                     u3060 0AAA                     u3300 2122  
                   u2164 1894                     u2500 21D0                     u2420 1BE8  
                   u3141 1DD4                     u3221 1F7A                     u3061 0AA6  
                   u3301 211E                     u2165 1890                     u2501 21CC  
                   u2421 1BE4                     u3150 1DF4                     u3070 0ABA  
                   u3230 1C92                     u2510 22D0                     u2350 0FC4  
                   u2334 0F74                     u2270 0ED4                     u2254 0E84  
                   u2190 0DEC                     u2430 1C10                     u3151 1DF0  
                   u3071 0AB6                     u3231 1C8E                     u2511 22CC  
                   u2351 0FC0                     u2335 0F70                     u2271 0ED0  
                   u2255 0E80                     u2191 0DE8                     u2431 1C0C  
                   u3311 1494                     u3160 1E1A                     u3080 0ADA  
                   u3240 1CD0                     u2184 18DC                     u2600 1A02  
                   u2520 22E8                     u2360 0FD6                     u2344 0F98  
                   u2280 0EE6                     u2264 0EA8                     u2440 1C42  
                   u3400 1620                     u3161 1E16                     u3081 0AD6  
                   u3241 1CCC                     u2185 18D8                     u2601 19FE  
                   u2521 22E4                     u2361 0FD2                     u2345 0F94  
                   u2281 0EE2                     u2265 0EA4                     u2441 1C3E  
                   u3401 161C                     u3321 14A6                     u3170 1EF2  
                   u3090 0AEC                     u3250 1CEE                     u2610 1A24  
                   u2530 230C                     u3410 0CFE                     u2450 21EC  
                   u3171 1EEE                     u3091 0AE8                     u3251 1CEA  
                   u2611 1A20                     u2531 2308                     u3411 0CFA  
                   u2451 21E8                     u3331 14B8                     u3180 1F0C  
                   u3260 1D0E                     u3500 137C                     u2700 1FD8  
                   u2540 1924                     u3420 0D18                     u2460 220A  
                   u2620 2522                     u3181 1F08                     u3261 1D0A  
                   u3501 1378                     u2701 1FD4                     u2541 1920  
                   u3421 0D14                     u2461 2206                     u2621 251E  
                   u3341 14CA                     u3190 1F26                     u3270 1D5E  
                   u1910 10AA                     u3510 139C                     u2710 2000  
                   u2630 2574                     u3430 0D42                     u2374 0FEC  
                   u2294 0EFC                     u2390 1B6A                     u2470 2226  
                   u3350 1572                     u3191 1F22                     u3271 1D5A  
                   u1911 10A6                     u3511 1398                     u2711 1FFC  
                   u2631 2570                     u3431 0D3E                     u2375 0FE8  
                   u2295 0EF8                     u2391 1B66                     u2471 2222  
                   u3351 156E                     u2800 075C                     u2720 0676  
                   u1920 10C4                     u1904 107E                     u3520 1480  
                   u3280 20E2                     u2560 1974                     u2640 2590  
                   u2480 218C                     u3440 0D6C                     u2384 1010  
                   u3360 158C                     u2801 0758                     u2721 0672  
                   u1921 10C0                     u1905 107A                     u3521 147C  
                   u3281 20DE                     u2561 1970                     u2641 258C  
                   u3441 0D68                     u2385 100C                     u3361 1588  
                   u2810 07CA                     u2730 0688                     u2650 237A  
                   u3290 2104                     u2554 1944                     u2490 21C0  
                   u3450 0D90                     u3530 1A5A                     u3370 15AE  
                   u2811 07C6                     u2731 0684                     u2651 2376  
                   u3291 2100                     u2555 193E                     u3451 0D8C  
                   u3531 1A56                     u3371 15AA                     u2900 08A8  
                   u2820 07E2                     u2740 0698                     u2660 238E  
                   u2580 19B8                     u3460 0DC8                     u3540 1A98  
                   u3380 15D0                     u2901 08A4                     u2821 07DC  
                   u2741 0694                     u2661 238A                     u2581 19B4  
                   u3461 0DC4                     u3541 1A94                     u3381 15CC  
                   u2910 08C6                     u2830 07E4                     u2750 06DA  
                   u2670 23A4                     u1950 1122                     u1934 10D6  
                   u1870 103A                     u3470 12D2                     u2574 198C  
                   u3550 1AAC                     u3390 15F2                     u2911 08C2  
                   u2751 06D6                     u2671 23A0                     u1951 111E  
                   u1935 10D2                     u1871 1036                     u3471 12CE  
                   u2575 1986                     u2487 2182                     u3551 1AA8  
                   u3391 15EE                     u2920 08FE                     u2840 080C  
                   u2760 06F0                     u2680 23BA                     u1960 113C  
                   u1944 10F6                     u1880 104C                     u3480 133C  
                   u3560 1ABC                     u2921 08FA                     u2841 0808  
                   u2761 06EC                     u2681 23B6                     u1961 1138  
                   u1945 10F2                     u1881 1048                     u3481 1338  
                   u2497 21B6                     u3561 1AB8                     u2930 0944  
                   u2850 082A                     u2770 0702                     u3490 135C  
                   u2690 1FB6                     u2594 19D4                     u3570 1AD4  
                   u2931 0940                     u2851 0826                     u2771 06FE  
                   u3491 1358                     u2691 1FB2                     u2595 19CE  
                   u3571 1AD0                     u2940 097A                     u2860 084A  
                   u2780 0712                     u3580 1AFA                     u2941 0976  
                   u2861 0846                     u2781 070E                     u3581 1AF6  
                   u2950 098A                     u2870 0858                     u2790 074E  
                   u1990 119A                     u1974 114E                     u1894 105E  
                   u2951 0986                     u2871 0854                     u2791 074A  
                   u1991 1196                     u1975 114A                     u1895 105A  
                   u2960 09B6                     u2880 0868                     u1984 116E  
                   u2961 09B2                     u2881 0864                     u1985 116A  
                   u2970 09C6                     u2890 089A                     u2971 09C2  
                   u2891 0896                     u2980 09E2                     u2981 09DE  
                   u2990 09F2                     u2991 09EE                     _Time 0B1C  
                   _main 2034                     _keys 0065         ??_PulseClockData 0007  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 24A6  
         pwmSet@porcento 000A                    ??_SSD 0011                    ?_Time 0001  
        __end_of___aldiv 1C64          __end_of___fladd 0B1C                    ?_main 0001  
        __end_of___awdiv 1E2C          __end_of___awmod 1F90          __end_of___lldiv 2034  
                  _T0CON 000FD5          ___awdiv@divisor 0003          __end_of___llmod 2154  
                  _T2CON 000FCA          __end_of___lwdiv 2246          ___awdiv@counter 0005  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 2718          __end_of_lcdInit 1EE0  
                  Time@i 0017          __end_of_pinMode 101E                    _valor 0601  
                  _tempo 22B2                    _timer 005D          __end_of_tarefas 1622  
        __end_of_soWrite 2464                    tablat 000FF5          __end_of_ssdInit 2416  
        __end_of_pwmInit 2750                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 126C  
        __initialization 259C             __end_of_Time 0DD0          ?_pulseEnablePin 0001  
           __end_of_main 20CC                   ??_Time 0017                   ??_main 0059  
          __activetblptr 000002     __size_of_digitalRead 016A            SSD@outrotempo 0019  
                 _ADCON1 000FC1         ___llmod@dividend 000E                   _CCPR2L 000FBB  
       ___awdiv@dividend 0001                   ?_tempo 0001                   _INTCON 000FF2  
   __size_of_lcdPosition 003A                   ___flge 1C64                ??___aldiv 0009  
              ??___fladd 0009                   ___wmul 2688                ??___awdiv 0005  
              ??___awmod 000D                ??___lldiv 0009                ??___llmod 0016  
              ??___lwdiv 0005                   _kpInit 25D2                   _kpRead 2750  
                 clear_0 25C2                   _soInit 2524         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F                   _pwmSet 2246          ___awmod@counter 000D  
                 _strcpy 24E6         __end_of_ssdDigit 23C0                ??_pinMode 0005  
           __mediumconst 0000                ??_tarefas 0015                   tempo@i 0002  
                 tempo@j 0003                   tempo@k 0004                   tblptrh 000FF7  
                 tblptrl 000FF6                   tempo@x 0001                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007                ??_pwmInit 0011  
       __end_of_pushByte 2368               ___flge@ff1 0001               ___flge@ff2 0005  
             __accesstop 0080  __end_of__initialization 25C8            ___rparam_used 000001  
          pushByte@value 000D              pinMode@type 0003           __pcstackCOMRAM 0001  
           __pidataBANK0 24A6            __end_of_valor 0611            __end_of_tempo 230E  
     __size_of_delayMili 0030       __size_of_lcdString 007E                  ??_tempo 0001  
  __size_of_digitalWrite 024E               _delayMicro 275A                  ?___flge 0001  
             _lcdCommand 2718                  ?___wmul 0001                  ?_kpInit 0001  
                ?_kpRead 0001                  _CCP2CON 000FBA                  ?_soInit 0001  
             _kpDebounce 18F8                  ?_pwmSet 0001                  ?_strcpy 0001  
     __size_of_sinalizar 012A       __size_of_ssdUpdate 016C             _digitalWrite 101E  
            tarefas@F262 00B0              tarefas@F264 00A0              tarefas@F266 0090  
            tarefas@F268 0080        __end_of_delayMili 2634              tarefas@msg1 0015  
            tarefas@msg2 0025              tarefas@msg3 0035              tarefas@msg4 0045  
       ??_pulseEnablePin 0007                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 000F        __end_of_lcdString 21D2          kpDebounce@tempo 006C  
                ___aldiv 1B58          __size_of___flge 0104                  ___fladd 065C  
                ___awdiv 1D68                  ___awmod 1EE0                ?_pushByte 000A  
                ___lldiv 1F90          __size_of___wmul 0026                  ___llmod 20CC  
                ___lwdiv 21D2             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611              ssdDigit@val 0010  
            ssdDigit@pos 000F                  __pcinit 259C                  _lcdChar 26FA  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 1E2C  
                __ptext0 2034                  __ptext1 1482                  __ptext2 24E6  
                __ptext3 23C0                  __ptext4 1A2E                  __ptext5 2246  
                __ptext6 2688                  __ptext7 21D2                  __ptext8 2736  
                __ptext9 26AE          __size_of_pwmSet 006C                  _display 006B  
        __size_of_strcpy 003E             __size_of_SSD 0216                  _pinMode 0DD0  
       ___awmod@dividend 0009         ___aldiv@dividend 0001                  _tarefas 1482  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 2416  
                _ssdInit 23C0                  _pwmInit 2736     end_of_initialization 25C8  
          ?_PulseEnClock 0001            __Lmediumconst 0000           digitalRead@pin 0001  
          ?_pwmFrequency 000F              ?_delayMicro 0001        __end_of_sinalizar 1B58  
        ___lldiv@divisor 0005        __end_of_ssdUpdate 178E          ___lldiv@counter 000D  
             ??_ssdDigit 0010         ___aldiv@quotient 000B                  postdec1 000FE5  
            ?_lcdCommand 0001                  postinc0 000FEE               ??_pushByte 000C  
__size_of_PulseClockData 002A            ??_digitalRead 0003                  strcpy@d 0007  
                strcpy@s 0005              ?_kpDebounce 0001              ___fladd@grs 0010  
             _pushNibble 26D4               lcdString@i 0013            ??_lcdPosition 0013  
         ??_PulseEnClock 0007           ??_pwmFrequency 0011           __end_of___flge 1D68  
         __end_of___wmul 26AE           __end_of_kpInit 2604           __end_of_kpRead 275A  
         __end_of_soInit 2562           __end_of_pwmSet 22B2           __end_of_strcpy 2524  
    __size_of_delayMicro 0002      start_initialization 259C      __end_of_digitalRead 18F8  
            __end_of_SSD 1482      __size_of_lcdCommand 001E                Time@tecla 001D  
    __size_of_kpDebounce 0136          ___llmod@divisor 0012          ___llmod@counter 0016  
    __end_of_lcdPosition 259C        kpDebounce@oldRead 0061        kpDebounce@newRead 0063  
               ??___flge 0009                 ??___wmul 0005                 ??_kpInit 0007  
               ??_kpRead 0003              __pdataBANK0 0080                 ??_soInit 0007  
               ??_pwmSet 0008                 ??_strcpy 0005                ___fladd@a 0005  
              ___fladd@b 0001              __pbssCOMRAM 005D              ?_pushNibble 000A  
             pinMode@pin 0001                _delayMili 2604         ___lwdiv@dividend 0001  
               ?___aldiv 0001                 ?___fladd 0001                 ?___awdiv 0001  
               ?___awmod 0009                 ?___lldiv 0001        __size_of_ssdDigit 0058  
               ?___llmod 000E           _PulseClockData 265E                 ?___lwdiv 0001  
   __end_of_PulseEnClock 265E                _lcdString 2154              _digitalRead 178E  
               ?_lcdChar 0001        __size_of_pushByte 005A                 ?_lcdInit 0001  
               SSD@conth 0015                 SSD@contm 0021                 SSD@conts 001F  
   __end_of_pwmFrequency 26D4                 SSD@tempo 001B              __smallconst 0600  
               ?_pinMode 0001                 ?_tarefas 0001                 ?_soWrite 0007  
               ?_ssdInit 0001                 ?_pwmInit 0001         ___lwdiv@quotient 0005  
         __size_of_tempo 005C              _lcdPosition 2562         pwmFrequency@freq 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009           ___wmul@product 0005  
           ??_delayMicro 0003               ?_delayMili 0001               sinalizar@i 0015  
 __end_of_PulseClockData 2688      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _sinalizar 1A2E                _ssdUpdate 1622               ?_lcdString 000F  
           ??_kpDebounce 000A        ___wmul@multiplier 0001          lcdCommand@value 000E  
     __end_of_delayMicro 275C             tarefas@tecla 0057                copy_data0 25B0  
     __end_of_lcdCommand 2736               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 1A2E                 Time@cont 0019                 __Hrparam 0000  
               __Lrparam 0000          lcdPosition@line 000F          ?_PulseClockData 0001  
             ?_sinalizar 0001               ?_ssdUpdate 0001         __size_of___aldiv 010C  
       __size_of___fladd 04C0         __size_of___awdiv 00C4         __size_of___awmod 00B0  
__size_of_pulseEnablePin 0042         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of___lwdiv 0074         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
       __size_of_tarefas 01A0                 __ptext10 1B58                 __ptext11 1E2C  
               __ptext20 2562                 __ptext12 26D4                 __ptext21 2718  
               __ptext13 25D2                 __ptext30 1F90                 __ptext22 230E  
               __ptext14 2524                 __ptext31 126C                 __ptext23 2464  
               __ptext15 0DD0                 __ptext40 1EE0                 __ptext32 1622  
               __ptext24 275A                 __ptext16 0B1C                 __ptext41 1D68  
               __ptext33 2416                 __ptext25 2604                 __ptext17 22B2  
               __ptext34 2634                 __ptext26 2750                 __ptext18 2154  
               __ptext35 265E                 __ptext27 18F8                 __ptext19 26FA  
               __ptext36 101E                 __ptext28 178E                 __ptext37 2368  
               __ptext29 20CC                 __ptext38 1C64                 __ptext39 065C  
       __size_of_soWrite 004E         __size_of_ssdInit 0056         __size_of_pwmInit 001A  
             strcpy@dest 0001                 _lembrete 006D            __size_of_Time 02B4  
          __size_of_main 0098              ??_delayMili 0003    __size_of_PulseEnClock 002A  
               _ssdDigit 2368              delayMicro@a 0001                 isa$xinst 000000  
           soWrite@value 0007    __size_of_pwmFrequency 0026                 _pushByte 230E  
              pwmSet@val 000B              ??_lcdString 0011                 main@show 005B  
           ??_pushNibble 000C           lcdPosition@col 0011            ?_digitalWrite 0001  
           _PulseEnClock 2634        digitalWrite@value 0003         ___lldiv@dividend 0001  
               tarefas@i 0055             _pwmFrequency 26AE                strcpy@src 0003  
               soWrite@i 0009              ??_sinalizar 0015              ??_ssdUpdate 000A  
     __end_of_pushNibble 26FA             ?_digitalRead 0001         ___lldiv@quotient 0009  
            kpDebounce@i 000D           ??_digitalWrite 0005             ___aldiv@sign 000A  
          ___fladd@signs 000D             ?_lcdPosition 000F          digitalWrite@pin 0001  
           ___fladd@aexp 000E             ___fladd@bexp 000F  
